/*
 * Copyright (c)  2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated from SiddhiQL.g4 by ANTLR 4.5.1
// jshint ignore: start
var antlr4 = require('../../antlr4-js-runtime/index');

var SiddhiQLListener = require('./SiddhiQLListener').SiddhiQLListener;

//import org.wso2.siddhi.query.compiler.exception.SiddhiParserException;

var grammarFileName = "SiddhiQL.g4";

var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0003i\u04ff\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t",
    "\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004",
    "\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004",
    "\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004",
    "\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014\t",
    "\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017\u0004",
    "\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b\t",
    "\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e\u0004",
    "\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004$\t$\u0004",
    "%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004*\t*\u0004+\t+\u0004",
    ",\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u00042\t2\u0004",
    "3\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u00049\t9\u0004",
    ":\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0004@\t@\u0004",
    "A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004F\tF\u0004G\tG\u0004",
    "H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004M\tM\u0004N\tN\u0004",
    "O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004T\tT\u0004U\tU\u0004",
    "V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004[\t[\u0004\\\t\\\u0004",
    "]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004b\tb\u0004c\tc\u0004",
    "d\td\u0004e\te\u0004f\tf\u0004g\tg\u0003\u0002\u0003\u0002\u0003\u0002",
    "\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0007\u0004\u00d6\n",
    "\u0004\f\u0004\u000e\u0004\u00d9\u000b\u0004\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004\u00e1\n",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0005\u0004\u00ea\n\u0004\u0007\u0004\u00ec\n\u0004",
    "\f\u0004\u000e\u0004\u00ef\u000b\u0004\u0003\u0004\u0005\u0004\u00f2",
    "\n\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004\u00f7\n\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004\u00fc\n\u0004\u0007",
    "\u0004\u00fe\n\u0004\f\u0004\u000e\u0004\u0101\u000b\u0004\u0003\u0004",
    "\u0005\u0004\u0104\n\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004\u010d\n\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0005\u0004\u0116\n\u0004\u0007\u0004\u0118\n\u0004\f\u0004",
    "\u000e\u0004\u011b\u000b\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0005",
    "\u0004\u0120\n\u0004\u0007\u0004\u0122\n\u0004\f\u0004\u000e\u0004\u0125",
    "\u000b\u0004\u0003\u0004\u0005\u0004\u0128\n\u0004\u0005\u0004\u012a",
    "\n\u0004\u0003\u0005\u0003\u0005\u0005\u0005\u012e\n\u0005\u0003\u0006",
    "\u0003\u0006\u0005\u0006\u0132\n\u0006\u0003\u0006\u0003\u0006\u0003",
    "\u0007\u0007\u0007\u0137\n\u0007\f\u0007\u000e\u0007\u013a\u000b\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0007\u0007\u0146\n",
    "\u0007\f\u0007\u000e\u0007\u0149\u000b\u0007\u0003\u0007\u0003\u0007",
    "\u0003\b\u0003\b\u0005\b\u014f\n\b\u0003\b\u0003\b\u0003\t\u0007\t\u0154",
    "\n\t\f\t\u000e\t\u0157\u000b\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0007\t\u0163\n\t\f\t\u000e",
    "\t\u0166\u000b\t\u0003\t\u0003\t\u0003\n\u0003\n\u0005\n\u016c\n\n\u0003",
    "\n\u0003\n\u0003\u000b\u0007\u000b\u0171\n\u000b\f\u000b\u000e\u000b",
    "\u0174\u000b\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003",
    "\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0007",
    "\u000b\u0180\n\u000b\f\u000b\u000e\u000b\u0183\u000b\u000b\u0003\u000b",
    "\u0003\u000b\u0003\u000b\u0003\u000b\u0005\u000b\u0189\n\u000b\u0003",
    "\f\u0003\f\u0005\f\u018d\n\f\u0003\f\u0003\f\u0003\r\u0003\r\u0003\r",
    "\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\u000e",
    "\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011",
    "\u0003\u0011\u0005\u0011\u01a3\n\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003",
    "\u0012\u0005\u0012\u01ae\n\u0012\u0003\u0013\u0003\u0013\u0003\u0014",
    "\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0005\u0014\u01b7\n",
    "\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0005\u0014\u01bc\n\u0014",
    "\u0007\u0014\u01be\n\u0014\f\u0014\u000e\u0014\u01c1\u000b\u0014\u0003",
    "\u0014\u0003\u0014\u0005\u0014\u01c5\n\u0014\u0003\u0015\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015",
    "\u0007\u0015\u01cf\n\u0015\f\u0015\u000e\u0015\u01d2\u000b\u0015\u0003",
    "\u0015\u0003\u0015\u0005\u0015\u01d6\n\u0015\u0003\u0016\u0003\u0016",
    "\u0003\u0016\u0005\u0016\u01db\n\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0017\u0007\u0017\u01e0\n\u0017\f\u0017\u000e\u0017\u01e3\u000b\u0017",
    "\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017",
    "\u0007\u0017\u01eb\n\u0017\f\u0017\u000e\u0017\u01ee\u000b\u0017\u0003",
    "\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0005\u0017\u01f4\n\u0017",
    "\u0003\u0017\u0003\u0017\u0003\u0017\u0005\u0017\u01f9\n\u0017\u0007",
    "\u0017\u01fb\n\u0017\f\u0017\u000e\u0017\u01fe\u000b\u0017\u0003\u0017",
    "\u0005\u0017\u0201\n\u0017\u0003\u0017\u0003\u0017\u0003\u0018\u0003",
    "\u0018\u0005\u0018\u0207\n\u0018\u0003\u0018\u0003\u0018\u0003\u0019",
    "\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019",
    "\u0003\u0019\u0005\u0019\u0213\n\u0019\u0003\u001a\u0003\u001a\u0003",
    "\u001a\u0007\u001a\u0218\n\u001a\f\u001a\u000e\u001a\u021b\u000b\u001a",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001c\u0003\u001c",
    "\u0005\u001c\u0223\n\u001c\u0003\u001c\u0003\u001c\u0003\u001d\u0007",
    "\u001d\u0228\n\u001d\f\u001d\u000e\u001d\u022b\u000b\u001d\u0003\u001d",
    "\u0003\u001d\u0003\u001d\u0005\u001d\u0230\n\u001d\u0003\u001d\u0005",
    "\u001d\u0233\n\u001d\u0003\u001d\u0003\u001d\u0003\u001e\u0003\u001e",
    "\u0003\u001e\u0003\u001e\u0003\u001e\u0005\u001e\u023c\n\u001e\u0003",
    "\u001f\u0003\u001f\u0005\u001f\u0240\n\u001f\u0003\u001f\u0005\u001f",
    "\u0243\n\u001f\u0003\u001f\u0005\u001f\u0246\n\u001f\u0003 \u0003 \u0003",
    " \u0003 \u0003 \u0003 \u0005 \u024e\n \u0003 \u0005 \u0251\n \u0003",
    " \u0003 \u0003 \u0003 \u0003 \u0005 \u0258\n \u0003 \u0005 \u025b\n",
    " \u0003 \u0003 \u0003 \u0003 \u0003 \u0003 \u0005 \u0263\n \u0003 \u0005",
    " \u0266\n \u0005 \u0268\n \u0003!\u0003!\u0005!\u026c\n!\u0003!\u0005",
    "!\u026f\n!\u0003!\u0003!\u0005!\u0273\n!\u0003\"\u0003\"\u0003#\u0003",
    "#\u0003#\u0003#\u0003#\u0005#\u027c\n#\u0003#\u0003#\u0003#\u0003#\u0003",
    "#\u0005#\u0283\n#\u0003#\u0003#\u0003#\u0003#\u0005#\u0289\n#\u0005",
    "#\u028b\n#\u0003#\u0003#\u0003#\u0007#\u0290\n#\f#\u000e#\u0293\u000b",
    "#\u0003$\u0003$\u0003$\u0003$\u0003$\u0005$\u029a\n$\u0003$\u0003$\u0005",
    "$\u029e\n$\u0005$\u02a0\n$\u0003$\u0003$\u0003$\u0007$\u02a5\n$\f$\u000e",
    "$\u02a8\u000b$\u0003%\u0003%\u0003%\u0005%\u02ad\n%\u0003&\u0003&\u0003",
    "&\u0003&\u0005&\u02b3\n&\u0003&\u0003&\u0003&\u0003&\u0003&\u0003&\u0003",
    "&\u0003&\u0005&\u02bd\n&\u0003\'\u0003\'\u0003\'\u0003\'\u0003\'\u0003",
    "(\u0003(\u0003(\u0005(\u02c7\n(\u0003(\u0003(\u0003)\u0003)\u0005)\u02cd",
    "\n)\u0003*\u0006*\u02d0\n*\r*\u000e*\u02d1\u0003+\u0003+\u0005+\u02d6",
    "\n+\u0003,\u0005,\u02d9\n,\u0003,\u0003,\u0005,\u02dd\n,\u0003,\u0003",
    ",\u0003,\u0003-\u0003-\u0003-\u0003-\u0003-\u0005-\u02e7\n-\u0003-\u0003",
    "-\u0005-\u02eb\n-\u0005-\u02ed\n-\u0003-\u0003-\u0003-\u0007-\u02f2",
    "\n-\f-\u000e-\u02f5\u000b-\u0003.\u0003.\u0003.\u0005.\u02fa\n.\u0003",
    "/\u0003/\u0003/\u0003/\u0003/\u0003/\u0003/\u0003/\u0005/\u0304\n/\u0003",
    "0\u00030\u00030\u00030\u00030\u00030\u00030\u00050\u030d\n0\u00030\u0005",
    "0\u0310\n0\u00030\u00030\u00050\u0314\n0\u00050\u0316\n0\u00031\u0005",
    "1\u0319\n1\u00031\u00031\u00031\u00031\u00032\u00032\u00032\u00033\u0003",
    "3\u00033\u00033\u00033\u00034\u00034\u00034\u00034\u00034\u00074\u032c",
    "\n4\f4\u000e4\u032f\u000b4\u00054\u0331\n4\u00034\u00054\u0334\n4\u0003",
    "4\u00054\u0337\n4\u00035\u00035\u00035\u00035\u00035\u00075\u033e\n",
    "5\f5\u000e5\u0341\u000b5\u00036\u00036\u00036\u00037\u00037\u00057\u0348",
    "\n7\u00037\u00037\u00037\u00037\u00037\u00037\u00057\u0350\n7\u0003",
    "7\u00037\u00037\u00037\u00037\u00037\u00037\u00037\u00037\u00037\u0005",
    "7\u035c\n7\u00037\u00037\u00037\u00037\u00037\u00037\u00037\u00057\u0365",
    "\n7\u00037\u00037\u00037\u00037\u00037\u00057\u036c\n7\u00057\u036e",
    "\n7\u00038\u00038\u00038\u00038\u00038\u00038\u00038\u00038\u00038\u0003",
    "8\u00038\u00058\u037b\n8\u00038\u00058\u037e\n8\u00039\u00039\u0005",
    "9\u0382\n9\u00039\u00039\u00039\u00039\u00059\u0388\n9\u00039\u0003",
    "9\u00039\u00039\u00059\u038e\n9\u0003:\u0003:\u0003;\u0003;\u0003;\u0003",
    "<\u0003<\u0003<\u0003<\u0003<\u0005<\u039a\n<\u0003=\u0003=\u0003>\u0003",
    ">\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003",
    "?\u0003?\u0005?\u03ab\n?\u0003?\u0003?\u0003?\u0003?\u0005?\u03b1\n",
    "?\u0003?\u0003?\u0003?\u0003?\u0005?\u03b7\n?\u0003?\u0003?\u0003?\u0003",
    "?\u0003?\u0003?\u0005?\u03bf\n?\u0003?\u0003?\u0003?\u0003?\u0005?\u03c5",
    "\n?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003",
    "?\u0007?\u03d1\n?\f?\u000e?\u03d4\u000b?\u0003@\u0003@\u0003@\u0005",
    "@\u03d9\n@\u0003@\u0003@\u0003@\u0005@\u03de\n@\u0003@\u0003@\u0003",
    "A\u0003A\u0003A\u0007A\u03e5\nA\fA\u000eA\u03e8\u000bA\u0003A\u0005",
    "A\u03eb\nA\u0003B\u0003B\u0003B\u0005B\u03f0\nB\u0003B\u0003B\u0003",
    "B\u0003C\u0005C\u03f6\nC\u0003C\u0003C\u0003C\u0003C\u0003C\u0005C\u03fd",
    "\nC\u0003D\u0005D\u0400\nD\u0003D\u0003D\u0003D\u0003D\u0003D\u0005",
    "D\u0407\nD\u0003D\u0003D\u0003D\u0003D\u0003D\u0003D\u0005D\u040f\n",
    "D\u0005D\u0411\nD\u0003D\u0003D\u0003D\u0003D\u0005D\u0417\nD\u0003",
    "E\u0003E\u0003E\u0003E\u0005E\u041d\nE\u0005E\u041f\nE\u0003F\u0003",
    "F\u0003G\u0003G\u0003H\u0003H\u0003I\u0003I\u0003J\u0003J\u0003J\u0003",
    "J\u0007J\u042d\nJ\fJ\u000eJ\u0430\u000bJ\u0003K\u0003K\u0003L\u0003",
    "L\u0003M\u0003M\u0003N\u0003N\u0003O\u0005O\u043b\nO\u0003O\u0003O\u0003",
    "P\u0003P\u0003Q\u0003Q\u0003R\u0003R\u0005R\u0445\nR\u0003S\u0003S\u0003",
    "S\u0003S\u0003S\u0003S\u0003S\u0003S\u0005S\u044f\nS\u0003T\u0003T\u0003",
    "U\u0003U\u0003U\u0003U\u0003U\u0003U\u0003U\u0003U\u0003U\u0003U\u0003",
    "U\u0003U\u0005U\u045f\nU\u0003U\u0005U\u0462\nU\u0003V\u0003V\u0003",
    "V\u0003V\u0003V\u0003V\u0003V\u0005V\u046b\nV\u0003W\u0003W\u0003X\u0003",
    "X\u0003Y\u0003Y\u0005Y\u0473\nY\u0003Y\u0005Y\u0476\nY\u0003Y\u0005",
    "Y\u0479\nY\u0003Y\u0005Y\u047c\nY\u0003Y\u0005Y\u047f\nY\u0003Y\u0005",
    "Y\u0482\nY\u0003Y\u0005Y\u0485\nY\u0003Y\u0003Y\u0005Y\u0489\nY\u0003",
    "Y\u0005Y\u048c\nY\u0003Y\u0005Y\u048f\nY\u0003Y\u0005Y\u0492\nY\u0003",
    "Y\u0005Y\u0495\nY\u0003Y\u0005Y\u0498\nY\u0003Y\u0003Y\u0005Y\u049c",
    "\nY\u0003Y\u0005Y\u049f\nY\u0003Y\u0005Y\u04a2\nY\u0003Y\u0005Y\u04a5",
    "\nY\u0003Y\u0005Y\u04a8\nY\u0003Y\u0003Y\u0005Y\u04ac\nY\u0003Y\u0005",
    "Y\u04af\nY\u0003Y\u0005Y\u04b2\nY\u0003Y\u0005Y\u04b5\nY\u0003Y\u0003",
    "Y\u0005Y\u04b9\nY\u0003Y\u0005Y\u04bc\nY\u0003Y\u0005Y\u04bf\nY\u0003",
    "Y\u0003Y\u0005Y\u04c3\nY\u0003Y\u0005Y\u04c6\nY\u0003Y\u0003Y\u0005",
    "Y\u04ca\nY\u0003Y\u0005Y\u04cd\nY\u0003Z\u0003Z\u0003Z\u0003[\u0003",
    "[\u0003[\u0003\\\u0003\\\u0003\\\u0003]\u0003]\u0003]\u0003^\u0003^",
    "\u0003^\u0003_\u0003_\u0003_\u0003`\u0003`\u0003`\u0003a\u0003a\u0003",
    "a\u0003b\u0005b\u04e8\nb\u0003b\u0003b\u0003c\u0005c\u04ed\nc\u0003",
    "c\u0003c\u0003d\u0005d\u04f2\nd\u0003d\u0003d\u0003e\u0005e\u04f7\n",
    "e\u0003e\u0003e\u0003f\u0003f\u0003g\u0003g\u0003g\u0002\u0006DFX|h",
    "\u0002\u0004\u0006\b\n\f\u000e\u0010\u0012\u0014\u0016\u0018\u001a\u001c",
    "\u001e \"$&(*,.02468:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082",
    "\u0084\u0086\u0088\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a",
    "\u009c\u009e\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2",
    "\u00b4\u00b6\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca",
    "\u00cc\u0002\t\u0003\u0002GI\u0005\u0002\u0007\u0007\t\t\u0013\u0013",
    "\u0003\u0002[a\u0003\u0002bc\u0007\u0002\u001f ##%9;<>a\u0004\u0002",
    "\u0011\u0011\u0013\u0013\u0003\u0002YZ\u0585\u0002\u00ce\u0003\u0002",
    "\u0002\u0002\u0004\u00d1\u0003\u0002\u0002\u0002\u0006\u00d7\u0003\u0002",
    "\u0002\u0002\b\u012d\u0003\u0002\u0002\u0002\n\u012f\u0003\u0002\u0002",
    "\u0002\f\u0138\u0003\u0002\u0002\u0002\u000e\u014c\u0003\u0002\u0002",
    "\u0002\u0010\u0155\u0003\u0002\u0002\u0002\u0012\u0169\u0003\u0002\u0002",
    "\u0002\u0014\u0172\u0003\u0002\u0002\u0002\u0016\u018a\u0003\u0002\u0002",
    "\u0002\u0018\u0190\u0003\u0002\u0002\u0002\u001a\u019a\u0003\u0002\u0002",
    "\u0002\u001c\u019c\u0003\u0002\u0002\u0002\u001e\u019e\u0003\u0002\u0002",
    "\u0002 \u01a0\u0003\u0002\u0002\u0002\"\u01a6\u0003\u0002\u0002\u0002",
    "$\u01af\u0003\u0002\u0002\u0002&\u01b1\u0003\u0002\u0002\u0002(\u01c6",
    "\u0003\u0002\u0002\u0002*\u01da\u0003\u0002\u0002\u0002,\u01e1\u0003",
    "\u0002\u0002\u0002.\u0204\u0003\u0002\u0002\u00020\u0212\u0003\u0002",
    "\u0002\u00022\u0214\u0003\u0002\u0002\u00024\u021c\u0003\u0002\u0002",
    "\u00026\u0220\u0003\u0002\u0002\u00028\u0229\u0003\u0002\u0002\u0002",
    ":\u023b\u0003\u0002\u0002\u0002<\u023d\u0003\u0002\u0002\u0002>\u0267",
    "\u0003\u0002\u0002\u0002@\u0269\u0003\u0002\u0002\u0002B\u0274\u0003",
    "\u0002\u0002\u0002D\u028a\u0003\u0002\u0002\u0002F\u029f\u0003\u0002",
    "\u0002\u0002H\u02ac\u0003\u0002\u0002\u0002J\u02bc\u0003\u0002\u0002",
    "\u0002L\u02be\u0003\u0002\u0002\u0002N\u02c6\u0003\u0002\u0002\u0002",
    "P\u02ca\u0003\u0002\u0002\u0002R\u02cf\u0003\u0002\u0002\u0002T\u02d5",
    "\u0003\u0002\u0002\u0002V\u02d8\u0003\u0002\u0002\u0002X\u02ec\u0003",
    "\u0002\u0002\u0002Z\u02f9\u0003\u0002\u0002\u0002\\\u02fb\u0003\u0002",
    "\u0002\u0002^\u0315\u0003\u0002\u0002\u0002`\u0318\u0003\u0002\u0002",
    "\u0002b\u031e\u0003\u0002\u0002\u0002d\u0321\u0003\u0002\u0002\u0002",
    "f\u0326\u0003\u0002\u0002\u0002h\u0338\u0003\u0002\u0002\u0002j\u0342",
    "\u0003\u0002\u0002\u0002l\u036d\u0003\u0002\u0002\u0002n\u037d\u0003",
    "\u0002\u0002\u0002p\u038d\u0003\u0002\u0002\u0002r\u038f\u0003\u0002",
    "\u0002\u0002t\u0391\u0003\u0002\u0002\u0002v\u0399\u0003\u0002\u0002",
    "\u0002x\u039b\u0003\u0002\u0002\u0002z\u039d\u0003\u0002\u0002\u0002",
    "|\u03aa\u0003\u0002\u0002\u0002~\u03d8\u0003\u0002\u0002\u0002\u0080",
    "\u03ea\u0003\u0002\u0002\u0002\u0082\u03ef\u0003\u0002\u0002\u0002\u0084",
    "\u03f5\u0003\u0002\u0002\u0002\u0086\u0416\u0003\u0002\u0002\u0002\u0088",
    "\u041e\u0003\u0002\u0002\u0002\u008a\u0420\u0003\u0002\u0002\u0002\u008c",
    "\u0422\u0003\u0002\u0002\u0002\u008e\u0424\u0003\u0002\u0002\u0002\u0090",
    "\u0426\u0003\u0002\u0002\u0002\u0092\u0428\u0003\u0002\u0002\u0002\u0094",
    "\u0431\u0003\u0002\u0002\u0002\u0096\u0433\u0003\u0002\u0002\u0002\u0098",
    "\u0435\u0003\u0002\u0002\u0002\u009a\u0437\u0003\u0002\u0002\u0002\u009c",
    "\u043a\u0003\u0002\u0002\u0002\u009e\u043e\u0003\u0002\u0002\u0002\u00a0",
    "\u0440\u0003\u0002\u0002\u0002\u00a2\u0444\u0003\u0002\u0002\u0002\u00a4",
    "\u044e\u0003\u0002\u0002\u0002\u00a6\u0450\u0003\u0002\u0002\u0002\u00a8",
    "\u0461\u0003\u0002\u0002\u0002\u00aa\u046a\u0003\u0002\u0002\u0002\u00ac",
    "\u046c\u0003\u0002\u0002\u0002\u00ae\u046e\u0003\u0002\u0002\u0002\u00b0",
    "\u04cc\u0003\u0002\u0002\u0002\u00b2\u04ce\u0003\u0002\u0002\u0002\u00b4",
    "\u04d1\u0003\u0002\u0002\u0002\u00b6\u04d4\u0003\u0002\u0002\u0002\u00b8",
    "\u04d7\u0003\u0002\u0002\u0002\u00ba\u04da\u0003\u0002\u0002\u0002\u00bc",
    "\u04dd\u0003\u0002\u0002\u0002\u00be\u04e0\u0003\u0002\u0002\u0002\u00c0",
    "\u04e3\u0003\u0002\u0002\u0002\u00c2\u04e7\u0003\u0002\u0002\u0002\u00c4",
    "\u04ec\u0003\u0002\u0002\u0002\u00c6\u04f1\u0003\u0002\u0002\u0002\u00c8",
    "\u04f6\u0003\u0002\u0002\u0002\u00ca\u04fa\u0003\u0002\u0002\u0002\u00cc",
    "\u04fc\u0003\u0002\u0002\u0002\u00ce\u00cf\u0005\u0006\u0004\u0002\u00cf",
    "\u00d0\u0007\u0002\u0002\u0003\u00d0\u0003\u0003\u0002\u0002\u0002\u00d1",
    "\u00d2\u0007h\u0002\u0002\u00d2\u0005\u0003\u0002\u0002\u0002\u00d3",
    "\u00d6\u0005(\u0015\u0002\u00d4\u00d6\u0005\u0004\u0003\u0002\u00d5",
    "\u00d3\u0003\u0002\u0002\u0002\u00d5\u00d4\u0003\u0002\u0002\u0002\u00d6",
    "\u00d9\u0003\u0002\u0002\u0002\u00d7\u00d5\u0003\u0002\u0002\u0002\u00d7",
    "\u00d8\u0003\u0002\u0002\u0002\u00d8\u0129\u0003\u0002\u0002\u0002\u00d9",
    "\u00d7\u0003\u0002\u0002\u0002\u00da\u00e1\u0005\f\u0007\u0002\u00db",
    "\u00e1\u0005\u0010\t\u0002\u00dc\u00e1\u0005\"\u0012\u0002\u00dd\u00e1",
    "\u0005\u0018\r\u0002\u00de\u00e1\u0005\u0014\u000b\u0002\u00df\u00e1",
    "\u0005\u0004\u0003\u0002\u00e0\u00da\u0003\u0002\u0002\u0002\u00e0\u00db",
    "\u0003\u0002\u0002\u0002\u00e0\u00dc\u0003\u0002\u0002\u0002\u00e0\u00dd",
    "\u0003\u0002\u0002\u0002\u00e0\u00de\u0003\u0002\u0002\u0002\u00e0\u00df",
    "\u0003\u0002\u0002\u0002\u00e1\u00ed\u0003\u0002\u0002\u0002\u00e2\u00e9",
    "\u0007\b\u0002\u0002\u00e3\u00ea\u0005\f\u0007\u0002\u00e4\u00ea\u0005",
    "\u0010\t\u0002\u00e5\u00ea\u0005\"\u0012\u0002\u00e6\u00ea\u0005\u0018",
    "\r\u0002\u00e7\u00ea\u0005\u0014\u000b\u0002\u00e8\u00ea\u0005\u0004",
    "\u0003\u0002\u00e9\u00e3\u0003\u0002\u0002\u0002\u00e9\u00e4\u0003\u0002",
    "\u0002\u0002\u00e9\u00e5\u0003\u0002\u0002\u0002\u00e9\u00e6\u0003\u0002",
    "\u0002\u0002\u00e9\u00e7\u0003\u0002\u0002\u0002\u00e9\u00e8\u0003\u0002",
    "\u0002\u0002\u00ea\u00ec\u0003\u0002\u0002\u0002\u00eb\u00e2\u0003\u0002",
    "\u0002\u0002\u00ec\u00ef\u0003\u0002\u0002\u0002\u00ed\u00eb\u0003\u0002",
    "\u0002\u0002\u00ed\u00ee\u0003\u0002\u0002\u0002\u00ee\u00f1\u0003\u0002",
    "\u0002\u0002\u00ef\u00ed\u0003\u0002\u0002\u0002\u00f0\u00f2\u0007\b",
    "\u0002\u0002\u00f1\u00f0\u0003\u0002\u0002\u0002\u00f1\u00f2\u0003\u0002",
    "\u0002\u0002\u00f2\u012a\u0003\u0002\u0002\u0002\u00f3\u012a\u0003\u0002",
    "\u0002\u0002\u00f4\u00f7\u0005\b\u0005\u0002\u00f5\u00f7\u0005\u0004",
    "\u0003\u0002\u00f6\u00f4\u0003\u0002\u0002\u0002\u00f6\u00f5\u0003\u0002",
    "\u0002\u0002\u00f7\u00ff\u0003\u0002\u0002\u0002\u00f8\u00fb\u0007\b",
    "\u0002\u0002\u00f9\u00fc\u0005\b\u0005\u0002\u00fa\u00fc\u0005\u0004",
    "\u0003\u0002\u00fb\u00f9\u0003\u0002\u0002\u0002\u00fb\u00fa\u0003\u0002",
    "\u0002\u0002\u00fc\u00fe\u0003\u0002\u0002\u0002\u00fd\u00f8\u0003\u0002",
    "\u0002\u0002\u00fe\u0101\u0003\u0002\u0002\u0002\u00ff\u00fd\u0003\u0002",
    "\u0002\u0002\u00ff\u0100\u0003\u0002\u0002\u0002\u0100\u0103\u0003\u0002",
    "\u0002\u0002\u0101\u00ff\u0003\u0002\u0002\u0002\u0102\u0104\u0007\b",
    "\u0002\u0002\u0103\u0102\u0003\u0002\u0002\u0002\u0103\u0104\u0003\u0002",
    "\u0002\u0002\u0104\u012a\u0003\u0002\u0002\u0002\u0105\u012a\u0003\u0002",
    "\u0002\u0002\u0106\u010d\u0005\f\u0007\u0002\u0107\u010d\u0005\u0010",
    "\t\u0002\u0108\u010d\u0005\"\u0012\u0002\u0109\u010d\u0005\u0018\r\u0002",
    "\u010a\u010d\u0005\u0014\u000b\u0002\u010b\u010d\u0005\u0004\u0003\u0002",
    "\u010c\u0106\u0003\u0002\u0002\u0002\u010c\u0107\u0003\u0002\u0002\u0002",
    "\u010c\u0108\u0003\u0002\u0002\u0002\u010c\u0109\u0003\u0002\u0002\u0002",
    "\u010c\u010a\u0003\u0002\u0002\u0002\u010c\u010b\u0003\u0002\u0002\u0002",
    "\u010d\u0119\u0003\u0002\u0002\u0002\u010e\u0115\u0007\b\u0002\u0002",
    "\u010f\u0116\u0005\f\u0007\u0002\u0110\u0116\u0005\u0010\t\u0002\u0111",
    "\u0116\u0005\"\u0012\u0002\u0112\u0116\u0005\u0018\r\u0002\u0113\u0116",
    "\u0005\u0014\u000b\u0002\u0114\u0116\u0005\u0004\u0003\u0002\u0115\u010f",
    "\u0003\u0002\u0002\u0002\u0115\u0110\u0003\u0002\u0002\u0002\u0115\u0111",
    "\u0003\u0002\u0002\u0002\u0115\u0112\u0003\u0002\u0002\u0002\u0115\u0113",
    "\u0003\u0002\u0002\u0002\u0115\u0114\u0003\u0002\u0002\u0002\u0116\u0118",
    "\u0003\u0002\u0002\u0002\u0117\u010e\u0003\u0002\u0002\u0002\u0118\u011b",
    "\u0003\u0002\u0002\u0002\u0119\u0117\u0003\u0002\u0002\u0002\u0119\u011a",
    "\u0003\u0002\u0002\u0002\u011a\u0123\u0003\u0002\u0002\u0002\u011b\u0119",
    "\u0003\u0002\u0002\u0002\u011c\u011f\u0007\b\u0002\u0002\u011d\u0120",
    "\u0005\b\u0005\u0002\u011e\u0120\u0005\u0004\u0003\u0002\u011f\u011d",
    "\u0003\u0002\u0002\u0002\u011f\u011e\u0003\u0002\u0002\u0002\u0120\u0122",
    "\u0003\u0002\u0002\u0002\u0121\u011c\u0003\u0002\u0002\u0002\u0122\u0125",
    "\u0003\u0002\u0002\u0002\u0123\u0121\u0003\u0002\u0002\u0002\u0123\u0124",
    "\u0003\u0002\u0002\u0002\u0124\u0127\u0003\u0002\u0002\u0002\u0125\u0123",
    "\u0003\u0002\u0002\u0002\u0126\u0128\u0007\b\u0002\u0002\u0127\u0126",
    "\u0003\u0002\u0002\u0002\u0127\u0128\u0003\u0002\u0002\u0002\u0128\u012a",
    "\u0003\u0002\u0002\u0002\u0129\u00e0\u0003\u0002\u0002\u0002\u0129\u00f3",
    "\u0003\u0002\u0002\u0002\u0129\u00f6\u0003\u0002\u0002\u0002\u0129\u0105",
    "\u0003\u0002\u0002\u0002\u0129\u010c\u0003\u0002\u0002\u0002\u012a\u0007",
    "\u0003\u0002\u0002\u0002\u012b\u012e\u00058\u001d\u0002\u012c\u012e",
    "\u0005,\u0017\u0002\u012d\u012b\u0003\u0002\u0002\u0002\u012d\u012c",
    "\u0003\u0002\u0002\u0002\u012e\t\u0003\u0002\u0002\u0002\u012f\u0131",
    "\u0005\f\u0007\u0002\u0130\u0132\u0007\b\u0002\u0002\u0131\u0130\u0003",
    "\u0002\u0002\u0002\u0131\u0132\u0003\u0002\u0002\u0002\u0132\u0133\u0003",
    "\u0002\u0002\u0002\u0133\u0134\u0007\u0002\u0002\u0003\u0134\u000b\u0003",
    "\u0002\u0002\u0002\u0135\u0137\u0005&\u0014\u0002\u0136\u0135\u0003",
    "\u0002\u0002\u0002\u0137\u013a\u0003\u0002\u0002\u0002\u0138\u0136\u0003",
    "\u0002\u0002\u0002\u0138\u0139\u0003\u0002\u0002\u0002\u0139\u013b\u0003",
    "\u0002\u0002\u0002\u013a\u0138\u0003\u0002\u0002\u0002\u013b\u013c\u0007",
    " \u0002\u0002\u013c\u013d\u0007\u001f\u0002\u0002\u013d\u013e\u0005",
    "\u009cO\u0002\u013e\u013f\u0007\n\u0002\u0002\u013f\u0140\u0005\u0094",
    "K\u0002\u0140\u0147\u0005\u00a6T\u0002\u0141\u0142\u0007\u000e\u0002",
    "\u0002\u0142\u0143\u0005\u0094K\u0002\u0143\u0144\u0005\u00a6T\u0002",
    "\u0144\u0146\u0003\u0002\u0002\u0002\u0145\u0141\u0003\u0002\u0002\u0002",
    "\u0146\u0149\u0003\u0002\u0002\u0002\u0147\u0145\u0003\u0002\u0002\u0002",
    "\u0147\u0148\u0003\u0002\u0002\u0002\u0148\u014a\u0003\u0002\u0002\u0002",
    "\u0149\u0147\u0003\u0002\u0002\u0002\u014a\u014b\u0007\u000b\u0002\u0002",
    "\u014b\r\u0003\u0002\u0002\u0002\u014c\u014e\u0005\u0010\t\u0002\u014d",
    "\u014f\u0007\b\u0002\u0002\u014e\u014d\u0003\u0002\u0002\u0002\u014e",
    "\u014f\u0003\u0002\u0002\u0002\u014f\u0150\u0003\u0002\u0002\u0002\u0150",
    "\u0151\u0007\u0002\u0002\u0003\u0151\u000f\u0003\u0002\u0002\u0002\u0152",
    "\u0154\u0005&\u0014\u0002\u0153\u0152\u0003\u0002\u0002\u0002\u0154",
    "\u0157\u0003\u0002\u0002\u0002\u0155\u0153\u0003\u0002\u0002\u0002\u0155",
    "\u0156\u0003\u0002\u0002\u0002\u0156\u0158\u0003\u0002\u0002\u0002\u0157",
    "\u0155\u0003\u0002\u0002\u0002\u0158\u0159\u0007 \u0002\u0002\u0159",
    "\u015a\u0007#\u0002\u0002\u015a\u015b\u0005\u009cO\u0002\u015b\u015c",
    "\u0007\n\u0002\u0002\u015c\u015d\u0005\u0094K\u0002\u015d\u0164\u0005",
    "\u00a6T\u0002\u015e\u015f\u0007\u000e\u0002\u0002\u015f\u0160\u0005",
    "\u0094K\u0002\u0160\u0161\u0005\u00a6T\u0002\u0161\u0163\u0003\u0002",
    "\u0002\u0002\u0162\u015e\u0003\u0002\u0002\u0002\u0163\u0166\u0003\u0002",
    "\u0002\u0002\u0164\u0162\u0003\u0002\u0002\u0002\u0164\u0165\u0003\u0002",
    "\u0002\u0002\u0165\u0167\u0003\u0002\u0002\u0002\u0166\u0164\u0003\u0002",
    "\u0002\u0002\u0167\u0168\u0007\u000b\u0002\u0002\u0168\u0011\u0003\u0002",
    "\u0002\u0002\u0169\u016b\u0005\u0014\u000b\u0002\u016a\u016c\u0007\b",
    "\u0002\u0002\u016b\u016a\u0003\u0002\u0002\u0002\u016b\u016c\u0003\u0002",
    "\u0002\u0002\u016c\u016d\u0003\u0002\u0002\u0002\u016d\u016e\u0007\u0002",
    "\u0002\u0003\u016e\u0013\u0003\u0002\u0002\u0002\u016f\u0171\u0005&",
    "\u0014\u0002\u0170\u016f\u0003\u0002\u0002\u0002\u0171\u0174\u0003\u0002",
    "\u0002\u0002\u0172\u0170\u0003\u0002\u0002\u0002\u0172\u0173\u0003\u0002",
    "\u0002\u0002\u0173\u0175\u0003\u0002\u0002\u0002\u0174\u0172\u0003\u0002",
    "\u0002\u0002\u0175\u0176\u0007 \u0002\u0002\u0176\u0177\u0007\'\u0002",
    "\u0002\u0177\u0178\u0005\u009cO\u0002\u0178\u0179\u0007\n\u0002\u0002",
    "\u0179\u017a\u0005\u0094K\u0002\u017a\u0181\u0005\u00a6T\u0002\u017b",
    "\u017c\u0007\u000e\u0002\u0002\u017c\u017d\u0005\u0094K\u0002\u017d",
    "\u017e\u0005\u00a6T\u0002\u017e\u0180\u0003\u0002\u0002\u0002\u017f",
    "\u017b\u0003\u0002\u0002\u0002\u0180\u0183\u0003\u0002\u0002\u0002\u0181",
    "\u017f\u0003\u0002\u0002\u0002\u0181\u0182\u0003\u0002\u0002\u0002\u0182",
    "\u0184\u0003\u0002\u0002\u0002\u0183\u0181\u0003\u0002\u0002\u0002\u0184",
    "\u0185\u0007\u000b\u0002\u0002\u0185\u0188\u0005~@\u0002\u0186\u0187",
    "\u00072\u0002\u0002\u0187\u0189\u0005n8\u0002\u0188\u0186\u0003\u0002",
    "\u0002\u0002\u0188\u0189\u0003\u0002\u0002\u0002\u0189\u0015\u0003\u0002",
    "\u0002\u0002\u018a\u018c\u0005\u0018\r\u0002\u018b\u018d\u0007\b\u0002",
    "\u0002\u018c\u018b\u0003\u0002\u0002\u0002\u018c\u018d\u0003\u0002\u0002",
    "\u0002\u018d\u018e\u0003\u0002\u0002\u0002\u018e\u018f\u0007\u0002\u0002",
    "\u0003\u018f\u0017\u0003\u0002\u0002\u0002\u0190\u0191\u0007 \u0002",
    "\u0002\u0191\u0192\u0007!\u0002\u0002\u0192\u0193\u0005\u001a\u000e",
    "\u0002\u0193\u0194\u0007\f\u0002\u0002\u0194\u0195\u0005\u001c\u000f",
    "\u0002\u0195\u0196\u0007\r\u0002\u0002\u0196\u0197\u0007/\u0002\u0002",
    "\u0197\u0198\u0005\u00a6T\u0002\u0198\u0199\u0005\u001e\u0010\u0002",
    "\u0199\u0019\u0003\u0002\u0002\u0002\u019a\u019b\u0005\u00acW\u0002",
    "\u019b\u001b\u0003\u0002\u0002\u0002\u019c\u019d\u0005\u00acW\u0002",
    "\u019d\u001d\u0003\u0002\u0002\u0002\u019e\u019f\u0007i\u0002\u0002",
    "\u019f\u001f\u0003\u0002\u0002\u0002\u01a0\u01a2\u0005\"\u0012\u0002",
    "\u01a1\u01a3\u0007\b\u0002\u0002\u01a2\u01a1\u0003\u0002\u0002\u0002",
    "\u01a2\u01a3\u0003\u0002\u0002\u0002\u01a3\u01a4\u0003\u0002\u0002\u0002",
    "\u01a4\u01a5\u0007\u0002\u0002\u0003\u01a5!\u0003\u0002\u0002\u0002",
    "\u01a6\u01a7\u0007 \u0002\u0002\u01a7\u01a8\u0007\"\u0002\u0002\u01a8",
    "\u01a9\u0005$\u0013\u0002\u01a9\u01ad\u0007:\u0002\u0002\u01aa\u01ab",
    "\u0007F\u0002\u0002\u01ab\u01ae\u0005\u00b0Y\u0002\u01ac\u01ae\u0005",
    "\u00ccg\u0002\u01ad\u01aa\u0003\u0002\u0002\u0002\u01ad\u01ac\u0003",
    "\u0002\u0002\u0002\u01ae#\u0003\u0002\u0002\u0002\u01af\u01b0\u0005",
    "\u00acW\u0002\u01b0%\u0003\u0002\u0002\u0002\u01b1\u01b2\u0007\u001c",
    "\u0002\u0002\u01b2\u01c4\u0005\u00a2R\u0002\u01b3\u01b6\u0007\n\u0002",
    "\u0002\u01b4\u01b7\u0005*\u0016\u0002\u01b5\u01b7\u0005&\u0014\u0002",
    "\u01b6\u01b4\u0003\u0002\u0002\u0002\u01b6\u01b5\u0003\u0002\u0002\u0002",
    "\u01b7\u01bf\u0003\u0002\u0002\u0002\u01b8\u01bb\u0007\u000e\u0002\u0002",
    "\u01b9\u01bc\u0005*\u0016\u0002\u01ba\u01bc\u0005&\u0014\u0002\u01bb",
    "\u01b9\u0003\u0002\u0002\u0002\u01bb\u01ba\u0003\u0002\u0002\u0002\u01bc",
    "\u01be\u0003\u0002\u0002\u0002\u01bd\u01b8\u0003\u0002\u0002\u0002\u01be",
    "\u01c1\u0003\u0002\u0002\u0002\u01bf\u01bd\u0003\u0002\u0002\u0002\u01bf",
    "\u01c0\u0003\u0002\u0002\u0002\u01c0\u01c2\u0003\u0002\u0002\u0002\u01c1",
    "\u01bf\u0003\u0002\u0002\u0002\u01c2\u01c3\u0007\u000b\u0002\u0002\u01c3",
    "\u01c5\u0003\u0002\u0002\u0002\u01c4\u01b3\u0003\u0002\u0002\u0002\u01c4",
    "\u01c5\u0003\u0002\u0002\u0002\u01c5\'\u0003\u0002\u0002\u0002\u01c6",
    "\u01c7\u0007\u001c\u0002\u0002\u01c7\u01c8\u0007$\u0002\u0002\u01c8",
    "\u01c9\u0007\u0007\u0002\u0002\u01c9\u01d5\u0005\u00a2R\u0002\u01ca",
    "\u01cb\u0007\n\u0002\u0002\u01cb\u01d0\u0005*\u0016\u0002\u01cc\u01cd",
    "\u0007\u000e\u0002\u0002\u01cd\u01cf\u0005*\u0016\u0002\u01ce\u01cc",
    "\u0003\u0002\u0002\u0002\u01cf\u01d2\u0003\u0002\u0002\u0002\u01d0\u01ce",
    "\u0003\u0002\u0002\u0002\u01d0\u01d1\u0003\u0002\u0002\u0002\u01d1\u01d3",
    "\u0003\u0002\u0002\u0002\u01d2\u01d0\u0003\u0002\u0002\u0002\u01d3\u01d4",
    "\u0007\u000b\u0002\u0002\u01d4\u01d6\u0003\u0002\u0002\u0002\u01d5\u01ca",
    "\u0003\u0002\u0002\u0002\u01d5\u01d6\u0003\u0002\u0002\u0002\u01d6)",
    "\u0003\u0002\u0002\u0002\u01d7\u01d8\u0005\u0092J\u0002\u01d8\u01d9",
    "\u0007\u000f\u0002\u0002\u01d9\u01db\u0003\u0002\u0002\u0002\u01da\u01d7",
    "\u0003\u0002\u0002\u0002\u01da\u01db\u0003\u0002\u0002\u0002\u01db\u01dc",
    "\u0003\u0002\u0002\u0002\u01dc\u01dd\u0005\u0098M\u0002\u01dd+\u0003",
    "\u0002\u0002\u0002\u01de\u01e0\u0005&\u0014\u0002\u01df\u01de\u0003",
    "\u0002\u0002\u0002\u01e0\u01e3\u0003\u0002\u0002\u0002\u01e1\u01df\u0003",
    "\u0002\u0002\u0002\u01e1\u01e2\u0003\u0002\u0002\u0002\u01e2\u01e4\u0003",
    "\u0002\u0002\u0002\u01e3\u01e1\u0003\u0002\u0002\u0002\u01e4\u01e5\u0007",
    "&\u0002\u0002\u01e5\u01e6\u0007B\u0002\u0002\u01e6\u01e7\u0007\n\u0002",
    "\u0002\u01e7\u01ec\u00050\u0019\u0002\u01e8\u01e9\u0007\u000e\u0002",
    "\u0002\u01e9\u01eb\u00050\u0019\u0002\u01ea\u01e8\u0003\u0002\u0002",
    "\u0002\u01eb\u01ee\u0003\u0002\u0002\u0002\u01ec\u01ea\u0003\u0002\u0002",
    "\u0002\u01ec\u01ed\u0003\u0002\u0002\u0002\u01ed\u01ef\u0003\u0002\u0002",
    "\u0002\u01ee\u01ec\u0003\u0002\u0002\u0002\u01ef\u01f0\u0007\u000b\u0002",
    "\u0002\u01f0\u01f3\u0007C\u0002\u0002\u01f1\u01f4\u00058\u001d\u0002",
    "\u01f2\u01f4\u0005\u0004\u0003\u0002\u01f3\u01f1\u0003\u0002\u0002\u0002",
    "\u01f3\u01f2\u0003\u0002\u0002\u0002\u01f4\u01fc\u0003\u0002\u0002\u0002",
    "\u01f5\u01f8\u0007\b\u0002\u0002\u01f6\u01f9\u00058\u001d\u0002\u01f7",
    "\u01f9\u0005\u0004\u0003\u0002\u01f8\u01f6\u0003\u0002\u0002\u0002\u01f8",
    "\u01f7\u0003\u0002\u0002\u0002\u01f9\u01fb\u0003\u0002\u0002\u0002\u01fa",
    "\u01f5\u0003\u0002\u0002\u0002\u01fb\u01fe\u0003\u0002\u0002\u0002\u01fc",
    "\u01fa\u0003\u0002\u0002\u0002\u01fc\u01fd\u0003\u0002\u0002\u0002\u01fd",
    "\u0200\u0003\u0002\u0002\u0002\u01fe\u01fc\u0003\u0002\u0002\u0002\u01ff",
    "\u0201\u0007\b\u0002\u0002\u0200\u01ff\u0003\u0002\u0002\u0002\u0200",
    "\u0201\u0003\u0002\u0002\u0002\u0201\u0202\u0003\u0002\u0002\u0002\u0202",
    "\u0203\u0007D\u0002\u0002\u0203-\u0003\u0002\u0002\u0002\u0204\u0206",
    "\u0005,\u0017\u0002\u0205\u0207\u0007\b\u0002\u0002\u0206\u0205\u0003",
    "\u0002\u0002\u0002\u0206\u0207\u0003\u0002\u0002\u0002\u0207\u0208\u0003",
    "\u0002\u0002\u0002\u0208\u0209\u0007\u0002\u0002\u0003\u0209/\u0003",
    "\u0002\u0002\u0002\u020a\u020b\u0005x=\u0002\u020b\u020c\u00078\u0002",
    "\u0002\u020c\u020d\u0005\u008eH\u0002\u020d\u0213\u0003\u0002\u0002",
    "\u0002\u020e\u020f\u00052\u001a\u0002\u020f\u0210\u00078\u0002\u0002",
    "\u0210\u0211\u0005\u008eH\u0002\u0211\u0213\u0003\u0002\u0002\u0002",
    "\u0212\u020a\u0003\u0002\u0002\u0002\u0212\u020e\u0003\u0002\u0002\u0002",
    "\u02131\u0003\u0002\u0002\u0002\u0214\u0219\u00054\u001b\u0002\u0215",
    "\u0216\u0007;\u0002\u0002\u0216\u0218\u00054\u001b\u0002\u0217\u0215",
    "\u0003\u0002\u0002\u0002\u0218\u021b\u0003\u0002\u0002\u0002\u0219\u0217",
    "\u0003\u0002\u0002\u0002\u0219\u021a\u0003\u0002\u0002\u0002\u021a3",
    "\u0003\u0002\u0002\u0002\u021b\u0219\u0003\u0002\u0002\u0002\u021c\u021d",
    "\u0005z>\u0002\u021d\u021e\u00079\u0002\u0002\u021e\u021f\u0005\u00cc",
    "g\u0002\u021f5\u0003\u0002\u0002\u0002\u0220\u0222\u00058\u001d\u0002",
    "\u0221\u0223\u0007\b\u0002\u0002\u0222\u0221\u0003\u0002\u0002\u0002",
    "\u0222\u0223\u0003\u0002\u0002\u0002\u0223\u0224\u0003\u0002\u0002\u0002",
    "\u0224\u0225\u0007\u0002\u0002\u0003\u02257\u0003\u0002\u0002\u0002",
    "\u0226\u0228\u0005&\u0014\u0002\u0227\u0226\u0003\u0002\u0002\u0002",
    "\u0228\u022b\u0003\u0002\u0002\u0002\u0229\u0227\u0003\u0002\u0002\u0002",
    "\u0229\u022a\u0003\u0002\u0002\u0002\u022a\u022c\u0003\u0002\u0002\u0002",
    "\u022b\u0229\u0003\u0002\u0002\u0002\u022c\u022d\u0007%\u0002\u0002",
    "\u022d\u022f\u0005:\u001e\u0002\u022e\u0230\u0005f4\u0002\u022f\u022e",
    "\u0003\u0002\u0002\u0002\u022f\u0230\u0003\u0002\u0002\u0002\u0230\u0232",
    "\u0003\u0002\u0002\u0002\u0231\u0233\u0005p9\u0002\u0232\u0231\u0003",
    "\u0002\u0002\u0002\u0232\u0233\u0003\u0002\u0002\u0002\u0233\u0234\u0003",
    "\u0002\u0002\u0002\u0234\u0235\u0005l7\u0002\u02359\u0003\u0002\u0002",
    "\u0002\u0236\u023c\u0005<\u001f\u0002\u0237\u023c\u0005> \u0002\u0238",
    "\u023c\u0005B\"\u0002\u0239\u023c\u0005V,\u0002\u023a\u023c\u0005^0",
    "\u0002\u023b\u0236\u0003\u0002\u0002\u0002\u023b\u0237\u0003\u0002\u0002",
    "\u0002\u023b\u0238\u0003\u0002\u0002\u0002\u023b\u0239\u0003\u0002\u0002",
    "\u0002\u023b\u023a\u0003\u0002\u0002\u0002\u023c;\u0003\u0002\u0002",
    "\u0002\u023d\u023f\u0005\u009cO\u0002\u023e\u0240\u0005R*\u0002\u023f",
    "\u023e\u0003\u0002\u0002\u0002\u023f\u0240\u0003\u0002\u0002\u0002\u0240",
    "\u0242\u0003\u0002\u0002\u0002\u0241\u0243\u0005d3\u0002\u0242\u0241",
    "\u0003\u0002\u0002\u0002\u0242\u0243\u0003\u0002\u0002\u0002\u0243\u0245",
    "\u0003\u0002\u0002\u0002\u0244\u0246\u0005R*\u0002\u0245\u0244\u0003",
    "\u0002\u0002\u0002\u0245\u0246\u0003\u0002\u0002\u0002\u0246=\u0003",
    "\u0002\u0002\u0002\u0247\u0248\u0005@!\u0002\u0248\u0249\u0005\u00a8",
    "U\u0002\u0249\u024a\u0005@!\u0002\u024a\u024d\u0007P\u0002\u0002\u024b",
    "\u024c\u0007>\u0002\u0002\u024c\u024e\u0005z>\u0002\u024d\u024b\u0003",
    "\u0002\u0002\u0002\u024d\u024e\u0003\u0002\u0002\u0002\u024e\u0250\u0003",
    "\u0002\u0002\u0002\u024f\u0251\u0005t;\u0002\u0250\u024f\u0003\u0002",
    "\u0002\u0002\u0250\u0251\u0003\u0002\u0002\u0002\u0251\u0268\u0003\u0002",
    "\u0002\u0002\u0252\u0253\u0005@!\u0002\u0253\u0254\u0005\u00a8U\u0002",
    "\u0254\u0257\u0005@!\u0002\u0255\u0256\u0007>\u0002\u0002\u0256\u0258",
    "\u0005z>\u0002\u0257\u0255\u0003\u0002\u0002\u0002\u0257\u0258\u0003",
    "\u0002\u0002\u0002\u0258\u025a\u0003\u0002\u0002\u0002\u0259\u025b\u0005",
    "t;\u0002\u025a\u0259\u0003\u0002\u0002\u0002\u025a\u025b\u0003\u0002",
    "\u0002\u0002\u025b\u0268\u0003\u0002\u0002\u0002\u025c\u025d\u0005@",
    "!\u0002\u025d\u025e\u0007P\u0002\u0002\u025e\u025f\u0005\u00a8U\u0002",
    "\u025f\u0262\u0005@!\u0002\u0260\u0261\u0007>\u0002\u0002\u0261\u0263",
    "\u0005z>\u0002\u0262\u0260\u0003\u0002\u0002\u0002\u0262\u0263\u0003",
    "\u0002\u0002\u0002\u0263\u0265\u0003\u0002\u0002\u0002\u0264\u0266\u0005",
    "t;\u0002\u0265\u0264\u0003\u0002\u0002\u0002\u0265\u0266\u0003\u0002",
    "\u0002\u0002\u0266\u0268\u0003\u0002\u0002\u0002\u0267\u0247\u0003\u0002",
    "\u0002\u0002\u0267\u0252\u0003\u0002\u0002\u0002\u0267\u025c\u0003\u0002",
    "\u0002\u0002\u0268?\u0003\u0002\u0002\u0002\u0269\u026b\u0005\u009c",
    "O\u0002\u026a\u026c\u0005R*\u0002\u026b\u026a\u0003\u0002\u0002\u0002",
    "\u026b\u026c\u0003\u0002\u0002\u0002\u026c\u026e\u0003\u0002\u0002\u0002",
    "\u026d\u026f\u0005d3\u0002\u026e\u026d\u0003\u0002\u0002\u0002\u026e",
    "\u026f\u0003\u0002\u0002\u0002\u026f\u0272\u0003\u0002\u0002\u0002\u0270",
    "\u0271\u00079\u0002\u0002\u0271\u0273\u0005\u0090I\u0002\u0272\u0270",
    "\u0003\u0002\u0002\u0002\u0272\u0273\u0003\u0002\u0002\u0002\u0273A",
    "\u0003\u0002\u0002\u0002\u0274\u0275\u0005D#\u0002\u0275C\u0003\u0002",
    "\u0002\u0002\u0276\u0277\b#\u0001\u0002\u0277\u0278\u0007\n\u0002\u0002",
    "\u0278\u0279\u0005D#\u0002\u0279\u027b\u0007\u000b\u0002\u0002\u027a",
    "\u027c\u0005t;\u0002\u027b\u027a\u0003\u0002\u0002\u0002\u027b\u027c",
    "\u0003\u0002\u0002\u0002\u027c\u028b\u0003\u0002\u0002\u0002\u027d\u027e",
    "\u0007F\u0002\u0002\u027e\u027f\u0007\n\u0002\u0002\u027f\u0280\u0005",
    "F$\u0002\u0280\u0282\u0007\u000b\u0002\u0002\u0281\u0283\u0005t;\u0002",
    "\u0282\u0281\u0003\u0002\u0002\u0002\u0282\u0283\u0003\u0002\u0002\u0002",
    "\u0283\u028b\u0003\u0002\u0002\u0002\u0284\u028b\u0005F$\u0002\u0285",
    "\u0286\u0007F\u0002\u0002\u0286\u0288\u0005H%\u0002\u0287\u0289\u0005",
    "t;\u0002\u0288\u0287\u0003\u0002\u0002\u0002\u0288\u0289\u0003\u0002",
    "\u0002\u0002\u0289\u028b\u0003\u0002\u0002\u0002\u028a\u0276\u0003\u0002",
    "\u0002\u0002\u028a\u027d\u0003\u0002\u0002\u0002\u028a\u0284\u0003\u0002",
    "\u0002\u0002\u028a\u0285\u0003\u0002\u0002\u0002\u028b\u0291\u0003\u0002",
    "\u0002\u0002\u028c\u028d\f\u0005\u0002\u0002\u028d\u028e\u0007\u001d",
    "\u0002\u0002\u028e\u0290\u0005D#\u0006\u028f\u028c\u0003\u0002\u0002",
    "\u0002\u0290\u0293\u0003\u0002\u0002\u0002\u0291\u028f\u0003\u0002\u0002",
    "\u0002\u0291\u0292\u0003\u0002\u0002\u0002\u0292E\u0003\u0002\u0002",
    "\u0002\u0293\u0291\u0003\u0002\u0002\u0002\u0294\u0295\b$\u0001\u0002",
    "\u0295\u0296\u0007\n\u0002\u0002\u0296\u0297\u0005F$\u0002\u0297\u0299",
    "\u0007\u000b\u0002\u0002\u0298\u029a\u0005t;\u0002\u0299\u0298\u0003",
    "\u0002\u0002\u0002\u0299\u029a\u0003\u0002\u0002\u0002\u029a\u02a0\u0003",
    "\u0002\u0002\u0002\u029b\u029d\u0005H%\u0002\u029c\u029e\u0005t;\u0002",
    "\u029d\u029c\u0003\u0002\u0002\u0002\u029d\u029e\u0003\u0002\u0002\u0002",
    "\u029e\u02a0\u0003\u0002\u0002\u0002\u029f\u0294\u0003\u0002\u0002\u0002",
    "\u029f\u029b\u0003\u0002\u0002\u0002\u02a0\u02a6\u0003\u0002\u0002\u0002",
    "\u02a1\u02a2\f\u0004\u0002\u0002\u02a2\u02a3\u0007\u001d\u0002\u0002",
    "\u02a3\u02a5\u0005F$\u0005\u02a4\u02a1\u0003\u0002\u0002\u0002\u02a5",
    "\u02a8\u0003\u0002\u0002\u0002\u02a6\u02a4\u0003\u0002\u0002\u0002\u02a6",
    "\u02a7\u0003\u0002\u0002\u0002\u02a7G\u0003\u0002\u0002\u0002\u02a8",
    "\u02a6\u0003\u0002\u0002\u0002\u02a9\u02ad\u0005J&\u0002\u02aa\u02ad",
    "\u0005L\'\u0002\u02ab\u02ad\u0005N(\u0002\u02ac\u02a9\u0003\u0002\u0002",
    "\u0002\u02ac\u02aa\u0003\u0002\u0002\u0002\u02ac\u02ab\u0003\u0002\u0002",
    "\u0002\u02adI\u0003\u0002\u0002\u0002\u02ae\u02af\u0007@\u0002\u0002",
    "\u02af\u02b2\u0005N(\u0002\u02b0\u02b1\u0007<\u0002\u0002\u02b1\u02b3",
    "\u0005N(\u0002\u02b2\u02b0\u0003\u0002\u0002\u0002\u02b2\u02b3\u0003",
    "\u0002\u0002\u0002\u02b3\u02bd\u0003\u0002\u0002\u0002\u02b4\u02b5\u0005",
    "N(\u0002\u02b5\u02b6\u0007<\u0002\u0002\u02b6\u02b7\u0005N(\u0002\u02b7",
    "\u02bd\u0003\u0002\u0002\u0002\u02b8\u02b9\u0005N(\u0002\u02b9\u02ba",
    "\u0007;\u0002\u0002\u02ba\u02bb\u0005N(\u0002\u02bb\u02bd\u0003\u0002",
    "\u0002\u0002\u02bc\u02ae\u0003\u0002\u0002\u0002\u02bc\u02b4\u0003\u0002",
    "\u0002\u0002\u02bc\u02b8\u0003\u0002\u0002\u0002\u02bdK\u0003\u0002",
    "\u0002\u0002\u02be\u02bf\u0005N(\u0002\u02bf\u02c0\u0007\u0016\u0002",
    "\u0002\u02c0\u02c1\u0005\u00a4S\u0002\u02c1\u02c2\u0007\u0018\u0002",
    "\u0002\u02c2M\u0003\u0002\u0002\u0002\u02c3\u02c4\u0005\u00a0Q\u0002",
    "\u02c4\u02c5\u0007\u000f\u0002\u0002\u02c5\u02c7\u0003\u0002\u0002\u0002",
    "\u02c6\u02c3\u0003\u0002\u0002\u0002\u02c6\u02c7\u0003\u0002\u0002\u0002",
    "\u02c7\u02c8\u0003\u0002\u0002\u0002\u02c8\u02c9\u0005P)\u0002\u02c9",
    "O\u0003\u0002\u0002\u0002\u02ca\u02cc\u0005\u009cO\u0002\u02cb\u02cd",
    "\u0005R*\u0002\u02cc\u02cb\u0003\u0002\u0002\u0002\u02cc\u02cd\u0003",
    "\u0002\u0002\u0002\u02cdQ\u0003\u0002\u0002\u0002\u02ce\u02d0\u0005",
    "T+\u0002\u02cf\u02ce\u0003\u0002\u0002\u0002\u02d0\u02d1\u0003\u0002",
    "\u0002\u0002\u02d1\u02cf\u0003\u0002\u0002\u0002\u02d1\u02d2\u0003\u0002",
    "\u0002\u0002\u02d2S\u0003\u0002\u0002\u0002\u02d3\u02d6\u0005`1\u0002",
    "\u02d4\u02d6\u0005b2\u0002\u02d5\u02d3\u0003\u0002\u0002\u0002\u02d5",
    "\u02d4\u0003\u0002\u0002\u0002\u02d6U\u0003\u0002\u0002\u0002\u02d7",
    "\u02d9\u0007F\u0002\u0002\u02d8\u02d7\u0003\u0002\u0002\u0002\u02d8",
    "\u02d9\u0003\u0002\u0002\u0002\u02d9\u02da\u0003\u0002\u0002\u0002\u02da",
    "\u02dc\u0005Z.\u0002\u02db\u02dd\u0005t;\u0002\u02dc\u02db\u0003\u0002",
    "\u0002\u0002\u02dc\u02dd\u0003\u0002\u0002\u0002\u02dd\u02de\u0003\u0002",
    "\u0002\u0002\u02de\u02df\u0007\u000e\u0002\u0002\u02df\u02e0\u0005X",
    "-\u0002\u02e0W\u0003\u0002\u0002\u0002\u02e1\u02e2\b-\u0001\u0002\u02e2",
    "\u02e3\u0007\n\u0002\u0002\u02e3\u02e4\u0005X-\u0002\u02e4\u02e6\u0007",
    "\u000b\u0002\u0002\u02e5\u02e7\u0005t;\u0002\u02e6\u02e5\u0003\u0002",
    "\u0002\u0002\u02e6\u02e7\u0003\u0002\u0002\u0002\u02e7\u02ed\u0003\u0002",
    "\u0002\u0002\u02e8\u02ea\u0005Z.\u0002\u02e9\u02eb\u0005t;\u0002\u02ea",
    "\u02e9\u0003\u0002\u0002\u0002\u02ea\u02eb\u0003\u0002\u0002\u0002\u02eb",
    "\u02ed\u0003\u0002\u0002\u0002\u02ec\u02e1\u0003\u0002\u0002\u0002\u02ec",
    "\u02e8\u0003\u0002\u0002\u0002\u02ed\u02f3\u0003\u0002\u0002\u0002\u02ee",
    "\u02ef\f\u0004\u0002\u0002\u02ef\u02f0\u0007\u000e\u0002\u0002\u02f0",
    "\u02f2\u0005X-\u0005\u02f1\u02ee\u0003\u0002\u0002\u0002\u02f2\u02f5",
    "\u0003\u0002\u0002\u0002\u02f3\u02f1\u0003\u0002\u0002\u0002\u02f3\u02f4",
    "\u0003\u0002\u0002\u0002\u02f4Y\u0003\u0002\u0002\u0002\u02f5\u02f3",
    "\u0003\u0002\u0002\u0002\u02f6\u02fa\u0005J&\u0002\u02f7\u02fa\u0005",
    "\\/\u0002\u02f8\u02fa\u0005N(\u0002\u02f9\u02f6\u0003\u0002\u0002\u0002",
    "\u02f9\u02f7\u0003\u0002\u0002\u0002\u02f9\u02f8\u0003\u0002\u0002\u0002",
    "\u02fa[\u0003\u0002\u0002\u0002\u02fb\u0303\u0005N(\u0002\u02fc\u02fd",
    "\u0007\u0016\u0002\u0002\u02fd\u02fe\u0005\u00a4S\u0002\u02fe\u02ff",
    "\u0007\u0018\u0002\u0002\u02ff\u0304\u0003\u0002\u0002\u0002\u0300\u0304",
    "\u0007\u0010\u0002\u0002\u0301\u0304\u0007\u0012\u0002\u0002\u0302\u0304",
    "\u0007\u0011\u0002\u0002\u0303\u02fc\u0003\u0002\u0002\u0002\u0303\u0300",
    "\u0003\u0002\u0002\u0002\u0303\u0301\u0003\u0002\u0002\u0002\u0303\u0302",
    "\u0003\u0002\u0002\u0002\u0304]\u0003\u0002\u0002\u0002\u0305\u0306",
    "\u0007\n\u0002\u0002\u0306\u0307\u0005^0\u0002\u0307\u0308\u0007\u000b",
    "\u0002\u0002\u0308\u0316\u0003\u0002\u0002\u0002\u0309\u030a\u0007%",
    "\u0002\u0002\u030a\u030c\u0005:\u001e\u0002\u030b\u030d\u0005f4\u0002",
    "\u030c\u030b\u0003\u0002\u0002\u0002\u030c\u030d\u0003\u0002\u0002\u0002",
    "\u030d\u030f\u0003\u0002\u0002\u0002\u030e\u0310\u0005p9\u0002\u030f",
    "\u030e\u0003\u0002\u0002\u0002\u030f\u0310\u0003\u0002\u0002\u0002\u0310",
    "\u0311\u0003\u0002\u0002\u0002\u0311\u0313\u0007/\u0002\u0002\u0312",
    "\u0314\u0005n8\u0002\u0313\u0312\u0003\u0002\u0002\u0002\u0313\u0314",
    "\u0003\u0002\u0002\u0002\u0314\u0316\u0003\u0002\u0002\u0002\u0315\u0305",
    "\u0003\u0002\u0002\u0002\u0315\u0309\u0003\u0002\u0002\u0002\u0316_",
    "\u0003\u0002\u0002\u0002\u0317\u0319\u0007\u001e\u0002\u0002\u0318\u0317",
    "\u0003\u0002\u0002\u0002\u0318\u0319\u0003\u0002\u0002\u0002\u0319\u031a",
    "\u0003\u0002\u0002\u0002\u031a\u031b\u0007\f\u0002\u0002\u031b\u031c",
    "\u0005z>\u0002\u031c\u031d\u0007\r\u0002\u0002\u031da\u0003\u0002\u0002",
    "\u0002\u031e\u031f\u0007\u001e\u0002\u0002\u031f\u0320\u0005~@\u0002",
    "\u0320c\u0003\u0002\u0002\u0002\u0321\u0322\u0007\u001e\u0002\u0002",
    "\u0322\u0323\u0007\'\u0002\u0002\u0323\u0324\u0007\t\u0002\u0002\u0324",
    "\u0325\u0005~@\u0002\u0325e\u0003\u0002\u0002\u0002\u0326\u0330\u0007",
    "(\u0002\u0002\u0327\u0331\u0007\u0010\u0002\u0002\u0328\u032d\u0005",
    "v<\u0002\u0329\u032a\u0007\u000e\u0002\u0002\u032a\u032c\u0005v<\u0002",
    "\u032b\u0329\u0003\u0002\u0002\u0002\u032c\u032f\u0003\u0002\u0002\u0002",
    "\u032d\u032b\u0003\u0002\u0002\u0002\u032d\u032e\u0003\u0002\u0002\u0002",
    "\u032e\u0331\u0003\u0002\u0002\u0002\u032f\u032d\u0003\u0002\u0002\u0002",
    "\u0330\u0327\u0003\u0002\u0002\u0002\u0330\u0328\u0003\u0002\u0002\u0002",
    "\u0331\u0333\u0003\u0002\u0002\u0002\u0332\u0334\u0005h5\u0002\u0333",
    "\u0332\u0003\u0002\u0002\u0002\u0333\u0334\u0003\u0002\u0002\u0002\u0334",
    "\u0336\u0003\u0002\u0002\u0002\u0335\u0337\u0005j6\u0002\u0336\u0335",
    "\u0003\u0002\u0002\u0002\u0336\u0337\u0003\u0002\u0002\u0002\u0337g",
    "\u0003\u0002\u0002\u0002\u0338\u0339\u0007)\u0002\u0002\u0339\u033a",
    "\u0007*\u0002\u0002\u033a\u033f\u0005\u0086D\u0002\u033b\u033c\u0007",
    "\u000e\u0002\u0002\u033c\u033e\u0005\u0086D\u0002\u033d\u033b\u0003",
    "\u0002\u0002\u0002\u033e\u0341\u0003\u0002\u0002\u0002\u033f\u033d\u0003",
    "\u0002\u0002\u0002\u033f\u0340\u0003\u0002\u0002\u0002\u0340i\u0003",
    "\u0002\u0002\u0002\u0341\u033f\u0003\u0002\u0002\u0002\u0342\u0343\u0007",
    "+\u0002\u0002\u0343\u0344\u0005z>\u0002\u0344k\u0003\u0002\u0002\u0002",
    "\u0345\u0347\u0007,\u0002\u0002\u0346\u0348\u0005n8\u0002\u0347\u0346",
    "\u0003\u0002\u0002\u0002\u0347\u0348\u0003\u0002\u0002\u0002\u0348\u0349",
    "\u0003\u0002\u0002\u0002\u0349\u034a\u00071\u0002\u0002\u034a\u036e",
    "\u0005\u009eP\u0002\u034b\u034c\u0007-\u0002\u0002\u034c\u034f\u0005",
    "\u009eP\u0002\u034d\u034e\u00076\u0002\u0002\u034e\u0350\u0005n8\u0002",
    "\u034f\u034d\u0003\u0002\u0002\u0002\u034f\u0350\u0003\u0002\u0002\u0002",
    "\u0350\u0351\u0003\u0002\u0002\u0002\u0351\u0352\u0007>\u0002\u0002",
    "\u0352\u0353\u0005z>\u0002\u0353\u036e\u0003\u0002\u0002\u0002\u0354",
    "\u0355\u0007.\u0002\u0002\u0355\u0356\u0007;\u0002\u0002\u0356\u0357",
    "\u0007,\u0002\u0002\u0357\u0358\u00071\u0002\u0002\u0358\u035b\u0005",
    "\u009eP\u0002\u0359\u035a\u00076\u0002\u0002\u035a\u035c\u0005n8\u0002",
    "\u035b\u0359\u0003\u0002\u0002\u0002\u035b\u035c\u0003\u0002\u0002\u0002",
    "\u035c\u035d\u0003\u0002\u0002\u0002\u035d\u035e\u0007>\u0002\u0002",
    "\u035e\u035f\u0005z>\u0002\u035f\u036e\u0003\u0002\u0002\u0002\u0360",
    "\u0361\u0007.\u0002\u0002\u0361\u0364\u0005\u009eP\u0002\u0362\u0363",
    "\u00076\u0002\u0002\u0363\u0365\u0005n8\u0002\u0364\u0362\u0003\u0002",
    "\u0002\u0002\u0364\u0365\u0003\u0002\u0002\u0002\u0365\u0366\u0003\u0002",
    "\u0002\u0002\u0366\u0367\u0007>\u0002\u0002\u0367\u0368\u0005z>\u0002",
    "\u0368\u036e\u0003\u0002\u0002\u0002\u0369\u036b\u0007/\u0002\u0002",
    "\u036a\u036c\u0005n8\u0002\u036b\u036a\u0003\u0002\u0002\u0002\u036b",
    "\u036c\u0003\u0002\u0002\u0002\u036c\u036e\u0003\u0002\u0002\u0002\u036d",
    "\u0345\u0003\u0002\u0002\u0002\u036d\u034b\u0003\u0002\u0002\u0002\u036d",
    "\u0354\u0003\u0002\u0002\u0002\u036d\u0360\u0003\u0002\u0002\u0002\u036d",
    "\u0369\u0003\u0002\u0002\u0002\u036em\u0003\u0002\u0002\u0002\u036f",
    "\u0370\u0007H\u0002\u0002\u0370\u037e\u00070\u0002\u0002\u0371\u0372",
    "\u0007H\u0002\u0002\u0372\u0373\u00077\u0002\u0002\u0373\u037e\u0007",
    "0\u0002\u0002\u0374\u0375\u00073\u0002\u0002\u0375\u037e\u00070\u0002",
    "\u0002\u0376\u0377\u00073\u0002\u0002\u0377\u0378\u00077\u0002\u0002",
    "\u0378\u037e\u00070\u0002\u0002\u0379\u037b\u00074\u0002\u0002\u037a",
    "\u0379\u0003\u0002\u0002\u0002\u037a\u037b\u0003\u0002\u0002\u0002\u037b",
    "\u037c\u0003\u0002\u0002\u0002\u037c\u037e\u00070\u0002\u0002\u037d",
    "\u036f\u0003\u0002\u0002\u0002\u037d\u0371\u0003\u0002\u0002\u0002\u037d",
    "\u0374\u0003\u0002\u0002\u0002\u037d\u0376\u0003\u0002\u0002\u0002\u037d",
    "\u037a\u0003\u0002\u0002\u0002\u037eo\u0003\u0002\u0002\u0002\u037f",
    "\u0381\u00072\u0002\u0002\u0380\u0382\u0005r:\u0002\u0381\u0380\u0003",
    "\u0002\u0002\u0002\u0381\u0382\u0003\u0002\u0002\u0002\u0382\u0383\u0003",
    "\u0002\u0002\u0002\u0383\u0387\u0007F\u0002\u0002\u0384\u0388\u0005",
    "\u00b0Y\u0002\u0385\u0386\u0007\u0003\u0002\u0002\u0386\u0388\u0007",
    "0\u0002\u0002\u0387\u0384\u0003\u0002\u0002\u0002\u0387\u0385\u0003",
    "\u0002\u0002\u0002\u0388\u038e\u0003\u0002\u0002\u0002\u0389\u038a\u0007",
    "2\u0002\u0002\u038a\u038b\u00075\u0002\u0002\u038b\u038c\u0007F\u0002",
    "\u0002\u038c\u038e\u0005\u00b0Y\u0002\u038d\u037f\u0003\u0002\u0002",
    "\u0002\u038d\u0389\u0003\u0002\u0002\u0002\u038eq\u0003\u0002\u0002",
    "\u0002\u038f\u0390\t\u0002\u0002\u0002\u0390s\u0003\u0002\u0002\u0002",
    "\u0391\u0392\u0007A\u0002\u0002\u0392\u0393\u0005\u00b0Y\u0002\u0393",
    "u\u0003\u0002\u0002\u0002\u0394\u0395\u0005x=\u0002\u0395\u0396\u0007",
    "9\u0002\u0002\u0396\u0397\u0005\u0094K\u0002\u0397\u039a\u0003\u0002",
    "\u0002\u0002\u0398\u039a\u0005\u0086D\u0002\u0399\u0394\u0003\u0002",
    "\u0002\u0002\u0399\u0398\u0003\u0002\u0002\u0002\u039aw\u0003\u0002",
    "\u0002\u0002\u039b\u039c\u0005|?\u0002\u039cy\u0003\u0002\u0002\u0002",
    "\u039d\u039e\u0005|?\u0002\u039e{\u0003\u0002\u0002\u0002\u039f\u03a0",
    "\b?\u0001\u0002\u03a0\u03a1\u0007@\u0002\u0002\u03a1\u03ab\u0005|?\r",
    "\u03a2\u03a3\u0007\n\u0002\u0002\u03a3\u03a4\u0005|?\u0002\u03a4\u03a5",
    "\u0007\u000b\u0002\u0002\u03a5\u03ab\u0003\u0002\u0002\u0002\u03a6\u03ab",
    "\u0005\u0082B\u0002\u03a7\u03ab\u0005~@\u0002\u03a8\u03ab\u0005\u00aa",
    "V\u0002\u03a9\u03ab\u0005\u0086D\u0002\u03aa\u039f\u0003\u0002\u0002",
    "\u0002\u03aa\u03a2\u0003\u0002\u0002\u0002\u03aa\u03a6\u0003\u0002\u0002",
    "\u0002\u03aa\u03a7\u0003\u0002\u0002\u0002\u03aa\u03a8\u0003\u0002\u0002",
    "\u0002\u03aa\u03a9\u0003\u0002\u0002\u0002\u03ab\u03d2\u0003\u0002\u0002",
    "\u0002\u03ac\u03b0\f\f\u0002\u0002\u03ad\u03b1\u0007\u0010\u0002\u0002",
    "\u03ae\u03b1\u0007\u0014\u0002\u0002\u03af\u03b1\u0007\u0015\u0002\u0002",
    "\u03b0\u03ad\u0003\u0002\u0002\u0002\u03b0\u03ae\u0003\u0002\u0002\u0002",
    "\u03b0\u03af\u0003\u0002\u0002\u0002\u03b1\u03b2\u0003\u0002\u0002\u0002",
    "\u03b2\u03d1\u0005|?\r\u03b3\u03b6\f\u000b\u0002\u0002\u03b4\u03b7\u0007",
    "\u0011\u0002\u0002\u03b5\u03b7\u0007\u0013\u0002\u0002\u03b6\u03b4\u0003",
    "\u0002\u0002\u0002\u03b6\u03b5\u0003\u0002\u0002\u0002\u03b7\u03b8\u0003",
    "\u0002\u0002\u0002\u03b8\u03d1\u0005|?\f\u03b9\u03be\f\n\u0002\u0002",
    "\u03ba\u03bf\u0007\u0019\u0002\u0002\u03bb\u03bf\u0007\u0017\u0002\u0002",
    "\u03bc\u03bf\u0007\u0018\u0002\u0002\u03bd\u03bf\u0007\u0016\u0002\u0002",
    "\u03be\u03ba\u0003\u0002\u0002\u0002\u03be\u03bb\u0003\u0002\u0002\u0002",
    "\u03be\u03bc\u0003\u0002\u0002\u0002\u03be\u03bd\u0003\u0002\u0002\u0002",
    "\u03bf\u03c0\u0003\u0002\u0002\u0002\u03c0\u03d1\u0005|?\u000b\u03c1",
    "\u03c4\f\t\u0002\u0002\u03c2\u03c5\u0007\u001a\u0002\u0002\u03c3\u03c5",
    "\u0007\u001b\u0002\u0002\u03c4\u03c2\u0003\u0002\u0002\u0002\u03c4\u03c3",
    "\u0003\u0002\u0002\u0002\u03c5\u03c6\u0003\u0002\u0002\u0002\u03c6\u03d1",
    "\u0005|?\n\u03c7\u03c8\f\u0007\u0002\u0002\u03c8\u03c9\u0007<\u0002",
    "\u0002\u03c9\u03d1\u0005|?\b\u03ca\u03cb\f\u0006\u0002\u0002\u03cb\u03cc",
    "\u0007;\u0002\u0002\u03cc\u03d1\u0005|?\u0007\u03cd\u03ce\f\b\u0002",
    "\u0002\u03ce\u03cf\u0007=\u0002\u0002\u03cf\u03d1\u0005\u00a2R\u0002",
    "\u03d0\u03ac\u0003\u0002\u0002\u0002\u03d0\u03b3\u0003\u0002\u0002\u0002",
    "\u03d0\u03b9\u0003\u0002\u0002\u0002\u03d0\u03c1\u0003\u0002\u0002\u0002",
    "\u03d0\u03c7\u0003\u0002\u0002\u0002\u03d0\u03ca\u0003\u0002\u0002\u0002",
    "\u03d0\u03cd\u0003\u0002\u0002\u0002\u03d1\u03d4\u0003\u0002\u0002\u0002",
    "\u03d2\u03d0\u0003\u0002\u0002\u0002\u03d2\u03d3\u0003\u0002\u0002\u0002",
    "\u03d3}\u0003\u0002\u0002\u0002\u03d4\u03d2\u0003\u0002\u0002\u0002",
    "\u03d5\u03d6\u0005\u008cG\u0002\u03d6\u03d7\u0007\u0007\u0002\u0002",
    "\u03d7\u03d9\u0003\u0002\u0002\u0002\u03d8\u03d5\u0003\u0002\u0002\u0002",
    "\u03d8\u03d9\u0003\u0002\u0002\u0002\u03d9\u03da\u0003\u0002\u0002\u0002",
    "\u03da\u03db\u0005\u008aF\u0002\u03db\u03dd\u0007\n\u0002\u0002\u03dc",
    "\u03de\u0005\u0080A\u0002\u03dd\u03dc\u0003\u0002\u0002\u0002\u03dd",
    "\u03de\u0003\u0002\u0002\u0002\u03de\u03df\u0003\u0002\u0002\u0002\u03df",
    "\u03e0\u0007\u000b\u0002\u0002\u03e0\u007f\u0003\u0002\u0002\u0002\u03e1",
    "\u03e6\u0005x=\u0002\u03e2\u03e3\u0007\u000e\u0002\u0002\u03e3\u03e5",
    "\u0005x=\u0002\u03e4\u03e2\u0003\u0002\u0002\u0002\u03e5\u03e8\u0003",
    "\u0002\u0002\u0002\u03e6\u03e4\u0003\u0002\u0002\u0002\u03e6\u03e7\u0003",
    "\u0002\u0002\u0002\u03e7\u03eb\u0003\u0002\u0002\u0002\u03e8\u03e6\u0003",
    "\u0002\u0002\u0002\u03e9\u03eb\u0007\u0010\u0002\u0002\u03ea\u03e1\u0003",
    "\u0002\u0002\u0002\u03ea\u03e9\u0003\u0002\u0002\u0002\u03eb\u0081\u0003",
    "\u0002\u0002\u0002\u03ec\u03f0\u0005\u0084C\u0002\u03ed\u03f0\u0005",
    "\u0086D\u0002\u03ee\u03f0\u0005~@\u0002\u03ef\u03ec\u0003\u0002\u0002",
    "\u0002\u03ef\u03ed\u0003\u0002\u0002\u0002\u03ef\u03ee\u0003\u0002\u0002",
    "\u0002\u03f0\u03f1\u0003\u0002\u0002\u0002\u03f1\u03f2\u0007?\u0002",
    "\u0002\u03f2\u03f3\u0007E\u0002\u0002\u03f3\u0083\u0003\u0002\u0002",
    "\u0002\u03f4\u03f6\u0007\u001e\u0002\u0002\u03f5\u03f4\u0003\u0002\u0002",
    "\u0002\u03f5\u03f6\u0003\u0002\u0002\u0002\u03f6\u03f7\u0003\u0002\u0002",
    "\u0002\u03f7\u03fc\u0005\u00a2R\u0002\u03f8\u03f9\u0007\f\u0002\u0002",
    "\u03f9\u03fa\u0005\u0088E\u0002\u03fa\u03fb\u0007\r\u0002\u0002\u03fb",
    "\u03fd\u0003\u0002\u0002\u0002\u03fc\u03f8\u0003\u0002\u0002\u0002\u03fc",
    "\u03fd\u0003\u0002\u0002\u0002\u03fd\u0085\u0003\u0002\u0002\u0002\u03fe",
    "\u0400\u0007\u001e\u0002\u0002\u03ff\u03fe\u0003\u0002\u0002\u0002\u03ff",
    "\u0400\u0003\u0002\u0002\u0002\u0400\u0401\u0003\u0002\u0002\u0002\u0401",
    "\u0406\u0005\u00a2R\u0002\u0402\u0403\u0007\f\u0002\u0002\u0403\u0404",
    "\u0005\u0088E\u0002\u0404\u0405\u0007\r\u0002\u0002\u0405\u0407\u0003",
    "\u0002\u0002\u0002\u0406\u0402\u0003\u0002\u0002\u0002\u0406\u0407\u0003",
    "\u0002\u0002\u0002\u0407\u0410\u0003\u0002\u0002\u0002\u0408\u0409\u0007",
    "\u001e\u0002\u0002\u0409\u040e\u0005\u00a2R\u0002\u040a\u040b\u0007",
    "\f\u0002\u0002\u040b\u040c\u0005\u0088E\u0002\u040c\u040d\u0007\r\u0002",
    "\u0002\u040d\u040f\u0003\u0002\u0002\u0002\u040e\u040a\u0003\u0002\u0002",
    "\u0002\u040e\u040f\u0003\u0002\u0002\u0002\u040f\u0411\u0003\u0002\u0002",
    "\u0002\u0410\u0408\u0003\u0002\u0002\u0002\u0410\u0411\u0003\u0002\u0002",
    "\u0002\u0411\u0412\u0003\u0002\u0002\u0002\u0412\u0413\u0007\t\u0002",
    "\u0002\u0413\u0414\u0005\u0094K\u0002\u0414\u0417\u0003\u0002\u0002",
    "\u0002\u0415\u0417\u0005\u0094K\u0002\u0416\u03ff\u0003\u0002\u0002",
    "\u0002\u0416\u0415\u0003\u0002\u0002\u0002\u0417\u0087\u0003\u0002\u0002",
    "\u0002\u0418\u041f\u0007\u0003\u0002\u0002\u0419\u041c\u0007G\u0002",
    "\u0002\u041a\u041b\u0007\u0013\u0002\u0002\u041b\u041d\u0007\u0003\u0002",
    "\u0002\u041c\u041a\u0003\u0002\u0002\u0002\u041c\u041d\u0003\u0002\u0002",
    "\u0002\u041d\u041f\u0003\u0002\u0002\u0002\u041e\u0418\u0003\u0002\u0002",
    "\u0002\u041e\u0419\u0003\u0002\u0002\u0002\u041f\u0089\u0003\u0002\u0002",
    "\u0002\u0420\u0421\u0005\u00a2R\u0002\u0421\u008b\u0003\u0002\u0002",
    "\u0002\u0422\u0423\u0005\u00a2R\u0002\u0423\u008d\u0003\u0002\u0002",
    "\u0002\u0424\u0425\u0005\u00a2R\u0002\u0425\u008f\u0003\u0002\u0002",
    "\u0002\u0426\u0427\u0005\u00a2R\u0002\u0427\u0091\u0003\u0002\u0002",
    "\u0002\u0428\u042e\u0005\u00a2R\u0002\u0429\u042a\u0005\u009aN\u0002",
    "\u042a\u042b\u0005\u00a2R\u0002\u042b\u042d\u0003\u0002\u0002\u0002",
    "\u042c\u0429\u0003\u0002\u0002\u0002\u042d\u0430\u0003\u0002\u0002\u0002",
    "\u042e\u042c\u0003\u0002\u0002\u0002\u042e\u042f\u0003\u0002\u0002\u0002",
    "\u042f\u0093\u0003\u0002\u0002\u0002\u0430\u042e\u0003\u0002\u0002\u0002",
    "\u0431\u0432\u0005\u00a2R\u0002\u0432\u0095\u0003\u0002\u0002\u0002",
    "\u0433\u0434\u0005\u00a2R\u0002\u0434\u0097\u0003\u0002\u0002\u0002",
    "\u0435\u0436\u0005\u00ccg\u0002\u0436\u0099\u0003\u0002\u0002\u0002",
    "\u0437\u0438\t\u0003\u0002\u0002\u0438\u009b\u0003\u0002\u0002\u0002",
    "\u0439\u043b\u0007\u001e\u0002\u0002\u043a\u0439\u0003\u0002\u0002\u0002",
    "\u043a\u043b\u0003\u0002\u0002\u0002\u043b\u043c\u0003\u0002\u0002\u0002",
    "\u043c\u043d\u0005\u008eH\u0002\u043d\u009d\u0003\u0002\u0002\u0002",
    "\u043e\u043f\u0005\u009cO\u0002\u043f\u009f\u0003\u0002\u0002\u0002",
    "\u0440\u0441\u0005\u00a2R\u0002\u0441\u00a1\u0003\u0002\u0002\u0002",
    "\u0442\u0445\u0005\u00acW\u0002\u0443\u0445\u0005\u00aeX\u0002\u0444",
    "\u0442\u0003\u0002\u0002\u0002\u0444\u0443\u0003\u0002\u0002\u0002\u0445",
    "\u00a3\u0003\u0002\u0002\u0002\u0446\u0447\u0007\u0003\u0002\u0002\u0447",
    "\u0448\u0007\u0007\u0002\u0002\u0448\u044f\u0007\u0003\u0002\u0002\u0449",
    "\u044a\u0007\u0003\u0002\u0002\u044a\u044f\u0007\u0007\u0002\u0002\u044b",
    "\u044c\u0007\u0007\u0002\u0002\u044c\u044f\u0007\u0003\u0002\u0002\u044d",
    "\u044f\u0007\u0003\u0002\u0002\u044e\u0446\u0003\u0002\u0002\u0002\u044e",
    "\u0449\u0003\u0002\u0002\u0002\u044e\u044b\u0003\u0002\u0002\u0002\u044e",
    "\u044d\u0003\u0002\u0002\u0002\u044f\u00a5\u0003\u0002\u0002\u0002\u0450",
    "\u0451\t\u0004\u0002\u0002\u0451\u00a7\u0003\u0002\u0002\u0002\u0452",
    "\u0453\u0007N\u0002\u0002\u0453\u0454\u0007L\u0002\u0002\u0454\u0462",
    "\u0007J\u0002\u0002\u0455\u0456\u0007M\u0002\u0002\u0456\u0457\u0007",
    "L\u0002\u0002\u0457\u0462\u0007J\u0002\u0002\u0458\u0459\u0007O\u0002",
    "\u0002\u0459\u045a\u0007L\u0002\u0002\u045a\u0462\u0007J\u0002\u0002",
    "\u045b\u045c\u0007L\u0002\u0002\u045c\u0462\u0007J\u0002\u0002\u045d",
    "\u045f\u0007K\u0002\u0002\u045e\u045d\u0003\u0002\u0002\u0002\u045e",
    "\u045f\u0003\u0002\u0002\u0002\u045f\u0460\u0003\u0002\u0002\u0002\u0460",
    "\u0462\u0007J\u0002\u0002\u0461\u0452\u0003\u0002\u0002\u0002\u0461",
    "\u0455\u0003\u0002\u0002\u0002\u0461\u0458\u0003\u0002\u0002\u0002\u0461",
    "\u045b\u0003\u0002\u0002\u0002\u0461\u045e\u0003\u0002\u0002\u0002\u0462",
    "\u00a9\u0003\u0002\u0002\u0002\u0463\u046b\u0005\u00caf\u0002\u0464",
    "\u046b\u0005\u00c2b\u0002\u0465\u046b\u0005\u00c6d\u0002\u0466\u046b",
    "\u0005\u00c4c\u0002\u0467\u046b\u0005\u00c8e\u0002\u0468\u046b\u0005",
    "\u00b0Y\u0002\u0469\u046b\u0005\u00ccg\u0002\u046a\u0463\u0003\u0002",
    "\u0002\u0002\u046a\u0464\u0003\u0002\u0002\u0002\u046a\u0465\u0003\u0002",
    "\u0002\u0002\u046a\u0466\u0003\u0002\u0002\u0002\u046a\u0467\u0003\u0002",
    "\u0002\u0002\u046a\u0468\u0003\u0002\u0002\u0002\u046a\u0469\u0003\u0002",
    "\u0002\u0002\u046b\u00ab\u0003\u0002\u0002\u0002\u046c\u046d\t\u0005",
    "\u0002\u0002\u046d\u00ad\u0003\u0002\u0002\u0002\u046e\u046f\t\u0006",
    "\u0002\u0002\u046f\u00af\u0003\u0002\u0002\u0002\u0470\u0472\u0005\u00b2",
    "Z\u0002\u0471\u0473\u0005\u00b4[\u0002\u0472\u0471\u0003\u0002\u0002",
    "\u0002\u0472\u0473\u0003\u0002\u0002\u0002\u0473\u0475\u0003\u0002\u0002",
    "\u0002\u0474\u0476\u0005\u00b6\\\u0002\u0475\u0474\u0003\u0002\u0002",
    "\u0002\u0475\u0476\u0003\u0002\u0002\u0002\u0476\u0478\u0003\u0002\u0002",
    "\u0002\u0477\u0479\u0005\u00b8]\u0002\u0478\u0477\u0003\u0002\u0002",
    "\u0002\u0478\u0479\u0003\u0002\u0002\u0002\u0479\u047b\u0003\u0002\u0002",
    "\u0002\u047a\u047c\u0005\u00ba^\u0002\u047b\u047a\u0003\u0002\u0002",
    "\u0002\u047b\u047c\u0003\u0002\u0002\u0002\u047c\u047e\u0003\u0002\u0002",
    "\u0002\u047d\u047f\u0005\u00bc_\u0002\u047e\u047d\u0003\u0002\u0002",
    "\u0002\u047e\u047f\u0003\u0002\u0002\u0002\u047f\u0481\u0003\u0002\u0002",
    "\u0002\u0480\u0482\u0005\u00be`\u0002\u0481\u0480\u0003\u0002\u0002",
    "\u0002\u0481\u0482\u0003\u0002\u0002\u0002\u0482\u0484\u0003\u0002\u0002",
    "\u0002\u0483\u0485\u0005\u00c0a\u0002\u0484\u0483\u0003\u0002\u0002",
    "\u0002\u0484\u0485\u0003\u0002\u0002\u0002\u0485\u04cd\u0003\u0002\u0002",
    "\u0002\u0486\u0488\u0005\u00b4[\u0002\u0487\u0489\u0005\u00b6\\\u0002",
    "\u0488\u0487\u0003\u0002\u0002\u0002\u0488\u0489\u0003\u0002\u0002\u0002",
    "\u0489\u048b\u0003\u0002\u0002\u0002\u048a\u048c\u0005\u00b8]\u0002",
    "\u048b\u048a\u0003\u0002\u0002\u0002\u048b\u048c\u0003\u0002\u0002\u0002",
    "\u048c\u048e\u0003\u0002\u0002\u0002\u048d\u048f\u0005\u00ba^\u0002",
    "\u048e\u048d\u0003\u0002\u0002\u0002\u048e\u048f\u0003\u0002\u0002\u0002",
    "\u048f\u0491\u0003\u0002\u0002\u0002\u0490\u0492\u0005\u00bc_\u0002",
    "\u0491\u0490\u0003\u0002\u0002\u0002\u0491\u0492\u0003\u0002\u0002\u0002",
    "\u0492\u0494\u0003\u0002\u0002\u0002\u0493\u0495\u0005\u00be`\u0002",
    "\u0494\u0493\u0003\u0002\u0002\u0002\u0494\u0495\u0003\u0002\u0002\u0002",
    "\u0495\u0497\u0003\u0002\u0002\u0002\u0496\u0498\u0005\u00c0a\u0002",
    "\u0497\u0496\u0003\u0002\u0002\u0002\u0497\u0498\u0003\u0002\u0002\u0002",
    "\u0498\u04cd\u0003\u0002\u0002\u0002\u0499\u049b\u0005\u00b6\\\u0002",
    "\u049a\u049c\u0005\u00b8]\u0002\u049b\u049a\u0003\u0002\u0002\u0002",
    "\u049b\u049c\u0003\u0002\u0002\u0002\u049c\u049e\u0003\u0002\u0002\u0002",
    "\u049d\u049f\u0005\u00ba^\u0002\u049e\u049d\u0003\u0002\u0002\u0002",
    "\u049e\u049f\u0003\u0002\u0002\u0002\u049f\u04a1\u0003\u0002\u0002\u0002",
    "\u04a0\u04a2\u0005\u00bc_\u0002\u04a1\u04a0\u0003\u0002\u0002\u0002",
    "\u04a1\u04a2\u0003\u0002\u0002\u0002\u04a2\u04a4\u0003\u0002\u0002\u0002",
    "\u04a3\u04a5\u0005\u00be`\u0002\u04a4\u04a3\u0003\u0002\u0002\u0002",
    "\u04a4\u04a5\u0003\u0002\u0002\u0002\u04a5\u04a7\u0003\u0002\u0002\u0002",
    "\u04a6\u04a8\u0005\u00c0a\u0002\u04a7\u04a6\u0003\u0002\u0002\u0002",
    "\u04a7\u04a8\u0003\u0002\u0002\u0002\u04a8\u04cd\u0003\u0002\u0002\u0002",
    "\u04a9\u04ab\u0005\u00b8]\u0002\u04aa\u04ac\u0005\u00ba^\u0002\u04ab",
    "\u04aa\u0003\u0002\u0002\u0002\u04ab\u04ac\u0003\u0002\u0002\u0002\u04ac",
    "\u04ae\u0003\u0002\u0002\u0002\u04ad\u04af\u0005\u00bc_\u0002\u04ae",
    "\u04ad\u0003\u0002\u0002\u0002\u04ae\u04af\u0003\u0002\u0002\u0002\u04af",
    "\u04b1\u0003\u0002\u0002\u0002\u04b0\u04b2\u0005\u00be`\u0002\u04b1",
    "\u04b0\u0003\u0002\u0002\u0002\u04b1\u04b2\u0003\u0002\u0002\u0002\u04b2",
    "\u04b4\u0003\u0002\u0002\u0002\u04b3\u04b5\u0005\u00c0a\u0002\u04b4",
    "\u04b3\u0003\u0002\u0002\u0002\u04b4\u04b5\u0003\u0002\u0002\u0002\u04b5",
    "\u04cd\u0003\u0002\u0002\u0002\u04b6\u04b8\u0005\u00ba^\u0002\u04b7",
    "\u04b9\u0005\u00bc_\u0002\u04b8\u04b7\u0003\u0002\u0002\u0002\u04b8",
    "\u04b9\u0003\u0002\u0002\u0002\u04b9\u04bb\u0003\u0002\u0002\u0002\u04ba",
    "\u04bc\u0005\u00be`\u0002\u04bb\u04ba\u0003\u0002\u0002\u0002\u04bb",
    "\u04bc\u0003\u0002\u0002\u0002\u04bc\u04be\u0003\u0002\u0002\u0002\u04bd",
    "\u04bf\u0005\u00c0a\u0002\u04be\u04bd\u0003\u0002\u0002\u0002\u04be",
    "\u04bf\u0003\u0002\u0002\u0002\u04bf\u04cd\u0003\u0002\u0002\u0002\u04c0",
    "\u04c2\u0005\u00bc_\u0002\u04c1\u04c3\u0005\u00be`\u0002\u04c2\u04c1",
    "\u0003\u0002\u0002\u0002\u04c2\u04c3\u0003\u0002\u0002\u0002\u04c3\u04c5",
    "\u0003\u0002\u0002\u0002\u04c4\u04c6\u0005\u00c0a\u0002\u04c5\u04c4",
    "\u0003\u0002\u0002\u0002\u04c5\u04c6\u0003\u0002\u0002\u0002\u04c6\u04cd",
    "\u0003\u0002\u0002\u0002\u04c7\u04c9\u0005\u00be`\u0002\u04c8\u04ca",
    "\u0005\u00c0a\u0002\u04c9\u04c8\u0003\u0002\u0002\u0002\u04c9\u04ca",
    "\u0003\u0002\u0002\u0002\u04ca\u04cd\u0003\u0002\u0002\u0002\u04cb\u04cd",
    "\u0005\u00c0a\u0002\u04cc\u0470\u0003\u0002\u0002\u0002\u04cc\u0486",
    "\u0003\u0002\u0002\u0002\u04cc\u0499\u0003\u0002\u0002\u0002\u04cc\u04a9",
    "\u0003\u0002\u0002\u0002\u04cc\u04b6\u0003\u0002\u0002\u0002\u04cc\u04c0",
    "\u0003\u0002\u0002\u0002\u04cc\u04c7\u0003\u0002\u0002\u0002\u04cc\u04cb",
    "\u0003\u0002\u0002\u0002\u04cd\u00b1\u0003\u0002\u0002\u0002\u04ce\u04cf",
    "\u0007\u0003\u0002\u0002\u04cf\u04d0\u0007Q\u0002\u0002\u04d0\u00b3",
    "\u0003\u0002\u0002\u0002\u04d1\u04d2\u0007\u0003\u0002\u0002\u04d2\u04d3",
    "\u0007R\u0002\u0002\u04d3\u00b5\u0003\u0002\u0002\u0002\u04d4\u04d5",
    "\u0007\u0003\u0002\u0002\u04d5\u04d6\u0007S\u0002\u0002\u04d6\u00b7",
    "\u0003\u0002\u0002\u0002\u04d7\u04d8\u0007\u0003\u0002\u0002\u04d8\u04d9",
    "\u0007T\u0002\u0002\u04d9\u00b9\u0003\u0002\u0002\u0002\u04da\u04db",
    "\u0007\u0003\u0002\u0002\u04db\u04dc\u0007U\u0002\u0002\u04dc\u00bb",
    "\u0003\u0002\u0002\u0002\u04dd\u04de\u0007\u0003\u0002\u0002\u04de\u04df",
    "\u0007V\u0002\u0002\u04df\u00bd\u0003\u0002\u0002\u0002\u04e0\u04e1",
    "\u0007\u0003\u0002\u0002\u04e1\u04e2\u0007W\u0002\u0002\u04e2\u00bf",
    "\u0003\u0002\u0002\u0002\u04e3\u04e4\u0007\u0003\u0002\u0002\u04e4\u04e5",
    "\u0007X\u0002\u0002\u04e5\u00c1\u0003\u0002\u0002\u0002\u04e6\u04e8",
    "\t\u0007\u0002\u0002\u04e7\u04e6\u0003\u0002\u0002\u0002\u04e7\u04e8",
    "\u0003\u0002\u0002\u0002\u04e8\u04e9\u0003\u0002\u0002\u0002\u04e9\u04ea",
    "\u0007\u0006\u0002\u0002\u04ea\u00c3\u0003\u0002\u0002\u0002\u04eb\u04ed",
    "\t\u0007\u0002\u0002\u04ec\u04eb\u0003\u0002\u0002\u0002\u04ec\u04ed",
    "\u0003\u0002\u0002\u0002\u04ed\u04ee\u0003\u0002\u0002\u0002\u04ee\u04ef",
    "\u0007\u0004\u0002\u0002\u04ef\u00c5\u0003\u0002\u0002\u0002\u04f0\u04f2",
    "\t\u0007\u0002\u0002\u04f1\u04f0\u0003\u0002\u0002\u0002\u04f1\u04f2",
    "\u0003\u0002\u0002\u0002\u04f2\u04f3\u0003\u0002\u0002\u0002\u04f3\u04f4",
    "\u0007\u0005\u0002\u0002\u04f4\u00c7\u0003\u0002\u0002\u0002\u04f5\u04f7",
    "\t\u0007\u0002\u0002\u04f6\u04f5\u0003\u0002\u0002\u0002\u04f6\u04f7",
    "\u0003\u0002\u0002\u0002\u04f7\u04f8\u0003\u0002\u0002\u0002\u04f8\u04f9",
    "\u0007\u0003\u0002\u0002\u04f9\u00c9\u0003\u0002\u0002\u0002\u04fa\u04fb",
    "\t\b\u0002\u0002\u04fb\u00cb\u0003\u0002\u0002\u0002\u04fc\u04fd\u0007",
    "d\u0002\u0002\u04fd\u00cd\u0003\u0002\u0002\u0002\u00ae\u00d5\u00d7",
    "\u00e0\u00e9\u00ed\u00f1\u00f6\u00fb\u00ff\u0103\u010c\u0115\u0119\u011f",
    "\u0123\u0127\u0129\u012d\u0131\u0138\u0147\u014e\u0155\u0164\u016b\u0172",
    "\u0181\u0188\u018c\u01a2\u01ad\u01b6\u01bb\u01bf\u01c4\u01d0\u01d5\u01da",
    "\u01e1\u01ec\u01f3\u01f8\u01fc\u0200\u0206\u0212\u0219\u0222\u0229\u022f",
    "\u0232\u023b\u023f\u0242\u0245\u024d\u0250\u0257\u025a\u0262\u0265\u0267",
    "\u026b\u026e\u0272\u027b\u0282\u0288\u028a\u0291\u0299\u029d\u029f\u02a6",
    "\u02ac\u02b2\u02bc\u02c6\u02cc\u02d1\u02d5\u02d8\u02dc\u02e6\u02ea\u02ec",
    "\u02f3\u02f9\u0303\u030c\u030f\u0313\u0315\u0318\u032d\u0330\u0333\u0336",
    "\u033f\u0347\u034f\u035b\u0364\u036b\u036d\u037a\u037d\u0381\u0387\u038d",
    "\u0399\u03aa\u03b0\u03b6\u03be\u03c4\u03d0\u03d2\u03d8\u03dd\u03e6\u03ea",
    "\u03ef\u03f5\u03fc\u03ff\u0406\u040e\u0410\u0416\u041c\u041e\u042e\u043a",
    "\u0444\u044e\u045e\u0461\u046a\u0472\u0475\u0478\u047b\u047e\u0481\u0484",
    "\u0488\u048b\u048e\u0491\u0494\u0497\u049b\u049e\u04a1\u04a4\u04a7\u04ab",
    "\u04ae\u04b1\u04b4\u04b8\u04bb\u04be\u04c2\u04c5\u04c9\u04cc\u04e7\u04ec",
    "\u04f1\u04f6"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map(function (ds, index) {
    return new antlr4.dfa.DFA(ds, index);
});

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [null, null, null, null, null, "':'", "';'", "'.'",
    "'('", "')'", "'['", "']'", "','", "'='", "'*'", "'+'",
    "'?'", "'-'", "'/'", "'%'", "'<'", "'<='", "'>'", "'>='",
    "'=='", "'!='", "'@'", "'->'", "'#'"];

var symbolicNames = [null, "INT_LITERAL", "LONG_LITERAL", "FLOAT_LITERAL",
    "DOUBLE_LITERAL", "COL", "SCOL", "DOT", "OPEN_PAR",
    "CLOSE_PAR", "OPEN_SQARE_BRACKETS", "CLOASE_SQARE_BRACKETS",
    "COMMA", "ASSIGN", "STAR", "PLUS", "QUESTION", "MINUS",
    "DIV", "MOD", "LT", "LT_EQ", "GT", "GT_EQ", "EQ",
    "NOT_EQ", "AT_SYMBOL", "FOLLOWED_BY", "HASH", "STREAM",
    "DEFINE", "FUNCTION", "TRIGGER", "TABLE", "PLAN",
    "FROM", "PARTITION", "WINDOW", "SELECT", "GROUP",
    "BY", "HAVING", "INSERT", "DELETE", "UPDATE", "RETURN",
    "EVENTS", "INTO", "OUTPUT", "EXPIRED", "CURRENT",
    "SNAPSHOT", "FOR", "RAW", "OF", "AS", "AT", "OR",
    "AND", "IN", "ON", "IS", "NOT", "WITHIN", "WITH",
    "BEGIN", "END", "NULL", "EVERY", "LAST", "ALL", "FIRST",
    "JOIN", "INNER", "OUTER", "RIGHT", "LEFT", "FULL",
    "UNIDIRECTIONAL", "YEARS", "MONTHS", "WEEKS", "DAYS",
    "HOURS", "MINUTES", "SECONDS", "MILLISECONDS", "FALSE",
    "TRUE", "STRING", "INT", "LONG", "FLOAT", "DOUBLE",
    "BOOL", "OBJECT", "ID_QUOTES", "ID", "STRING_LITERAL",
    "SINGLE_LINE_COMMENT", "MULTILINE_COMMENT", "SPACES",
    "UNEXPECTED_CHAR", "SCRIPT"];

var ruleNames = ["parse", "error", "execution_plan", "execution_element",
    "definition_stream_final", "definition_stream", "definition_table_final",
    "definition_table", "definition_window_final", "definition_window",
    "definition_function_final", "definition_function", "function_name",
    "language_name", "function_body", "definition_trigger_final",
    "definition_trigger", "trigger_name", "annotation", "plan_annotation",
    "annotation_element", "partition", "partition_final",
    "partition_with_stream", "condition_ranges", "condition_range",
    "query_final", "query", "query_input", "standard_stream",
    "join_stream", "join_source", "pattern_stream", "every_pattern_source_chain",
    "pattern_source_chain", "pattern_source", "logical_stateful_source",
    "pattern_collection_stateful_source", "standard_stateful_source",
    "basic_source", "basic_source_stream_handlers", "basic_source_stream_handler",
    "sequence_stream", "sequence_source_chain", "sequence_source",
    "sequence_collection_stateful_source", "anonymous_stream",
    "filter", "stream_function", "window", "query_section",
    "group_by", "having", "query_output", "output_event_type",
    "output_rate", "output_rate_type", "within_time", "output_attribute",
    "attribute", "expression", "math_operation", "function_operation",
    "attribute_list", "null_check", "stream_reference", "attribute_reference",
    "attribute_index", "function_id", "function_namespace",
    "stream_id", "stream_alias", "property_name", "attribute_name",
    "type", "property_value", "property_separator", "source",
    "target", "event", "name", "collect", "attribute_type",
    "join", "constant_value", "id", "keyword", "time_value",
    "year_value", "month_value", "week_value", "day_value",
    "hour_value", "minute_value", "second_value", "millisecond_value",
    "signed_double_value", "signed_long_value", "signed_float_value",
    "signed_int_value", "bool_value", "string_value"];

function SiddhiQLParser(input) {
    antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

SiddhiQLParser.prototype = Object.create(antlr4.Parser.prototype);
SiddhiQLParser.prototype.constructor = SiddhiQLParser;

Object.defineProperty(SiddhiQLParser.prototype, "atn", {
    get: function () {
        return atn;
    }
});

SiddhiQLParser.EOF = antlr4.Token.EOF;
SiddhiQLParser.INT_LITERAL = 1;
SiddhiQLParser.LONG_LITERAL = 2;
SiddhiQLParser.FLOAT_LITERAL = 3;
SiddhiQLParser.DOUBLE_LITERAL = 4;
SiddhiQLParser.COL = 5;
SiddhiQLParser.SCOL = 6;
SiddhiQLParser.DOT = 7;
SiddhiQLParser.OPEN_PAR = 8;
SiddhiQLParser.CLOSE_PAR = 9;
SiddhiQLParser.OPEN_SQARE_BRACKETS = 10;
SiddhiQLParser.CLOASE_SQARE_BRACKETS = 11;
SiddhiQLParser.COMMA = 12;
SiddhiQLParser.ASSIGN = 13;
SiddhiQLParser.STAR = 14;
SiddhiQLParser.PLUS = 15;
SiddhiQLParser.QUESTION = 16;
SiddhiQLParser.MINUS = 17;
SiddhiQLParser.DIV = 18;
SiddhiQLParser.MOD = 19;
SiddhiQLParser.LT = 20;
SiddhiQLParser.LT_EQ = 21;
SiddhiQLParser.GT = 22;
SiddhiQLParser.GT_EQ = 23;
SiddhiQLParser.EQ = 24;
SiddhiQLParser.NOT_EQ = 25;
SiddhiQLParser.AT_SYMBOL = 26;
SiddhiQLParser.FOLLOWED_BY = 27;
SiddhiQLParser.HASH = 28;
SiddhiQLParser.STREAM = 29;
SiddhiQLParser.DEFINE = 30;
SiddhiQLParser.FUNCTION = 31;
SiddhiQLParser.TRIGGER = 32;
SiddhiQLParser.TABLE = 33;
SiddhiQLParser.PLAN = 34;
SiddhiQLParser.FROM = 35;
SiddhiQLParser.PARTITION = 36;
SiddhiQLParser.WINDOW = 37;
SiddhiQLParser.SELECT = 38;
SiddhiQLParser.GROUP = 39;
SiddhiQLParser.BY = 40;
SiddhiQLParser.HAVING = 41;
SiddhiQLParser.INSERT = 42;
SiddhiQLParser.DELETE = 43;
SiddhiQLParser.UPDATE = 44;
SiddhiQLParser.RETURN = 45;
SiddhiQLParser.EVENTS = 46;
SiddhiQLParser.INTO = 47;
SiddhiQLParser.OUTPUT = 48;
SiddhiQLParser.EXPIRED = 49;
SiddhiQLParser.CURRENT = 50;
SiddhiQLParser.SNAPSHOT = 51;
SiddhiQLParser.FOR = 52;
SiddhiQLParser.RAW = 53;
SiddhiQLParser.OF = 54;
SiddhiQLParser.AS = 55;
SiddhiQLParser.AT = 56;
SiddhiQLParser.OR = 57;
SiddhiQLParser.AND = 58;
SiddhiQLParser.IN = 59;
SiddhiQLParser.ON = 60;
SiddhiQLParser.IS = 61;
SiddhiQLParser.NOT = 62;
SiddhiQLParser.WITHIN = 63;
SiddhiQLParser.WITH = 64;
SiddhiQLParser.BEGIN = 65;
SiddhiQLParser.END = 66;
SiddhiQLParser.NULL = 67;
SiddhiQLParser.EVERY = 68;
SiddhiQLParser.LAST = 69;
SiddhiQLParser.ALL = 70;
SiddhiQLParser.FIRST = 71;
SiddhiQLParser.JOIN = 72;
SiddhiQLParser.INNER = 73;
SiddhiQLParser.OUTER = 74;
SiddhiQLParser.RIGHT = 75;
SiddhiQLParser.LEFT = 76;
SiddhiQLParser.FULL = 77;
SiddhiQLParser.UNIDIRECTIONAL = 78;
SiddhiQLParser.YEARS = 79;
SiddhiQLParser.MONTHS = 80;
SiddhiQLParser.WEEKS = 81;
SiddhiQLParser.DAYS = 82;
SiddhiQLParser.HOURS = 83;
SiddhiQLParser.MINUTES = 84;
SiddhiQLParser.SECONDS = 85;
SiddhiQLParser.MILLISECONDS = 86;
SiddhiQLParser.FALSE = 87;
SiddhiQLParser.TRUE = 88;
SiddhiQLParser.STRING = 89;
SiddhiQLParser.INT = 90;
SiddhiQLParser.LONG = 91;
SiddhiQLParser.FLOAT = 92;
SiddhiQLParser.DOUBLE = 93;
SiddhiQLParser.BOOL = 94;
SiddhiQLParser.OBJECT = 95;
SiddhiQLParser.ID_QUOTES = 96;
SiddhiQLParser.ID = 97;
SiddhiQLParser.STRING_LITERAL = 98;
SiddhiQLParser.SINGLE_LINE_COMMENT = 99;
SiddhiQLParser.MULTILINE_COMMENT = 100;
SiddhiQLParser.SPACES = 101;
SiddhiQLParser.UNEXPECTED_CHAR = 102;
SiddhiQLParser.SCRIPT = 103;

SiddhiQLParser.RULE_parse = 0;
SiddhiQLParser.RULE_error = 1;
SiddhiQLParser.RULE_execution_plan = 2;
SiddhiQLParser.RULE_execution_element = 3;
SiddhiQLParser.RULE_definition_stream_final = 4;
SiddhiQLParser.RULE_definition_stream = 5;
SiddhiQLParser.RULE_definition_table_final = 6;
SiddhiQLParser.RULE_definition_table = 7;
SiddhiQLParser.RULE_definition_window_final = 8;
SiddhiQLParser.RULE_definition_window = 9;
SiddhiQLParser.RULE_definition_function_final = 10;
SiddhiQLParser.RULE_definition_function = 11;
SiddhiQLParser.RULE_function_name = 12;
SiddhiQLParser.RULE_language_name = 13;
SiddhiQLParser.RULE_function_body = 14;
SiddhiQLParser.RULE_definition_trigger_final = 15;
SiddhiQLParser.RULE_definition_trigger = 16;
SiddhiQLParser.RULE_trigger_name = 17;
SiddhiQLParser.RULE_annotation = 18;
SiddhiQLParser.RULE_plan_annotation = 19;
SiddhiQLParser.RULE_annotation_element = 20;
SiddhiQLParser.RULE_partition = 21;
SiddhiQLParser.RULE_partition_final = 22;
SiddhiQLParser.RULE_partition_with_stream = 23;
SiddhiQLParser.RULE_condition_ranges = 24;
SiddhiQLParser.RULE_condition_range = 25;
SiddhiQLParser.RULE_query_final = 26;
SiddhiQLParser.RULE_query = 27;
SiddhiQLParser.RULE_query_input = 28;
SiddhiQLParser.RULE_standard_stream = 29;
SiddhiQLParser.RULE_join_stream = 30;
SiddhiQLParser.RULE_join_source = 31;
SiddhiQLParser.RULE_pattern_stream = 32;
SiddhiQLParser.RULE_every_pattern_source_chain = 33;
SiddhiQLParser.RULE_pattern_source_chain = 34;
SiddhiQLParser.RULE_pattern_source = 35;
SiddhiQLParser.RULE_logical_stateful_source = 36;
SiddhiQLParser.RULE_pattern_collection_stateful_source = 37;
SiddhiQLParser.RULE_standard_stateful_source = 38;
SiddhiQLParser.RULE_basic_source = 39;
SiddhiQLParser.RULE_basic_source_stream_handlers = 40;
SiddhiQLParser.RULE_basic_source_stream_handler = 41;
SiddhiQLParser.RULE_sequence_stream = 42;
SiddhiQLParser.RULE_sequence_source_chain = 43;
SiddhiQLParser.RULE_sequence_source = 44;
SiddhiQLParser.RULE_sequence_collection_stateful_source = 45;
SiddhiQLParser.RULE_anonymous_stream = 46;
SiddhiQLParser.RULE_filter = 47;
SiddhiQLParser.RULE_stream_function = 48;
SiddhiQLParser.RULE_window = 49;
SiddhiQLParser.RULE_query_section = 50;
SiddhiQLParser.RULE_group_by = 51;
SiddhiQLParser.RULE_having = 52;
SiddhiQLParser.RULE_query_output = 53;
SiddhiQLParser.RULE_output_event_type = 54;
SiddhiQLParser.RULE_output_rate = 55;
SiddhiQLParser.RULE_output_rate_type = 56;
SiddhiQLParser.RULE_within_time = 57;
SiddhiQLParser.RULE_output_attribute = 58;
SiddhiQLParser.RULE_attribute = 59;
SiddhiQLParser.RULE_expression = 60;
SiddhiQLParser.RULE_math_operation = 61;
SiddhiQLParser.RULE_function_operation = 62;
SiddhiQLParser.RULE_attribute_list = 63;
SiddhiQLParser.RULE_null_check = 64;
SiddhiQLParser.RULE_stream_reference = 65;
SiddhiQLParser.RULE_attribute_reference = 66;
SiddhiQLParser.RULE_attribute_index = 67;
SiddhiQLParser.RULE_function_id = 68;
SiddhiQLParser.RULE_function_namespace = 69;
SiddhiQLParser.RULE_stream_id = 70;
SiddhiQLParser.RULE_stream_alias = 71;
SiddhiQLParser.RULE_property_name = 72;
SiddhiQLParser.RULE_attribute_name = 73;
SiddhiQLParser.RULE_type = 74;
SiddhiQLParser.RULE_property_value = 75;
SiddhiQLParser.RULE_property_separator = 76;
SiddhiQLParser.RULE_source = 77;
SiddhiQLParser.RULE_target = 78;
SiddhiQLParser.RULE_event = 79;
SiddhiQLParser.RULE_name = 80;
SiddhiQLParser.RULE_collect = 81;
SiddhiQLParser.RULE_attribute_type = 82;
SiddhiQLParser.RULE_join = 83;
SiddhiQLParser.RULE_constant_value = 84;
SiddhiQLParser.RULE_id = 85;
SiddhiQLParser.RULE_keyword = 86;
SiddhiQLParser.RULE_time_value = 87;
SiddhiQLParser.RULE_year_value = 88;
SiddhiQLParser.RULE_month_value = 89;
SiddhiQLParser.RULE_week_value = 90;
SiddhiQLParser.RULE_day_value = 91;
SiddhiQLParser.RULE_hour_value = 92;
SiddhiQLParser.RULE_minute_value = 93;
SiddhiQLParser.RULE_second_value = 94;
SiddhiQLParser.RULE_millisecond_value = 95;
SiddhiQLParser.RULE_signed_double_value = 96;
SiddhiQLParser.RULE_signed_long_value = 97;
SiddhiQLParser.RULE_signed_float_value = 98;
SiddhiQLParser.RULE_signed_int_value = 99;
SiddhiQLParser.RULE_bool_value = 100;
SiddhiQLParser.RULE_string_value = 101;

function ParseContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_parse;
    return this;
}

ParseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParseContext.prototype.constructor = ParseContext;

ParseContext.prototype.execution_plan = function () {
    return this.getTypedRuleContext(Execution_planContext, 0);
};

ParseContext.prototype.EOF = function () {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

ParseContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterParse(this);
    }
};

ParseContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitParse(this);
    }
};


SiddhiQLParser.ParseContext = ParseContext;

SiddhiQLParser.prototype.parse = function () {

    var localctx = new ParseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, SiddhiQLParser.RULE_parse);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 204;
        this.execution_plan();
        this.state = 205;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ErrorContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_error;
    return this;
}

ErrorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ErrorContext.prototype.constructor = ErrorContext;

ErrorContext.prototype.UNEXPECTED_CHAR = function () {
    return this.getToken(SiddhiQLParser.UNEXPECTED_CHAR, 0);
};

ErrorContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterError(this);
    }
};

ErrorContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitError(this);
    }
};


SiddhiQLParser.ErrorContext = ErrorContext;

SiddhiQLParser.prototype.error = function () {

    var localctx = new ErrorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, SiddhiQLParser.RULE_error);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 207;
        this.match(SiddhiQLParser.UNEXPECTED_CHAR);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Execution_planContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_execution_plan;
    return this;
}

Execution_planContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Execution_planContext.prototype.constructor = Execution_planContext;

Execution_planContext.prototype.plan_annotation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Plan_annotationContext);
    } else {
        return this.getTypedRuleContext(Plan_annotationContext, i);
    }
};

Execution_planContext.prototype.error = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext, i);
    }
};

Execution_planContext.prototype.definition_stream = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Definition_streamContext);
    } else {
        return this.getTypedRuleContext(Definition_streamContext, i);
    }
};

Execution_planContext.prototype.definition_table = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Definition_tableContext);
    } else {
        return this.getTypedRuleContext(Definition_tableContext, i);
    }
};

Execution_planContext.prototype.definition_trigger = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Definition_triggerContext);
    } else {
        return this.getTypedRuleContext(Definition_triggerContext, i);
    }
};

Execution_planContext.prototype.definition_function = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Definition_functionContext);
    } else {
        return this.getTypedRuleContext(Definition_functionContext, i);
    }
};

Execution_planContext.prototype.definition_window = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Definition_windowContext);
    } else {
        return this.getTypedRuleContext(Definition_windowContext, i);
    }
};

Execution_planContext.prototype.execution_element = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Execution_elementContext);
    } else {
        return this.getTypedRuleContext(Execution_elementContext, i);
    }
};

Execution_planContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterExecution_plan(this);
    }
};

Execution_planContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitExecution_plan(this);
    }
};


SiddhiQLParser.Execution_planContext = Execution_planContext;

SiddhiQLParser.prototype.execution_plan = function () {

    var localctx = new Execution_planContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, SiddhiQLParser.RULE_execution_plan);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 213;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input, 1, this._ctx)
        while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if (_alt === 1) {
                this.state = 211;
                switch (this._input.LA(1)) {
                    case SiddhiQLParser.AT_SYMBOL:
                        this.state = 209;
                        this.plan_annotation();
                        break;
                    case SiddhiQLParser.UNEXPECTED_CHAR:
                        this.state = 210;
                        this.error();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                }
            }
            this.state = 215;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input, 1, this._ctx);
        }

        this.state = 295;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 16, this._ctx);
        switch (la_) {
            case 1:
                this.state = 222;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 2, this._ctx);
                switch (la_) {
                    case 1:
                        this.state = 216;
                        this.definition_stream();
                        break;

                    case 2:
                        this.state = 217;
                        this.definition_table();
                        break;

                    case 3:
                        this.state = 218;
                        this.definition_trigger();
                        break;

                    case 4:
                        this.state = 219;
                        this.definition_function();
                        break;

                    case 5:
                        this.state = 220;
                        this.definition_window();
                        break;

                    case 6:
                        this.state = 221;
                        this.error();
                        break;

                }
                this.state = 235;
                this._errHandler.sync(this);
                var _alt = this._interp.adaptivePredict(this._input, 4, this._ctx)
                while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        this.state = 224;
                        this.match(SiddhiQLParser.SCOL);
                        this.state = 231;
                        this._errHandler.sync(this);
                        var la_ = this._interp.adaptivePredict(this._input, 3, this._ctx);
                        switch (la_) {
                            case 1:
                                this.state = 225;
                                this.definition_stream();
                                break;

                            case 2:
                                this.state = 226;
                                this.definition_table();
                                break;

                            case 3:
                                this.state = 227;
                                this.definition_trigger();
                                break;

                            case 4:
                                this.state = 228;
                                this.definition_function();
                                break;

                            case 5:
                                this.state = 229;
                                this.definition_window();
                                break;

                            case 6:
                                this.state = 230;
                                this.error();
                                break;

                        }
                    }
                    this.state = 237;
                    this._errHandler.sync(this);
                    _alt = this._interp.adaptivePredict(this._input, 4, this._ctx);
                }

                this.state = 239;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.SCOL) {
                    this.state = 238;
                    this.match(SiddhiQLParser.SCOL);
                }

                break;

            case 2:
                break;

            case 3:
                this.state = 244;
                switch (this._input.LA(1)) {
                    case SiddhiQLParser.AT_SYMBOL:
                    case SiddhiQLParser.FROM:
                    case SiddhiQLParser.PARTITION:
                        this.state = 242;
                        this.execution_element();
                        break;
                    case SiddhiQLParser.UNEXPECTED_CHAR:
                        this.state = 243;
                        this.error();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                }
                this.state = 253;
                this._errHandler.sync(this);
                var _alt = this._interp.adaptivePredict(this._input, 8, this._ctx)
                while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        this.state = 246;
                        this.match(SiddhiQLParser.SCOL);
                        this.state = 249;
                        switch (this._input.LA(1)) {
                            case SiddhiQLParser.AT_SYMBOL:
                            case SiddhiQLParser.FROM:
                            case SiddhiQLParser.PARTITION:
                                this.state = 247;
                                this.execution_element();
                                break;
                            case SiddhiQLParser.UNEXPECTED_CHAR:
                                this.state = 248;
                                this.error();
                                break;
                            default:
                                throw new antlr4.error.NoViableAltException(this);
                        }
                    }
                    this.state = 255;
                    this._errHandler.sync(this);
                    _alt = this._interp.adaptivePredict(this._input, 8, this._ctx);
                }

                this.state = 257;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.SCOL) {
                    this.state = 256;
                    this.match(SiddhiQLParser.SCOL);
                }

                break;

            case 4:
                break;

            case 5:
                this.state = 266;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 10, this._ctx);
                switch (la_) {
                    case 1:
                        this.state = 260;
                        this.definition_stream();
                        break;

                    case 2:
                        this.state = 261;
                        this.definition_table();
                        break;

                    case 3:
                        this.state = 262;
                        this.definition_trigger();
                        break;

                    case 4:
                        this.state = 263;
                        this.definition_function();
                        break;

                    case 5:
                        this.state = 264;
                        this.definition_window();
                        break;

                    case 6:
                        this.state = 265;
                        this.error();
                        break;

                }
                this.state = 279;
                this._errHandler.sync(this);
                var _alt = this._interp.adaptivePredict(this._input, 12, this._ctx)
                while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        this.state = 268;
                        this.match(SiddhiQLParser.SCOL);
                        this.state = 275;
                        this._errHandler.sync(this);
                        var la_ = this._interp.adaptivePredict(this._input, 11, this._ctx);
                        switch (la_) {
                            case 1:
                                this.state = 269;
                                this.definition_stream();
                                break;

                            case 2:
                                this.state = 270;
                                this.definition_table();
                                break;

                            case 3:
                                this.state = 271;
                                this.definition_trigger();
                                break;

                            case 4:
                                this.state = 272;
                                this.definition_function();
                                break;

                            case 5:
                                this.state = 273;
                                this.definition_window();
                                break;

                            case 6:
                                this.state = 274;
                                this.error();
                                break;

                        }
                    }
                    this.state = 281;
                    this._errHandler.sync(this);
                    _alt = this._interp.adaptivePredict(this._input, 12, this._ctx);
                }

                this.state = 289;
                this._errHandler.sync(this);
                var _alt = this._interp.adaptivePredict(this._input, 14, this._ctx)
                while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        this.state = 282;
                        this.match(SiddhiQLParser.SCOL);
                        this.state = 285;
                        switch (this._input.LA(1)) {
                            case SiddhiQLParser.AT_SYMBOL:
                            case SiddhiQLParser.FROM:
                            case SiddhiQLParser.PARTITION:
                                this.state = 283;
                                this.execution_element();
                                break;
                            case SiddhiQLParser.UNEXPECTED_CHAR:
                                this.state = 284;
                                this.error();
                                break;
                            default:
                                throw new antlr4.error.NoViableAltException(this);
                        }
                    }
                    this.state = 291;
                    this._errHandler.sync(this);
                    _alt = this._interp.adaptivePredict(this._input, 14, this._ctx);
                }

                this.state = 293;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.SCOL) {
                    this.state = 292;
                    this.match(SiddhiQLParser.SCOL);
                }

                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Execution_elementContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_execution_element;
    return this;
}

Execution_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Execution_elementContext.prototype.constructor = Execution_elementContext;

Execution_elementContext.prototype.query = function () {
    return this.getTypedRuleContext(QueryContext, 0);
};

Execution_elementContext.prototype.partition = function () {
    return this.getTypedRuleContext(PartitionContext, 0);
};

Execution_elementContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterExecution_element(this);
    }
};

Execution_elementContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitExecution_element(this);
    }
};


SiddhiQLParser.Execution_elementContext = Execution_elementContext;

SiddhiQLParser.prototype.execution_element = function () {

    var localctx = new Execution_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, SiddhiQLParser.RULE_execution_element);
    try {
        this.state = 299;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 17, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 297;
                this.query();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 298;
                this.partition();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_stream_finalContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream_final;
    return this;
}

Definition_stream_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_stream_finalContext.prototype.constructor = Definition_stream_finalContext;

Definition_stream_finalContext.prototype.definition_stream = function () {
    return this.getTypedRuleContext(Definition_streamContext, 0);
};

Definition_stream_finalContext.prototype.EOF = function () {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_stream_finalContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_stream_final(this);
    }
};

Definition_stream_finalContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_stream_final(this);
    }
};


SiddhiQLParser.Definition_stream_finalContext = Definition_stream_finalContext;

SiddhiQLParser.prototype.definition_stream_final = function () {

    var localctx = new Definition_stream_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, SiddhiQLParser.RULE_definition_stream_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 301;
        this.definition_stream();
        this.state = 303;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SCOL) {
            this.state = 302;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 305;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_streamContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream;
    return this;
}

Definition_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_streamContext.prototype.constructor = Definition_streamContext;

Definition_streamContext.prototype.DEFINE = function () {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_streamContext.prototype.STREAM = function () {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

Definition_streamContext.prototype.source = function () {
    return this.getTypedRuleContext(SourceContext, 0);
};

Definition_streamContext.prototype.attribute_name = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext, i);
    }
};

Definition_streamContext.prototype.attribute_type = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext, i);
    }
};

Definition_streamContext.prototype.annotation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext, i);
    }
};

Definition_streamContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_stream(this);
    }
};

Definition_streamContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_stream(this);
    }
};


SiddhiQLParser.Definition_streamContext = Definition_streamContext;

SiddhiQLParser.prototype.definition_stream = function () {

    var localctx = new Definition_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, SiddhiQLParser.RULE_definition_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 310;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.AT_SYMBOL) {
            this.state = 307;
            this.annotation();
            this.state = 312;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 313;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 314;
        this.match(SiddhiQLParser.STREAM);
        this.state = 315;
        this.source();
        this.state = 316;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 317;
        this.attribute_name();
        this.state = 318;
        this.attribute_type();
        this.state = 325;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.COMMA) {
            this.state = 319;
            this.match(SiddhiQLParser.COMMA);
            this.state = 320;
            this.attribute_name();
            this.state = 321;
            this.attribute_type();
            this.state = 327;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 328;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_table_finalContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table_final;
    return this;
}

Definition_table_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_table_finalContext.prototype.constructor = Definition_table_finalContext;

Definition_table_finalContext.prototype.definition_table = function () {
    return this.getTypedRuleContext(Definition_tableContext, 0);
};

Definition_table_finalContext.prototype.EOF = function () {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_table_finalContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_table_final(this);
    }
};

Definition_table_finalContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_table_final(this);
    }
};


SiddhiQLParser.Definition_table_finalContext = Definition_table_finalContext;

SiddhiQLParser.prototype.definition_table_final = function () {

    var localctx = new Definition_table_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, SiddhiQLParser.RULE_definition_table_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 330;
        this.definition_table();
        this.state = 332;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SCOL) {
            this.state = 331;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 334;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_tableContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table;
    return this;
}

Definition_tableContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_tableContext.prototype.constructor = Definition_tableContext;

Definition_tableContext.prototype.DEFINE = function () {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_tableContext.prototype.TABLE = function () {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

Definition_tableContext.prototype.source = function () {
    return this.getTypedRuleContext(SourceContext, 0);
};

Definition_tableContext.prototype.attribute_name = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext, i);
    }
};

Definition_tableContext.prototype.attribute_type = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext, i);
    }
};

Definition_tableContext.prototype.annotation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext, i);
    }
};

Definition_tableContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_table(this);
    }
};

Definition_tableContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_table(this);
    }
};


SiddhiQLParser.Definition_tableContext = Definition_tableContext;

SiddhiQLParser.prototype.definition_table = function () {

    var localctx = new Definition_tableContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, SiddhiQLParser.RULE_definition_table);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 339;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.AT_SYMBOL) {
            this.state = 336;
            this.annotation();
            this.state = 341;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 342;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 343;
        this.match(SiddhiQLParser.TABLE);
        this.state = 344;
        this.source();
        this.state = 345;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 346;
        this.attribute_name();
        this.state = 347;
        this.attribute_type();
        this.state = 354;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.COMMA) {
            this.state = 348;
            this.match(SiddhiQLParser.COMMA);
            this.state = 349;
            this.attribute_name();
            this.state = 350;
            this.attribute_type();
            this.state = 356;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 357;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_window_finalContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_window_final;
    return this;
}

Definition_window_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_window_finalContext.prototype.constructor = Definition_window_finalContext;

Definition_window_finalContext.prototype.definition_window = function () {
    return this.getTypedRuleContext(Definition_windowContext, 0);
};

Definition_window_finalContext.prototype.EOF = function () {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_window_finalContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_window_final(this);
    }
};

Definition_window_finalContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_window_final(this);
    }
};


SiddhiQLParser.Definition_window_finalContext = Definition_window_finalContext;

SiddhiQLParser.prototype.definition_window_final = function () {

    var localctx = new Definition_window_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, SiddhiQLParser.RULE_definition_window_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 359;
        this.definition_window();
        this.state = 361;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SCOL) {
            this.state = 360;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 363;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_windowContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_window;
    return this;
}

Definition_windowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_windowContext.prototype.constructor = Definition_windowContext;

Definition_windowContext.prototype.DEFINE = function () {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_windowContext.prototype.WINDOW = function () {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

Definition_windowContext.prototype.source = function () {
    return this.getTypedRuleContext(SourceContext, 0);
};

Definition_windowContext.prototype.attribute_name = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext, i);
    }
};

Definition_windowContext.prototype.attribute_type = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext, i);
    }
};

Definition_windowContext.prototype.function_operation = function () {
    return this.getTypedRuleContext(Function_operationContext, 0);
};

Definition_windowContext.prototype.annotation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext, i);
    }
};

Definition_windowContext.prototype.OUTPUT = function () {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Definition_windowContext.prototype.output_event_type = function () {
    return this.getTypedRuleContext(Output_event_typeContext, 0);
};

Definition_windowContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_window(this);
    }
};

Definition_windowContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_window(this);
    }
};


SiddhiQLParser.Definition_windowContext = Definition_windowContext;

SiddhiQLParser.prototype.definition_window = function () {

    var localctx = new Definition_windowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, SiddhiQLParser.RULE_definition_window);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 368;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.AT_SYMBOL) {
            this.state = 365;
            this.annotation();
            this.state = 370;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 371;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 372;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 373;
        this.source();
        this.state = 374;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 375;
        this.attribute_name();
        this.state = 376;
        this.attribute_type();
        this.state = 383;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.COMMA) {
            this.state = 377;
            this.match(SiddhiQLParser.COMMA);
            this.state = 378;
            this.attribute_name();
            this.state = 379;
            this.attribute_type();
            this.state = 385;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 386;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 387;
        this.function_operation();
        this.state = 390;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.OUTPUT) {
            this.state = 388;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 389;
            this.output_event_type();
        }

    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_function_finalContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function_final;
    return this;
}

Definition_function_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_function_finalContext.prototype.constructor = Definition_function_finalContext;

Definition_function_finalContext.prototype.definition_function = function () {
    return this.getTypedRuleContext(Definition_functionContext, 0);
};

Definition_function_finalContext.prototype.EOF = function () {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_function_finalContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_function_final(this);
    }
};

Definition_function_finalContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_function_final(this);
    }
};


SiddhiQLParser.Definition_function_finalContext = Definition_function_finalContext;

SiddhiQLParser.prototype.definition_function_final = function () {

    var localctx = new Definition_function_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, SiddhiQLParser.RULE_definition_function_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 392;
        this.definition_function();
        this.state = 394;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SCOL) {
            this.state = 393;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 396;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_functionContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function;
    return this;
}

Definition_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_functionContext.prototype.constructor = Definition_functionContext;

Definition_functionContext.prototype.DEFINE = function () {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_functionContext.prototype.FUNCTION = function () {
    return this.getToken(SiddhiQLParser.FUNCTION, 0);
};

Definition_functionContext.prototype.function_name = function () {
    return this.getTypedRuleContext(Function_nameContext, 0);
};

Definition_functionContext.prototype.language_name = function () {
    return this.getTypedRuleContext(Language_nameContext, 0);
};

Definition_functionContext.prototype.RETURN = function () {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Definition_functionContext.prototype.attribute_type = function () {
    return this.getTypedRuleContext(Attribute_typeContext, 0);
};

Definition_functionContext.prototype.function_body = function () {
    return this.getTypedRuleContext(Function_bodyContext, 0);
};

Definition_functionContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_function(this);
    }
};

Definition_functionContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_function(this);
    }
};


SiddhiQLParser.Definition_functionContext = Definition_functionContext;

SiddhiQLParser.prototype.definition_function = function () {

    var localctx = new Definition_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, SiddhiQLParser.RULE_definition_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 398;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 399;
        this.match(SiddhiQLParser.FUNCTION);
        this.state = 400;
        this.function_name();
        this.state = 401;
        this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
        this.state = 402;
        this.language_name();
        this.state = 403;
        this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
        this.state = 404;
        this.match(SiddhiQLParser.RETURN);
        this.state = 405;
        this.attribute_type();
        this.state = 406;
        this.function_body();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_nameContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_name;
    return this;
}

Function_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_nameContext.prototype.constructor = Function_nameContext;

Function_nameContext.prototype.id = function () {
    return this.getTypedRuleContext(IdContext, 0);
};

Function_nameContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterFunction_name(this);
    }
};

Function_nameContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitFunction_name(this);
    }
};


SiddhiQLParser.Function_nameContext = Function_nameContext;

SiddhiQLParser.prototype.function_name = function () {

    var localctx = new Function_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, SiddhiQLParser.RULE_function_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 408;
        this.id();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Language_nameContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_language_name;
    return this;
}

Language_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Language_nameContext.prototype.constructor = Language_nameContext;

Language_nameContext.prototype.id = function () {
    return this.getTypedRuleContext(IdContext, 0);
};

Language_nameContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterLanguage_name(this);
    }
};

Language_nameContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitLanguage_name(this);
    }
};


SiddhiQLParser.Language_nameContext = Language_nameContext;

SiddhiQLParser.prototype.language_name = function () {

    var localctx = new Language_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, SiddhiQLParser.RULE_language_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 410;
        this.id();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_bodyContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_body;
    return this;
}

Function_bodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_bodyContext.prototype.constructor = Function_bodyContext;

Function_bodyContext.prototype.SCRIPT = function () {
    return this.getToken(SiddhiQLParser.SCRIPT, 0);
};

Function_bodyContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterFunction_body(this);
    }
};

Function_bodyContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitFunction_body(this);
    }
};


SiddhiQLParser.Function_bodyContext = Function_bodyContext;

SiddhiQLParser.prototype.function_body = function () {

    var localctx = new Function_bodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, SiddhiQLParser.RULE_function_body);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 412;
        this.match(SiddhiQLParser.SCRIPT);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_trigger_finalContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_trigger_final;
    return this;
}

Definition_trigger_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_trigger_finalContext.prototype.constructor = Definition_trigger_finalContext;

Definition_trigger_finalContext.prototype.definition_trigger = function () {
    return this.getTypedRuleContext(Definition_triggerContext, 0);
};

Definition_trigger_finalContext.prototype.EOF = function () {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_trigger_finalContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_trigger_final(this);
    }
};

Definition_trigger_finalContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_trigger_final(this);
    }
};


SiddhiQLParser.Definition_trigger_finalContext = Definition_trigger_finalContext;

SiddhiQLParser.prototype.definition_trigger_final = function () {

    var localctx = new Definition_trigger_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, SiddhiQLParser.RULE_definition_trigger_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 414;
        this.definition_trigger();
        this.state = 416;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SCOL) {
            this.state = 415;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 418;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_triggerContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_trigger;
    return this;
}

Definition_triggerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_triggerContext.prototype.constructor = Definition_triggerContext;

Definition_triggerContext.prototype.DEFINE = function () {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_triggerContext.prototype.TRIGGER = function () {
    return this.getToken(SiddhiQLParser.TRIGGER, 0);
};

Definition_triggerContext.prototype.trigger_name = function () {
    return this.getTypedRuleContext(Trigger_nameContext, 0);
};

Definition_triggerContext.prototype.AT = function () {
    return this.getToken(SiddhiQLParser.AT, 0);
};

Definition_triggerContext.prototype.EVERY = function () {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Definition_triggerContext.prototype.time_value = function () {
    return this.getTypedRuleContext(Time_valueContext, 0);
};

Definition_triggerContext.prototype.string_value = function () {
    return this.getTypedRuleContext(String_valueContext, 0);
};

Definition_triggerContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDefinition_trigger(this);
    }
};

Definition_triggerContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDefinition_trigger(this);
    }
};


SiddhiQLParser.Definition_triggerContext = Definition_triggerContext;

SiddhiQLParser.prototype.definition_trigger = function () {

    var localctx = new Definition_triggerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, SiddhiQLParser.RULE_definition_trigger);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 420;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 421;
        this.match(SiddhiQLParser.TRIGGER);
        this.state = 422;
        this.trigger_name();
        this.state = 423;
        this.match(SiddhiQLParser.AT);
        this.state = 427;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.EVERY:
                this.state = 424;
                this.match(SiddhiQLParser.EVERY);
                this.state = 425;
                this.time_value();
                break;
            case SiddhiQLParser.STRING_LITERAL:
                this.state = 426;
                this.string_value();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Trigger_nameContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_trigger_name;
    return this;
}

Trigger_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Trigger_nameContext.prototype.constructor = Trigger_nameContext;

Trigger_nameContext.prototype.id = function () {
    return this.getTypedRuleContext(IdContext, 0);
};

Trigger_nameContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterTrigger_name(this);
    }
};

Trigger_nameContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitTrigger_name(this);
    }
};


SiddhiQLParser.Trigger_nameContext = Trigger_nameContext;

SiddhiQLParser.prototype.trigger_name = function () {

    var localctx = new Trigger_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, SiddhiQLParser.RULE_trigger_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 429;
        this.id();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation;
    return this;
}

AnnotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationContext.prototype.constructor = AnnotationContext;

AnnotationContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

AnnotationContext.prototype.annotation_element = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext, i);
    }
};

AnnotationContext.prototype.annotation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext, i);
    }
};

AnnotationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAnnotation(this);
    }
};

AnnotationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAnnotation(this);
    }
};


SiddhiQLParser.AnnotationContext = AnnotationContext;

SiddhiQLParser.prototype.annotation = function () {

    var localctx = new AnnotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, SiddhiQLParser.RULE_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 431;
        this.match(SiddhiQLParser.AT_SYMBOL);
        this.state = 432;
        this.name();
        this.state = 450;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.OPEN_PAR) {
            this.state = 433;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 436;
            switch (this._input.LA(1)) {
                case SiddhiQLParser.STREAM:
                case SiddhiQLParser.DEFINE:
                case SiddhiQLParser.TABLE:
                case SiddhiQLParser.FROM:
                case SiddhiQLParser.PARTITION:
                case SiddhiQLParser.WINDOW:
                case SiddhiQLParser.SELECT:
                case SiddhiQLParser.GROUP:
                case SiddhiQLParser.BY:
                case SiddhiQLParser.HAVING:
                case SiddhiQLParser.INSERT:
                case SiddhiQLParser.DELETE:
                case SiddhiQLParser.UPDATE:
                case SiddhiQLParser.RETURN:
                case SiddhiQLParser.EVENTS:
                case SiddhiQLParser.INTO:
                case SiddhiQLParser.OUTPUT:
                case SiddhiQLParser.EXPIRED:
                case SiddhiQLParser.CURRENT:
                case SiddhiQLParser.SNAPSHOT:
                case SiddhiQLParser.FOR:
                case SiddhiQLParser.RAW:
                case SiddhiQLParser.OF:
                case SiddhiQLParser.AS:
                case SiddhiQLParser.OR:
                case SiddhiQLParser.AND:
                case SiddhiQLParser.ON:
                case SiddhiQLParser.IS:
                case SiddhiQLParser.NOT:
                case SiddhiQLParser.WITHIN:
                case SiddhiQLParser.WITH:
                case SiddhiQLParser.BEGIN:
                case SiddhiQLParser.END:
                case SiddhiQLParser.NULL:
                case SiddhiQLParser.EVERY:
                case SiddhiQLParser.LAST:
                case SiddhiQLParser.ALL:
                case SiddhiQLParser.FIRST:
                case SiddhiQLParser.JOIN:
                case SiddhiQLParser.INNER:
                case SiddhiQLParser.OUTER:
                case SiddhiQLParser.RIGHT:
                case SiddhiQLParser.LEFT:
                case SiddhiQLParser.FULL:
                case SiddhiQLParser.UNIDIRECTIONAL:
                case SiddhiQLParser.YEARS:
                case SiddhiQLParser.MONTHS:
                case SiddhiQLParser.WEEKS:
                case SiddhiQLParser.DAYS:
                case SiddhiQLParser.HOURS:
                case SiddhiQLParser.MINUTES:
                case SiddhiQLParser.SECONDS:
                case SiddhiQLParser.MILLISECONDS:
                case SiddhiQLParser.FALSE:
                case SiddhiQLParser.TRUE:
                case SiddhiQLParser.STRING:
                case SiddhiQLParser.INT:
                case SiddhiQLParser.LONG:
                case SiddhiQLParser.FLOAT:
                case SiddhiQLParser.DOUBLE:
                case SiddhiQLParser.BOOL:
                case SiddhiQLParser.OBJECT:
                case SiddhiQLParser.ID_QUOTES:
                case SiddhiQLParser.ID:
                case SiddhiQLParser.STRING_LITERAL:
                    this.state = 434;
                    this.annotation_element();
                    break;
                case SiddhiQLParser.AT_SYMBOL:
                    this.state = 435;
                    this.annotation();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 445;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while (_la === SiddhiQLParser.COMMA) {
                this.state = 438;
                this.match(SiddhiQLParser.COMMA);
                this.state = 441;
                switch (this._input.LA(1)) {
                    case SiddhiQLParser.STREAM:
                    case SiddhiQLParser.DEFINE:
                    case SiddhiQLParser.TABLE:
                    case SiddhiQLParser.FROM:
                    case SiddhiQLParser.PARTITION:
                    case SiddhiQLParser.WINDOW:
                    case SiddhiQLParser.SELECT:
                    case SiddhiQLParser.GROUP:
                    case SiddhiQLParser.BY:
                    case SiddhiQLParser.HAVING:
                    case SiddhiQLParser.INSERT:
                    case SiddhiQLParser.DELETE:
                    case SiddhiQLParser.UPDATE:
                    case SiddhiQLParser.RETURN:
                    case SiddhiQLParser.EVENTS:
                    case SiddhiQLParser.INTO:
                    case SiddhiQLParser.OUTPUT:
                    case SiddhiQLParser.EXPIRED:
                    case SiddhiQLParser.CURRENT:
                    case SiddhiQLParser.SNAPSHOT:
                    case SiddhiQLParser.FOR:
                    case SiddhiQLParser.RAW:
                    case SiddhiQLParser.OF:
                    case SiddhiQLParser.AS:
                    case SiddhiQLParser.OR:
                    case SiddhiQLParser.AND:
                    case SiddhiQLParser.ON:
                    case SiddhiQLParser.IS:
                    case SiddhiQLParser.NOT:
                    case SiddhiQLParser.WITHIN:
                    case SiddhiQLParser.WITH:
                    case SiddhiQLParser.BEGIN:
                    case SiddhiQLParser.END:
                    case SiddhiQLParser.NULL:
                    case SiddhiQLParser.EVERY:
                    case SiddhiQLParser.LAST:
                    case SiddhiQLParser.ALL:
                    case SiddhiQLParser.FIRST:
                    case SiddhiQLParser.JOIN:
                    case SiddhiQLParser.INNER:
                    case SiddhiQLParser.OUTER:
                    case SiddhiQLParser.RIGHT:
                    case SiddhiQLParser.LEFT:
                    case SiddhiQLParser.FULL:
                    case SiddhiQLParser.UNIDIRECTIONAL:
                    case SiddhiQLParser.YEARS:
                    case SiddhiQLParser.MONTHS:
                    case SiddhiQLParser.WEEKS:
                    case SiddhiQLParser.DAYS:
                    case SiddhiQLParser.HOURS:
                    case SiddhiQLParser.MINUTES:
                    case SiddhiQLParser.SECONDS:
                    case SiddhiQLParser.MILLISECONDS:
                    case SiddhiQLParser.FALSE:
                    case SiddhiQLParser.TRUE:
                    case SiddhiQLParser.STRING:
                    case SiddhiQLParser.INT:
                    case SiddhiQLParser.LONG:
                    case SiddhiQLParser.FLOAT:
                    case SiddhiQLParser.DOUBLE:
                    case SiddhiQLParser.BOOL:
                    case SiddhiQLParser.OBJECT:
                    case SiddhiQLParser.ID_QUOTES:
                    case SiddhiQLParser.ID:
                    case SiddhiQLParser.STRING_LITERAL:
                        this.state = 439;
                        this.annotation_element();
                        break;
                    case SiddhiQLParser.AT_SYMBOL:
                        this.state = 440;
                        this.annotation();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                }
                this.state = 447;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 448;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Plan_annotationContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_plan_annotation;
    return this;
}

Plan_annotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Plan_annotationContext.prototype.constructor = Plan_annotationContext;

Plan_annotationContext.prototype.PLAN = function () {
    return this.getToken(SiddhiQLParser.PLAN, 0);
};

Plan_annotationContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

Plan_annotationContext.prototype.annotation_element = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext, i);
    }
};

Plan_annotationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterPlan_annotation(this);
    }
};

Plan_annotationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitPlan_annotation(this);
    }
};


SiddhiQLParser.Plan_annotationContext = Plan_annotationContext;

SiddhiQLParser.prototype.plan_annotation = function () {

    var localctx = new Plan_annotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, SiddhiQLParser.RULE_plan_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 452;
        this.match(SiddhiQLParser.AT_SYMBOL);
        this.state = 453;
        this.match(SiddhiQLParser.PLAN);
        this.state = 454;
        this.match(SiddhiQLParser.COL);
        this.state = 455;
        this.name();
        this.state = 467;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.OPEN_PAR) {
            this.state = 456;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 457;
            this.annotation_element();
            this.state = 462;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while (_la === SiddhiQLParser.COMMA) {
                this.state = 458;
                this.match(SiddhiQLParser.COMMA);
                this.state = 459;
                this.annotation_element();
                this.state = 464;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 465;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Annotation_elementContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation_element;
    return this;
}

Annotation_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Annotation_elementContext.prototype.constructor = Annotation_elementContext;

Annotation_elementContext.prototype.property_value = function () {
    return this.getTypedRuleContext(Property_valueContext, 0);
};

Annotation_elementContext.prototype.property_name = function () {
    return this.getTypedRuleContext(Property_nameContext, 0);
};

Annotation_elementContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAnnotation_element(this);
    }
};

Annotation_elementContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAnnotation_element(this);
    }
};


SiddhiQLParser.Annotation_elementContext = Annotation_elementContext;

SiddhiQLParser.prototype.annotation_element = function () {

    var localctx = new Annotation_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, SiddhiQLParser.RULE_annotation_element);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 472;
        _la = this._input.LA(1);
        if (((((_la - 29)) & ~0x1f) == 0 && ((1 << (_la - 29)) & ((1 << (SiddhiQLParser.STREAM - 29)) | (1 << (SiddhiQLParser.DEFINE - 29)) | (1 << (SiddhiQLParser.TABLE - 29)) | (1 << (SiddhiQLParser.FROM - 29)) | (1 << (SiddhiQLParser.PARTITION - 29)) | (1 << (SiddhiQLParser.WINDOW - 29)) | (1 << (SiddhiQLParser.SELECT - 29)) | (1 << (SiddhiQLParser.GROUP - 29)) | (1 << (SiddhiQLParser.BY - 29)) | (1 << (SiddhiQLParser.HAVING - 29)) | (1 << (SiddhiQLParser.INSERT - 29)) | (1 << (SiddhiQLParser.DELETE - 29)) | (1 << (SiddhiQLParser.UPDATE - 29)) | (1 << (SiddhiQLParser.RETURN - 29)) | (1 << (SiddhiQLParser.EVENTS - 29)) | (1 << (SiddhiQLParser.INTO - 29)) | (1 << (SiddhiQLParser.OUTPUT - 29)) | (1 << (SiddhiQLParser.EXPIRED - 29)) | (1 << (SiddhiQLParser.CURRENT - 29)) | (1 << (SiddhiQLParser.SNAPSHOT - 29)) | (1 << (SiddhiQLParser.FOR - 29)) | (1 << (SiddhiQLParser.RAW - 29)) | (1 << (SiddhiQLParser.OF - 29)) | (1 << (SiddhiQLParser.AS - 29)) | (1 << (SiddhiQLParser.OR - 29)) | (1 << (SiddhiQLParser.AND - 29)) | (1 << (SiddhiQLParser.ON - 29)))) !== 0) || ((((_la - 61)) & ~0x1f) == 0 && ((1 << (_la - 61)) & ((1 << (SiddhiQLParser.IS - 61)) | (1 << (SiddhiQLParser.NOT - 61)) | (1 << (SiddhiQLParser.WITHIN - 61)) | (1 << (SiddhiQLParser.WITH - 61)) | (1 << (SiddhiQLParser.BEGIN - 61)) | (1 << (SiddhiQLParser.END - 61)) | (1 << (SiddhiQLParser.NULL - 61)) | (1 << (SiddhiQLParser.EVERY - 61)) | (1 << (SiddhiQLParser.LAST - 61)) | (1 << (SiddhiQLParser.ALL - 61)) | (1 << (SiddhiQLParser.FIRST - 61)) | (1 << (SiddhiQLParser.JOIN - 61)) | (1 << (SiddhiQLParser.INNER - 61)) | (1 << (SiddhiQLParser.OUTER - 61)) | (1 << (SiddhiQLParser.RIGHT - 61)) | (1 << (SiddhiQLParser.LEFT - 61)) | (1 << (SiddhiQLParser.FULL - 61)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 61)) | (1 << (SiddhiQLParser.YEARS - 61)) | (1 << (SiddhiQLParser.MONTHS - 61)) | (1 << (SiddhiQLParser.WEEKS - 61)) | (1 << (SiddhiQLParser.DAYS - 61)) | (1 << (SiddhiQLParser.HOURS - 61)) | (1 << (SiddhiQLParser.MINUTES - 61)) | (1 << (SiddhiQLParser.SECONDS - 61)) | (1 << (SiddhiQLParser.MILLISECONDS - 61)) | (1 << (SiddhiQLParser.FALSE - 61)) | (1 << (SiddhiQLParser.TRUE - 61)) | (1 << (SiddhiQLParser.STRING - 61)) | (1 << (SiddhiQLParser.INT - 61)) | (1 << (SiddhiQLParser.LONG - 61)) | (1 << (SiddhiQLParser.FLOAT - 61)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SiddhiQLParser.DOUBLE - 93)) | (1 << (SiddhiQLParser.BOOL - 93)) | (1 << (SiddhiQLParser.OBJECT - 93)) | (1 << (SiddhiQLParser.ID_QUOTES - 93)) | (1 << (SiddhiQLParser.ID - 93)))) !== 0)) {
            this.state = 469;
            this.property_name();
            this.state = 470;
            this.match(SiddhiQLParser.ASSIGN);
        }

        this.state = 474;
        this.property_value();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PartitionContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition;
    return this;
}

PartitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PartitionContext.prototype.constructor = PartitionContext;

PartitionContext.prototype.PARTITION = function () {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

PartitionContext.prototype.WITH = function () {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

PartitionContext.prototype.partition_with_stream = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Partition_with_streamContext);
    } else {
        return this.getTypedRuleContext(Partition_with_streamContext, i);
    }
};

PartitionContext.prototype.BEGIN = function () {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

PartitionContext.prototype.END = function () {
    return this.getToken(SiddhiQLParser.END, 0);
};

PartitionContext.prototype.query = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(QueryContext);
    } else {
        return this.getTypedRuleContext(QueryContext, i);
    }
};

PartitionContext.prototype.error = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext, i);
    }
};

PartitionContext.prototype.annotation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext, i);
    }
};

PartitionContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterPartition(this);
    }
};

PartitionContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitPartition(this);
    }
};


SiddhiQLParser.PartitionContext = PartitionContext;

SiddhiQLParser.prototype.partition = function () {

    var localctx = new PartitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, SiddhiQLParser.RULE_partition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 479;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.AT_SYMBOL) {
            this.state = 476;
            this.annotation();
            this.state = 481;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 482;
        this.match(SiddhiQLParser.PARTITION);
        this.state = 483;
        this.match(SiddhiQLParser.WITH);
        this.state = 484;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 485;
        this.partition_with_stream();
        this.state = 490;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.COMMA) {
            this.state = 486;
            this.match(SiddhiQLParser.COMMA);
            this.state = 487;
            this.partition_with_stream();
            this.state = 492;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 493;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 494;
        this.match(SiddhiQLParser.BEGIN);
        this.state = 497;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.AT_SYMBOL:
            case SiddhiQLParser.FROM:
                this.state = 495;
                this.query();
                break;
            case SiddhiQLParser.UNEXPECTED_CHAR:
                this.state = 496;
                this.error();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 506;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input, 42, this._ctx)
        while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if (_alt === 1) {
                this.state = 499;
                this.match(SiddhiQLParser.SCOL);
                this.state = 502;
                switch (this._input.LA(1)) {
                    case SiddhiQLParser.AT_SYMBOL:
                    case SiddhiQLParser.FROM:
                        this.state = 500;
                        this.query();
                        break;
                    case SiddhiQLParser.UNEXPECTED_CHAR:
                        this.state = 501;
                        this.error();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                }
            }
            this.state = 508;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input, 42, this._ctx);
        }

        this.state = 510;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SCOL) {
            this.state = 509;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 512;
        this.match(SiddhiQLParser.END);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_finalContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_final;
    return this;
}

Partition_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_finalContext.prototype.constructor = Partition_finalContext;

Partition_finalContext.prototype.partition = function () {
    return this.getTypedRuleContext(PartitionContext, 0);
};

Partition_finalContext.prototype.EOF = function () {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Partition_finalContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterPartition_final(this);
    }
};

Partition_finalContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitPartition_final(this);
    }
};


SiddhiQLParser.Partition_finalContext = Partition_finalContext;

SiddhiQLParser.prototype.partition_final = function () {

    var localctx = new Partition_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, SiddhiQLParser.RULE_partition_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 514;
        this.partition();
        this.state = 516;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SCOL) {
            this.state = 515;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 518;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_with_streamContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_with_stream;
    return this;
}

Partition_with_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_with_streamContext.prototype.constructor = Partition_with_streamContext;

Partition_with_streamContext.prototype.attribute = function () {
    return this.getTypedRuleContext(AttributeContext, 0);
};

Partition_with_streamContext.prototype.OF = function () {
    return this.getToken(SiddhiQLParser.OF, 0);
};

Partition_with_streamContext.prototype.stream_id = function () {
    return this.getTypedRuleContext(Stream_idContext, 0);
};

Partition_with_streamContext.prototype.condition_ranges = function () {
    return this.getTypedRuleContext(Condition_rangesContext, 0);
};

Partition_with_streamContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterPartition_with_stream(this);
    }
};

Partition_with_streamContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitPartition_with_stream(this);
    }
};


SiddhiQLParser.Partition_with_streamContext = Partition_with_streamContext;

SiddhiQLParser.prototype.partition_with_stream = function () {

    var localctx = new Partition_with_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, SiddhiQLParser.RULE_partition_with_stream);
    try {
        this.state = 528;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 45, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 520;
                this.attribute();
                this.state = 521;
                this.match(SiddhiQLParser.OF);
                this.state = 522;
                this.stream_id();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 524;
                this.condition_ranges();
                this.state = 525;
                this.match(SiddhiQLParser.OF);
                this.state = 526;
                this.stream_id();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangesContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_ranges;
    return this;
}

Condition_rangesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangesContext.prototype.constructor = Condition_rangesContext;

Condition_rangesContext.prototype.condition_range = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Condition_rangeContext);
    } else {
        return this.getTypedRuleContext(Condition_rangeContext, i);
    }
};

Condition_rangesContext.prototype.OR = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTokens(SiddhiQLParser.OR);
    } else {
        return this.getToken(SiddhiQLParser.OR, i);
    }
};


Condition_rangesContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterCondition_ranges(this);
    }
};

Condition_rangesContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitCondition_ranges(this);
    }
};


SiddhiQLParser.Condition_rangesContext = Condition_rangesContext;

SiddhiQLParser.prototype.condition_ranges = function () {

    var localctx = new Condition_rangesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, SiddhiQLParser.RULE_condition_ranges);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 530;
        this.condition_range();
        this.state = 535;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.OR) {
            this.state = 531;
            this.match(SiddhiQLParser.OR);
            this.state = 532;
            this.condition_range();
            this.state = 537;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangeContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_range;
    return this;
}

Condition_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangeContext.prototype.constructor = Condition_rangeContext;

Condition_rangeContext.prototype.expression = function () {
    return this.getTypedRuleContext(ExpressionContext, 0);
};

Condition_rangeContext.prototype.AS = function () {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Condition_rangeContext.prototype.string_value = function () {
    return this.getTypedRuleContext(String_valueContext, 0);
};

Condition_rangeContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterCondition_range(this);
    }
};

Condition_rangeContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitCondition_range(this);
    }
};


SiddhiQLParser.Condition_rangeContext = Condition_rangeContext;

SiddhiQLParser.prototype.condition_range = function () {

    var localctx = new Condition_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, SiddhiQLParser.RULE_condition_range);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 538;
        this.expression();
        this.state = 539;
        this.match(SiddhiQLParser.AS);
        this.state = 540;
        this.string_value();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_finalContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_final;
    return this;
}

Query_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_finalContext.prototype.constructor = Query_finalContext;

Query_finalContext.prototype.query = function () {
    return this.getTypedRuleContext(QueryContext, 0);
};

Query_finalContext.prototype.EOF = function () {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Query_finalContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterQuery_final(this);
    }
};

Query_finalContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitQuery_final(this);
    }
};


SiddhiQLParser.Query_finalContext = Query_finalContext;

SiddhiQLParser.prototype.query_final = function () {

    var localctx = new Query_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, SiddhiQLParser.RULE_query_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 542;
        this.query();
        this.state = 544;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SCOL) {
            this.state = 543;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 546;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QueryContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query;
    return this;
}

QueryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QueryContext.prototype.constructor = QueryContext;

QueryContext.prototype.FROM = function () {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

QueryContext.prototype.query_input = function () {
    return this.getTypedRuleContext(Query_inputContext, 0);
};

QueryContext.prototype.query_output = function () {
    return this.getTypedRuleContext(Query_outputContext, 0);
};

QueryContext.prototype.annotation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext, i);
    }
};

QueryContext.prototype.query_section = function () {
    return this.getTypedRuleContext(Query_sectionContext, 0);
};

QueryContext.prototype.output_rate = function () {
    return this.getTypedRuleContext(Output_rateContext, 0);
};

QueryContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterQuery(this);
    }
};

QueryContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitQuery(this);
    }
};


SiddhiQLParser.QueryContext = QueryContext;

SiddhiQLParser.prototype.query = function () {

    var localctx = new QueryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, SiddhiQLParser.RULE_query);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 551;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.AT_SYMBOL) {
            this.state = 548;
            this.annotation();
            this.state = 553;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 554;
        this.match(SiddhiQLParser.FROM);
        this.state = 555;
        this.query_input();
        this.state = 557;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.SELECT) {
            this.state = 556;
            this.query_section();
        }

        this.state = 560;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.OUTPUT) {
            this.state = 559;
            this.output_rate();
        }

        this.state = 562;
        this.query_output();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_inputContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_input;
    return this;
}

Query_inputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_inputContext.prototype.constructor = Query_inputContext;

Query_inputContext.prototype.standard_stream = function () {
    return this.getTypedRuleContext(Standard_streamContext, 0);
};

Query_inputContext.prototype.join_stream = function () {
    return this.getTypedRuleContext(Join_streamContext, 0);
};

Query_inputContext.prototype.pattern_stream = function () {
    return this.getTypedRuleContext(Pattern_streamContext, 0);
};

Query_inputContext.prototype.sequence_stream = function () {
    return this.getTypedRuleContext(Sequence_streamContext, 0);
};

Query_inputContext.prototype.anonymous_stream = function () {
    return this.getTypedRuleContext(Anonymous_streamContext, 0);
};

Query_inputContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterQuery_input(this);
    }
};

Query_inputContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitQuery_input(this);
    }
};


SiddhiQLParser.Query_inputContext = Query_inputContext;

SiddhiQLParser.prototype.query_input = function () {

    var localctx = new Query_inputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, SiddhiQLParser.RULE_query_input);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 569;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 51, this._ctx);
        switch (la_) {
            case 1:
                this.state = 564;
                this.standard_stream();
                break;

            case 2:
                this.state = 565;
                this.join_stream();
                break;

            case 3:
                this.state = 566;
                this.pattern_stream();
                break;

            case 4:
                this.state = 567;
                this.sequence_stream();
                break;

            case 5:
                this.state = 568;
                this.anonymous_stream();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_streamContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stream;
    this.pre_window_handlers = null; // Basic_source_stream_handlersContext
    this.post_window_handlers = null; // Basic_source_stream_handlersContext
    return this;
}

Standard_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_streamContext.prototype.constructor = Standard_streamContext;

Standard_streamContext.prototype.source = function () {
    return this.getTypedRuleContext(SourceContext, 0);
};

Standard_streamContext.prototype.window = function () {
    return this.getTypedRuleContext(WindowContext, 0);
};

Standard_streamContext.prototype.basic_source_stream_handlers = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlersContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlersContext, i);
    }
};

Standard_streamContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterStandard_stream(this);
    }
};

Standard_streamContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitStandard_stream(this);
    }
};


SiddhiQLParser.Standard_streamContext = Standard_streamContext;

SiddhiQLParser.prototype.standard_stream = function () {

    var localctx = new Standard_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, SiddhiQLParser.RULE_standard_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 571;
        this.source();
        this.state = 573;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 52, this._ctx);
        if (la_ === 1) {
            this.state = 572;
            localctx.pre_window_handlers = this.basic_source_stream_handlers();

        }
        this.state = 576;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 53, this._ctx);
        if (la_ === 1) {
            this.state = 575;
            this.window();

        }
        this.state = 579;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.OPEN_SQARE_BRACKETS || _la === SiddhiQLParser.HASH) {
            this.state = 578;
            localctx.post_window_handlers = this.basic_source_stream_handlers();
        }

    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_streamContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_stream;
    this.left_source = null; // Join_sourceContext
    this.right_source = null; // Join_sourceContext
    this.right_unidirectional = null; // Token
    this.left_unidirectional = null; // Token
    return this;
}

Join_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_streamContext.prototype.constructor = Join_streamContext;

Join_streamContext.prototype.join = function () {
    return this.getTypedRuleContext(JoinContext, 0);
};

Join_streamContext.prototype.join_source = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Join_sourceContext);
    } else {
        return this.getTypedRuleContext(Join_sourceContext, i);
    }
};

Join_streamContext.prototype.UNIDIRECTIONAL = function () {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

Join_streamContext.prototype.ON = function () {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Join_streamContext.prototype.expression = function () {
    return this.getTypedRuleContext(ExpressionContext, 0);
};

Join_streamContext.prototype.within_time = function () {
    return this.getTypedRuleContext(Within_timeContext, 0);
};

Join_streamContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterJoin_stream(this);
    }
};

Join_streamContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitJoin_stream(this);
    }
};


SiddhiQLParser.Join_streamContext = Join_streamContext;

SiddhiQLParser.prototype.join_stream = function () {

    var localctx = new Join_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, SiddhiQLParser.RULE_join_stream);
    var _la = 0; // Token type
    try {
        this.state = 613;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 61, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 581;
                localctx.left_source = this.join_source();
                this.state = 582;
                this.join();
                this.state = 583;
                localctx.right_source = this.join_source();
                this.state = 584;
                localctx.right_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
                this.state = 587;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.ON) {
                    this.state = 585;
                    this.match(SiddhiQLParser.ON);
                    this.state = 586;
                    this.expression();
                }

                this.state = 590;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.WITHIN) {
                    this.state = 589;
                    this.within_time();
                }

                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 592;
                localctx.left_source = this.join_source();
                this.state = 593;
                this.join();
                this.state = 594;
                localctx.right_source = this.join_source();
                this.state = 597;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.ON) {
                    this.state = 595;
                    this.match(SiddhiQLParser.ON);
                    this.state = 596;
                    this.expression();
                }

                this.state = 600;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.WITHIN) {
                    this.state = 599;
                    this.within_time();
                }

                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 602;
                localctx.left_source = this.join_source();
                this.state = 603;
                localctx.left_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
                this.state = 604;
                this.join();
                this.state = 605;
                localctx.right_source = this.join_source();
                this.state = 608;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.ON) {
                    this.state = 606;
                    this.match(SiddhiQLParser.ON);
                    this.state = 607;
                    this.expression();
                }

                this.state = 611;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.WITHIN) {
                    this.state = 610;
                    this.within_time();
                }

                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_sourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_source;
    return this;
}

Join_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_sourceContext.prototype.constructor = Join_sourceContext;

Join_sourceContext.prototype.source = function () {
    return this.getTypedRuleContext(SourceContext, 0);
};

Join_sourceContext.prototype.basic_source_stream_handlers = function () {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext, 0);
};

Join_sourceContext.prototype.window = function () {
    return this.getTypedRuleContext(WindowContext, 0);
};

Join_sourceContext.prototype.AS = function () {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Join_sourceContext.prototype.stream_alias = function () {
    return this.getTypedRuleContext(Stream_aliasContext, 0);
};

Join_sourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterJoin_source(this);
    }
};

Join_sourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitJoin_source(this);
    }
};


SiddhiQLParser.Join_sourceContext = Join_sourceContext;

SiddhiQLParser.prototype.join_source = function () {

    var localctx = new Join_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, SiddhiQLParser.RULE_join_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 615;
        this.source();
        this.state = 617;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 62, this._ctx);
        if (la_ === 1) {
            this.state = 616;
            this.basic_source_stream_handlers();

        }
        this.state = 620;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.HASH) {
            this.state = 619;
            this.window();
        }

        this.state = 624;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.AS) {
            this.state = 622;
            this.match(SiddhiQLParser.AS);
            this.state = 623;
            this.stream_alias();
        }

    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_streamContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_stream;
    return this;
}

Pattern_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_streamContext.prototype.constructor = Pattern_streamContext;

Pattern_streamContext.prototype.every_pattern_source_chain = function () {
    return this.getTypedRuleContext(Every_pattern_source_chainContext, 0);
};

Pattern_streamContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterPattern_stream(this);
    }
};

Pattern_streamContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitPattern_stream(this);
    }
};


SiddhiQLParser.Pattern_streamContext = Pattern_streamContext;

SiddhiQLParser.prototype.pattern_stream = function () {

    var localctx = new Pattern_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, SiddhiQLParser.RULE_pattern_stream);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 626;
        this.every_pattern_source_chain(0);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_pattern_source_chainContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_pattern_source_chain;
    return this;
}

Every_pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_pattern_source_chainContext.prototype.constructor = Every_pattern_source_chainContext;

Every_pattern_source_chainContext.prototype.every_pattern_source_chain = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Every_pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Every_pattern_source_chainContext, i);
    }
};

Every_pattern_source_chainContext.prototype.within_time = function () {
    return this.getTypedRuleContext(Within_timeContext, 0);
};

Every_pattern_source_chainContext.prototype.EVERY = function () {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_pattern_source_chainContext.prototype.pattern_source_chain = function () {
    return this.getTypedRuleContext(Pattern_source_chainContext, 0);
};

Every_pattern_source_chainContext.prototype.pattern_source = function () {
    return this.getTypedRuleContext(Pattern_sourceContext, 0);
};

Every_pattern_source_chainContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterEvery_pattern_source_chain(this);
    }
};

Every_pattern_source_chainContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitEvery_pattern_source_chain(this);
    }
};


SiddhiQLParser.prototype.every_pattern_source_chain = function (_p) {
    if (_p === undefined) {
        _p = 0;
    }
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Every_pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 66;
    this.enterRecursionRule(localctx, 66, SiddhiQLParser.RULE_every_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 648;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 68, this._ctx);
        switch (la_) {
            case 1:
                this.state = 629;
                this.match(SiddhiQLParser.OPEN_PAR);
                this.state = 630;
                this.every_pattern_source_chain(0);
                this.state = 631;
                this.match(SiddhiQLParser.CLOSE_PAR);
                this.state = 633;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 65, this._ctx);
                if (la_ === 1) {
                    this.state = 632;
                    this.within_time();

                }
                break;

            case 2:
                this.state = 635;
                this.match(SiddhiQLParser.EVERY);
                this.state = 636;
                this.match(SiddhiQLParser.OPEN_PAR);
                this.state = 637;
                this.pattern_source_chain(0);
                this.state = 638;
                this.match(SiddhiQLParser.CLOSE_PAR);
                this.state = 640;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 66, this._ctx);
                if (la_ === 1) {
                    this.state = 639;
                    this.within_time();

                }
                break;

            case 3:
                this.state = 642;
                this.pattern_source_chain(0);
                break;

            case 4:
                this.state = 643;
                this.match(SiddhiQLParser.EVERY);
                this.state = 644;
                this.pattern_source();
                this.state = 646;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 67, this._ctx);
                if (la_ === 1) {
                    this.state = 645;
                    this.within_time();

                }
                break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 655;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input, 69, this._ctx)
        while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if (_alt === 1) {
                if (this._parseListeners !== null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Every_pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_every_pattern_source_chain);
                this.state = 650;
                if (!( this.precpred(this._ctx, 3))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                }
                this.state = 651;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 652;
                this.every_pattern_source_chain(4);
            }
            this.state = 657;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input, 69, this._ctx);
        }

    } catch (error) {
        if (error instanceof antlr4.error.RecognitionException) {
            localctx.exception = error;
            this._errHandler.reportError(this, error);
            this._errHandler.recover(this, error);
        } else {
            throw error;
        }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_source_chainContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source_chain;
    return this;
}

Pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_source_chainContext.prototype.constructor = Pattern_source_chainContext;

Pattern_source_chainContext.prototype.pattern_source_chain = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Pattern_source_chainContext, i);
    }
};

Pattern_source_chainContext.prototype.within_time = function () {
    return this.getTypedRuleContext(Within_timeContext, 0);
};

Pattern_source_chainContext.prototype.pattern_source = function () {
    return this.getTypedRuleContext(Pattern_sourceContext, 0);
};

Pattern_source_chainContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterPattern_source_chain(this);
    }
};

Pattern_source_chainContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitPattern_source_chain(this);
    }
};


SiddhiQLParser.prototype.pattern_source_chain = function (_p) {
    if (_p === undefined) {
        _p = 0;
    }
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 68;
    this.enterRecursionRule(localctx, 68, SiddhiQLParser.RULE_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 669;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.OPEN_PAR:
                this.state = 659;
                this.match(SiddhiQLParser.OPEN_PAR);
                this.state = 660;
                this.pattern_source_chain(0);
                this.state = 661;
                this.match(SiddhiQLParser.CLOSE_PAR);
                this.state = 663;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 70, this._ctx);
                if (la_ === 1) {
                    this.state = 662;
                    this.within_time();

                }
                break;
            case SiddhiQLParser.HASH:
            case SiddhiQLParser.STREAM:
            case SiddhiQLParser.DEFINE:
            case SiddhiQLParser.TABLE:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
            case SiddhiQLParser.WINDOW:
            case SiddhiQLParser.SELECT:
            case SiddhiQLParser.GROUP:
            case SiddhiQLParser.BY:
            case SiddhiQLParser.HAVING:
            case SiddhiQLParser.INSERT:
            case SiddhiQLParser.DELETE:
            case SiddhiQLParser.UPDATE:
            case SiddhiQLParser.RETURN:
            case SiddhiQLParser.EVENTS:
            case SiddhiQLParser.INTO:
            case SiddhiQLParser.OUTPUT:
            case SiddhiQLParser.EXPIRED:
            case SiddhiQLParser.CURRENT:
            case SiddhiQLParser.SNAPSHOT:
            case SiddhiQLParser.FOR:
            case SiddhiQLParser.RAW:
            case SiddhiQLParser.OF:
            case SiddhiQLParser.AS:
            case SiddhiQLParser.OR:
            case SiddhiQLParser.AND:
            case SiddhiQLParser.ON:
            case SiddhiQLParser.IS:
            case SiddhiQLParser.NOT:
            case SiddhiQLParser.WITHIN:
            case SiddhiQLParser.WITH:
            case SiddhiQLParser.BEGIN:
            case SiddhiQLParser.END:
            case SiddhiQLParser.NULL:
            case SiddhiQLParser.EVERY:
            case SiddhiQLParser.LAST:
            case SiddhiQLParser.ALL:
            case SiddhiQLParser.FIRST:
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
            case SiddhiQLParser.OUTER:
            case SiddhiQLParser.RIGHT:
            case SiddhiQLParser.LEFT:
            case SiddhiQLParser.FULL:
            case SiddhiQLParser.UNIDIRECTIONAL:
            case SiddhiQLParser.YEARS:
            case SiddhiQLParser.MONTHS:
            case SiddhiQLParser.WEEKS:
            case SiddhiQLParser.DAYS:
            case SiddhiQLParser.HOURS:
            case SiddhiQLParser.MINUTES:
            case SiddhiQLParser.SECONDS:
            case SiddhiQLParser.MILLISECONDS:
            case SiddhiQLParser.FALSE:
            case SiddhiQLParser.TRUE:
            case SiddhiQLParser.STRING:
            case SiddhiQLParser.INT:
            case SiddhiQLParser.LONG:
            case SiddhiQLParser.FLOAT:
            case SiddhiQLParser.DOUBLE:
            case SiddhiQLParser.BOOL:
            case SiddhiQLParser.OBJECT:
            case SiddhiQLParser.ID_QUOTES:
            case SiddhiQLParser.ID:
                this.state = 665;
                this.pattern_source();
                this.state = 667;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 71, this._ctx);
                if (la_ === 1) {
                    this.state = 666;
                    this.within_time();

                }
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 676;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input, 73, this._ctx)
        while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if (_alt === 1) {
                if (this._parseListeners !== null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_pattern_source_chain);
                this.state = 671;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 672;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 673;
                this.pattern_source_chain(3);
            }
            this.state = 678;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input, 73, this._ctx);
        }

    } catch (error) {
        if (error instanceof antlr4.error.RecognitionException) {
            localctx.exception = error;
            this._errHandler.reportError(this, error);
            this._errHandler.recover(this, error);
        } else {
            throw error;
        }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_sourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source;
    return this;
}

Pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_sourceContext.prototype.constructor = Pattern_sourceContext;

Pattern_sourceContext.prototype.logical_stateful_source = function () {
    return this.getTypedRuleContext(Logical_stateful_sourceContext, 0);
};

Pattern_sourceContext.prototype.pattern_collection_stateful_source = function () {
    return this.getTypedRuleContext(Pattern_collection_stateful_sourceContext, 0);
};

Pattern_sourceContext.prototype.standard_stateful_source = function () {
    return this.getTypedRuleContext(Standard_stateful_sourceContext, 0);
};

Pattern_sourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterPattern_source(this);
    }
};

Pattern_sourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitPattern_source(this);
    }
};


SiddhiQLParser.Pattern_sourceContext = Pattern_sourceContext;

SiddhiQLParser.prototype.pattern_source = function () {

    var localctx = new Pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, SiddhiQLParser.RULE_pattern_source);
    try {
        this.state = 682;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 74, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 679;
                this.logical_stateful_source();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 680;
                this.pattern_collection_stateful_source();
                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 681;
                this.standard_stateful_source();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logical_stateful_sourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_logical_stateful_source;
    return this;
}

Logical_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logical_stateful_sourceContext.prototype.constructor = Logical_stateful_sourceContext;

Logical_stateful_sourceContext.prototype.NOT = function () {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Logical_stateful_sourceContext.prototype.standard_stateful_source = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Standard_stateful_sourceContext);
    } else {
        return this.getTypedRuleContext(Standard_stateful_sourceContext, i);
    }
};

Logical_stateful_sourceContext.prototype.AND = function () {
    return this.getToken(SiddhiQLParser.AND, 0);
};

Logical_stateful_sourceContext.prototype.OR = function () {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Logical_stateful_sourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterLogical_stateful_source(this);
    }
};

Logical_stateful_sourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitLogical_stateful_source(this);
    }
};


SiddhiQLParser.Logical_stateful_sourceContext = Logical_stateful_sourceContext;

SiddhiQLParser.prototype.logical_stateful_source = function () {

    var localctx = new Logical_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, SiddhiQLParser.RULE_logical_stateful_source);
    try {
        this.state = 698;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 76, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 684;
                this.match(SiddhiQLParser.NOT);
                this.state = 685;
                this.standard_stateful_source();
                this.state = 688;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 75, this._ctx);
                if (la_ === 1) {
                    this.state = 686;
                    this.match(SiddhiQLParser.AND);
                    this.state = 687;
                    this.standard_stateful_source();

                }
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 690;
                this.standard_stateful_source();
                this.state = 691;
                this.match(SiddhiQLParser.AND);
                this.state = 692;
                this.standard_stateful_source();
                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 694;
                this.standard_stateful_source();
                this.state = 695;
                this.match(SiddhiQLParser.OR);
                this.state = 696;
                this.standard_stateful_source();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_collection_stateful_sourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_collection_stateful_source;
    return this;
}

Pattern_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_collection_stateful_sourceContext.prototype.constructor = Pattern_collection_stateful_sourceContext;

Pattern_collection_stateful_sourceContext.prototype.standard_stateful_source = function () {
    return this.getTypedRuleContext(Standard_stateful_sourceContext, 0);
};

Pattern_collection_stateful_sourceContext.prototype.collect = function () {
    return this.getTypedRuleContext(CollectContext, 0);
};

Pattern_collection_stateful_sourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterPattern_collection_stateful_source(this);
    }
};

Pattern_collection_stateful_sourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitPattern_collection_stateful_source(this);
    }
};


SiddhiQLParser.Pattern_collection_stateful_sourceContext = Pattern_collection_stateful_sourceContext;

SiddhiQLParser.prototype.pattern_collection_stateful_source = function () {

    var localctx = new Pattern_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, SiddhiQLParser.RULE_pattern_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 700;
        this.standard_stateful_source();
        this.state = 701;
        this.match(SiddhiQLParser.LT);
        this.state = 702;
        this.collect();
        this.state = 703;
        this.match(SiddhiQLParser.GT);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_stateful_sourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stateful_source;
    return this;
}

Standard_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_stateful_sourceContext.prototype.constructor = Standard_stateful_sourceContext;

Standard_stateful_sourceContext.prototype.basic_source = function () {
    return this.getTypedRuleContext(Basic_sourceContext, 0);
};

Standard_stateful_sourceContext.prototype.event = function () {
    return this.getTypedRuleContext(EventContext, 0);
};

Standard_stateful_sourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterStandard_stateful_source(this);
    }
};

Standard_stateful_sourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitStandard_stateful_source(this);
    }
};


SiddhiQLParser.Standard_stateful_sourceContext = Standard_stateful_sourceContext;

SiddhiQLParser.prototype.standard_stateful_source = function () {

    var localctx = new Standard_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 76, SiddhiQLParser.RULE_standard_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 708;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 77, this._ctx);
        if (la_ === 1) {
            this.state = 705;
            this.event();
            this.state = 706;
            this.match(SiddhiQLParser.ASSIGN);

        }
        this.state = 710;
        this.basic_source();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_sourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source;
    return this;
}

Basic_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_sourceContext.prototype.constructor = Basic_sourceContext;

Basic_sourceContext.prototype.source = function () {
    return this.getTypedRuleContext(SourceContext, 0);
};

Basic_sourceContext.prototype.basic_source_stream_handlers = function () {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext, 0);
};

Basic_sourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterBasic_source(this);
    }
};

Basic_sourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitBasic_source(this);
    }
};


SiddhiQLParser.Basic_sourceContext = Basic_sourceContext;

SiddhiQLParser.prototype.basic_source = function () {

    var localctx = new Basic_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, SiddhiQLParser.RULE_basic_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 712;
        this.source();
        this.state = 714;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 78, this._ctx);
        if (la_ === 1) {
            this.state = 713;
            this.basic_source_stream_handlers();

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlersContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handlers;
    return this;
}

Basic_source_stream_handlersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlersContext.prototype.constructor = Basic_source_stream_handlersContext;

Basic_source_stream_handlersContext.prototype.basic_source_stream_handler = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlerContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlerContext, i);
    }
};

Basic_source_stream_handlersContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterBasic_source_stream_handlers(this);
    }
};

Basic_source_stream_handlersContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitBasic_source_stream_handlers(this);
    }
};


SiddhiQLParser.Basic_source_stream_handlersContext = Basic_source_stream_handlersContext;

SiddhiQLParser.prototype.basic_source_stream_handlers = function () {

    var localctx = new Basic_source_stream_handlersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, SiddhiQLParser.RULE_basic_source_stream_handlers);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 717;
        this._errHandler.sync(this);
        var _alt = 1;
        do {
            switch (_alt) {
                case 1:
                    this.state = 716;
                    this.basic_source_stream_handler();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 719;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input, 79, this._ctx);
        } while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlerContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handler;
    return this;
}

Basic_source_stream_handlerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlerContext.prototype.constructor = Basic_source_stream_handlerContext;

Basic_source_stream_handlerContext.prototype.filter = function () {
    return this.getTypedRuleContext(FilterContext, 0);
};

Basic_source_stream_handlerContext.prototype.stream_function = function () {
    return this.getTypedRuleContext(Stream_functionContext, 0);
};

Basic_source_stream_handlerContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterBasic_source_stream_handler(this);
    }
};

Basic_source_stream_handlerContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitBasic_source_stream_handler(this);
    }
};


SiddhiQLParser.Basic_source_stream_handlerContext = Basic_source_stream_handlerContext;

SiddhiQLParser.prototype.basic_source_stream_handler = function () {

    var localctx = new Basic_source_stream_handlerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, SiddhiQLParser.RULE_basic_source_stream_handler);
    try {
        this.state = 723;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 80, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 721;
                this.filter();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 722;
                this.stream_function();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_streamContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_stream;
    return this;
}

Sequence_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_streamContext.prototype.constructor = Sequence_streamContext;

Sequence_streamContext.prototype.sequence_source = function () {
    return this.getTypedRuleContext(Sequence_sourceContext, 0);
};

Sequence_streamContext.prototype.sequence_source_chain = function () {
    return this.getTypedRuleContext(Sequence_source_chainContext, 0);
};

Sequence_streamContext.prototype.EVERY = function () {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Sequence_streamContext.prototype.within_time = function () {
    return this.getTypedRuleContext(Within_timeContext, 0);
};

Sequence_streamContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSequence_stream(this);
    }
};

Sequence_streamContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSequence_stream(this);
    }
};


SiddhiQLParser.Sequence_streamContext = Sequence_streamContext;

SiddhiQLParser.prototype.sequence_stream = function () {

    var localctx = new Sequence_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, SiddhiQLParser.RULE_sequence_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 726;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 81, this._ctx);
        if (la_ === 1) {
            this.state = 725;
            this.match(SiddhiQLParser.EVERY);

        }
        this.state = 728;
        this.sequence_source();
        this.state = 730;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.WITHIN) {
            this.state = 729;
            this.within_time();
        }

        this.state = 732;
        this.match(SiddhiQLParser.COMMA);
        this.state = 733;
        this.sequence_source_chain(0);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_source_chainContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source_chain;
    return this;
}

Sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_source_chainContext.prototype.constructor = Sequence_source_chainContext;

Sequence_source_chainContext.prototype.sequence_source_chain = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Sequence_source_chainContext);
    } else {
        return this.getTypedRuleContext(Sequence_source_chainContext, i);
    }
};

Sequence_source_chainContext.prototype.within_time = function () {
    return this.getTypedRuleContext(Within_timeContext, 0);
};

Sequence_source_chainContext.prototype.sequence_source = function () {
    return this.getTypedRuleContext(Sequence_sourceContext, 0);
};

Sequence_source_chainContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSequence_source_chain(this);
    }
};

Sequence_source_chainContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSequence_source_chain(this);
    }
};


SiddhiQLParser.prototype.sequence_source_chain = function (_p) {
    if (_p === undefined) {
        _p = 0;
    }
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Sequence_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 86;
    this.enterRecursionRule(localctx, 86, SiddhiQLParser.RULE_sequence_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 746;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.OPEN_PAR:
                this.state = 736;
                this.match(SiddhiQLParser.OPEN_PAR);
                this.state = 737;
                this.sequence_source_chain(0);
                this.state = 738;
                this.match(SiddhiQLParser.CLOSE_PAR);
                this.state = 740;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 83, this._ctx);
                if (la_ === 1) {
                    this.state = 739;
                    this.within_time();

                }
                break;
            case SiddhiQLParser.HASH:
            case SiddhiQLParser.STREAM:
            case SiddhiQLParser.DEFINE:
            case SiddhiQLParser.TABLE:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
            case SiddhiQLParser.WINDOW:
            case SiddhiQLParser.SELECT:
            case SiddhiQLParser.GROUP:
            case SiddhiQLParser.BY:
            case SiddhiQLParser.HAVING:
            case SiddhiQLParser.INSERT:
            case SiddhiQLParser.DELETE:
            case SiddhiQLParser.UPDATE:
            case SiddhiQLParser.RETURN:
            case SiddhiQLParser.EVENTS:
            case SiddhiQLParser.INTO:
            case SiddhiQLParser.OUTPUT:
            case SiddhiQLParser.EXPIRED:
            case SiddhiQLParser.CURRENT:
            case SiddhiQLParser.SNAPSHOT:
            case SiddhiQLParser.FOR:
            case SiddhiQLParser.RAW:
            case SiddhiQLParser.OF:
            case SiddhiQLParser.AS:
            case SiddhiQLParser.OR:
            case SiddhiQLParser.AND:
            case SiddhiQLParser.ON:
            case SiddhiQLParser.IS:
            case SiddhiQLParser.NOT:
            case SiddhiQLParser.WITHIN:
            case SiddhiQLParser.WITH:
            case SiddhiQLParser.BEGIN:
            case SiddhiQLParser.END:
            case SiddhiQLParser.NULL:
            case SiddhiQLParser.EVERY:
            case SiddhiQLParser.LAST:
            case SiddhiQLParser.ALL:
            case SiddhiQLParser.FIRST:
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
            case SiddhiQLParser.OUTER:
            case SiddhiQLParser.RIGHT:
            case SiddhiQLParser.LEFT:
            case SiddhiQLParser.FULL:
            case SiddhiQLParser.UNIDIRECTIONAL:
            case SiddhiQLParser.YEARS:
            case SiddhiQLParser.MONTHS:
            case SiddhiQLParser.WEEKS:
            case SiddhiQLParser.DAYS:
            case SiddhiQLParser.HOURS:
            case SiddhiQLParser.MINUTES:
            case SiddhiQLParser.SECONDS:
            case SiddhiQLParser.MILLISECONDS:
            case SiddhiQLParser.FALSE:
            case SiddhiQLParser.TRUE:
            case SiddhiQLParser.STRING:
            case SiddhiQLParser.INT:
            case SiddhiQLParser.LONG:
            case SiddhiQLParser.FLOAT:
            case SiddhiQLParser.DOUBLE:
            case SiddhiQLParser.BOOL:
            case SiddhiQLParser.OBJECT:
            case SiddhiQLParser.ID_QUOTES:
            case SiddhiQLParser.ID:
                this.state = 742;
                this.sequence_source();
                this.state = 744;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 84, this._ctx);
                if (la_ === 1) {
                    this.state = 743;
                    this.within_time();

                }
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 753;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input, 86, this._ctx)
        while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if (_alt === 1) {
                if (this._parseListeners !== null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Sequence_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_sequence_source_chain);
                this.state = 748;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 749;
                this.match(SiddhiQLParser.COMMA);
                this.state = 750;
                this.sequence_source_chain(3);
            }
            this.state = 755;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input, 86, this._ctx);
        }

    } catch (error) {
        if (error instanceof antlr4.error.RecognitionException) {
            localctx.exception = error;
            this._errHandler.reportError(this, error);
            this._errHandler.recover(this, error);
        } else {
            throw error;
        }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Sequence_sourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source;
    return this;
}

Sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_sourceContext.prototype.constructor = Sequence_sourceContext;

Sequence_sourceContext.prototype.logical_stateful_source = function () {
    return this.getTypedRuleContext(Logical_stateful_sourceContext, 0);
};

Sequence_sourceContext.prototype.sequence_collection_stateful_source = function () {
    return this.getTypedRuleContext(Sequence_collection_stateful_sourceContext, 0);
};

Sequence_sourceContext.prototype.standard_stateful_source = function () {
    return this.getTypedRuleContext(Standard_stateful_sourceContext, 0);
};

Sequence_sourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSequence_source(this);
    }
};

Sequence_sourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSequence_source(this);
    }
};


SiddhiQLParser.Sequence_sourceContext = Sequence_sourceContext;

SiddhiQLParser.prototype.sequence_source = function () {

    var localctx = new Sequence_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, SiddhiQLParser.RULE_sequence_source);
    try {
        this.state = 759;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 87, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 756;
                this.logical_stateful_source();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 757;
                this.sequence_collection_stateful_source();
                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 758;
                this.standard_stateful_source();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_collection_stateful_sourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_collection_stateful_source;
    this.zero_or_more = null; // Token
    this.zero_or_one = null; // Token
    this.one_or_more = null; // Token
    return this;
}

Sequence_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_collection_stateful_sourceContext.prototype.constructor = Sequence_collection_stateful_sourceContext;

Sequence_collection_stateful_sourceContext.prototype.standard_stateful_source = function () {
    return this.getTypedRuleContext(Standard_stateful_sourceContext, 0);
};

Sequence_collection_stateful_sourceContext.prototype.collect = function () {
    return this.getTypedRuleContext(CollectContext, 0);
};

Sequence_collection_stateful_sourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSequence_collection_stateful_source(this);
    }
};

Sequence_collection_stateful_sourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSequence_collection_stateful_source(this);
    }
};


SiddhiQLParser.Sequence_collection_stateful_sourceContext = Sequence_collection_stateful_sourceContext;

SiddhiQLParser.prototype.sequence_collection_stateful_source = function () {

    var localctx = new Sequence_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, SiddhiQLParser.RULE_sequence_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 761;
        this.standard_stateful_source();
        this.state = 769;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.LT:
                this.state = 762;
                this.match(SiddhiQLParser.LT);
                this.state = 763;
                this.collect();
                this.state = 764;
                this.match(SiddhiQLParser.GT);
                break;
            case SiddhiQLParser.STAR:
                this.state = 766;
                localctx.zero_or_more = this.match(SiddhiQLParser.STAR);
                break;
            case SiddhiQLParser.QUESTION:
                this.state = 767;
                localctx.zero_or_one = this.match(SiddhiQLParser.QUESTION);
                break;
            case SiddhiQLParser.PLUS:
                this.state = 768;
                localctx.one_or_more = this.match(SiddhiQLParser.PLUS);
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Anonymous_streamContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_anonymous_stream;
    return this;
}

Anonymous_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Anonymous_streamContext.prototype.constructor = Anonymous_streamContext;

Anonymous_streamContext.prototype.anonymous_stream = function () {
    return this.getTypedRuleContext(Anonymous_streamContext, 0);
};

Anonymous_streamContext.prototype.FROM = function () {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Anonymous_streamContext.prototype.query_input = function () {
    return this.getTypedRuleContext(Query_inputContext, 0);
};

Anonymous_streamContext.prototype.RETURN = function () {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Anonymous_streamContext.prototype.query_section = function () {
    return this.getTypedRuleContext(Query_sectionContext, 0);
};

Anonymous_streamContext.prototype.output_rate = function () {
    return this.getTypedRuleContext(Output_rateContext, 0);
};

Anonymous_streamContext.prototype.output_event_type = function () {
    return this.getTypedRuleContext(Output_event_typeContext, 0);
};

Anonymous_streamContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAnonymous_stream(this);
    }
};

Anonymous_streamContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAnonymous_stream(this);
    }
};


SiddhiQLParser.Anonymous_streamContext = Anonymous_streamContext;

SiddhiQLParser.prototype.anonymous_stream = function () {

    var localctx = new Anonymous_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, SiddhiQLParser.RULE_anonymous_stream);
    var _la = 0; // Token type
    try {
        this.state = 787;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.OPEN_PAR:
                this.enterOuterAlt(localctx, 1);
                this.state = 771;
                this.match(SiddhiQLParser.OPEN_PAR);
                this.state = 772;
                this.anonymous_stream();
                this.state = 773;
                this.match(SiddhiQLParser.CLOSE_PAR);
                break;
            case SiddhiQLParser.FROM:
                this.enterOuterAlt(localctx, 2);
                this.state = 775;
                this.match(SiddhiQLParser.FROM);
                this.state = 776;
                this.query_input();
                this.state = 778;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.SELECT) {
                    this.state = 777;
                    this.query_section();
                }

                this.state = 781;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.OUTPUT) {
                    this.state = 780;
                    this.output_rate();
                }

                this.state = 783;
                this.match(SiddhiQLParser.RETURN);
                this.state = 785;
                _la = this._input.LA(1);
                if (((((_la - 46)) & ~0x1f) == 0 && ((1 << (_la - 46)) & ((1 << (SiddhiQLParser.EVENTS - 46)) | (1 << (SiddhiQLParser.EXPIRED - 46)) | (1 << (SiddhiQLParser.CURRENT - 46)) | (1 << (SiddhiQLParser.ALL - 46)))) !== 0)) {
                    this.state = 784;
                    this.output_event_type();
                }

                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FilterContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_filter;
    return this;
}

FilterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FilterContext.prototype.constructor = FilterContext;

FilterContext.prototype.expression = function () {
    return this.getTypedRuleContext(ExpressionContext, 0);
};

FilterContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterFilter(this);
    }
};

FilterContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitFilter(this);
    }
};


SiddhiQLParser.FilterContext = FilterContext;

SiddhiQLParser.prototype.filter = function () {

    var localctx = new FilterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, SiddhiQLParser.RULE_filter);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 790;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.HASH) {
            this.state = 789;
            this.match(SiddhiQLParser.HASH);
        }

        this.state = 792;
        this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
        this.state = 793;
        this.expression();
        this.state = 794;
        this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_functionContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_function;
    return this;
}

Stream_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_functionContext.prototype.constructor = Stream_functionContext;

Stream_functionContext.prototype.function_operation = function () {
    return this.getTypedRuleContext(Function_operationContext, 0);
};

Stream_functionContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterStream_function(this);
    }
};

Stream_functionContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitStream_function(this);
    }
};


SiddhiQLParser.Stream_functionContext = Stream_functionContext;

SiddhiQLParser.prototype.stream_function = function () {

    var localctx = new Stream_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, SiddhiQLParser.RULE_stream_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 796;
        this.match(SiddhiQLParser.HASH);
        this.state = 797;
        this.function_operation();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WindowContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_window;
    return this;
}

WindowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WindowContext.prototype.constructor = WindowContext;

WindowContext.prototype.WINDOW = function () {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

WindowContext.prototype.function_operation = function () {
    return this.getTypedRuleContext(Function_operationContext, 0);
};

WindowContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterWindow(this);
    }
};

WindowContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitWindow(this);
    }
};


SiddhiQLParser.WindowContext = WindowContext;

SiddhiQLParser.prototype.window = function () {

    var localctx = new WindowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, SiddhiQLParser.RULE_window);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 799;
        this.match(SiddhiQLParser.HASH);
        this.state = 800;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 801;
        this.match(SiddhiQLParser.DOT);
        this.state = 802;
        this.function_operation();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_sectionContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_section;
    return this;
}

Query_sectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_sectionContext.prototype.constructor = Query_sectionContext;

Query_sectionContext.prototype.SELECT = function () {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

Query_sectionContext.prototype.group_by = function () {
    return this.getTypedRuleContext(Group_byContext, 0);
};

Query_sectionContext.prototype.having = function () {
    return this.getTypedRuleContext(HavingContext, 0);
};

Query_sectionContext.prototype.output_attribute = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Output_attributeContext);
    } else {
        return this.getTypedRuleContext(Output_attributeContext, i);
    }
};

Query_sectionContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterQuery_section(this);
    }
};

Query_sectionContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitQuery_section(this);
    }
};


SiddhiQLParser.Query_sectionContext = Query_sectionContext;

SiddhiQLParser.prototype.query_section = function () {

    var localctx = new Query_sectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, SiddhiQLParser.RULE_query_section);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 804;
        this.match(SiddhiQLParser.SELECT);
        this.state = 814;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.STAR:
                this.state = 805;
                this.match(SiddhiQLParser.STAR);
                break;
            case SiddhiQLParser.INT_LITERAL:
            case SiddhiQLParser.LONG_LITERAL:
            case SiddhiQLParser.FLOAT_LITERAL:
            case SiddhiQLParser.DOUBLE_LITERAL:
            case SiddhiQLParser.OPEN_PAR:
            case SiddhiQLParser.PLUS:
            case SiddhiQLParser.MINUS:
            case SiddhiQLParser.HASH:
            case SiddhiQLParser.STREAM:
            case SiddhiQLParser.DEFINE:
            case SiddhiQLParser.TABLE:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
            case SiddhiQLParser.WINDOW:
            case SiddhiQLParser.SELECT:
            case SiddhiQLParser.GROUP:
            case SiddhiQLParser.BY:
            case SiddhiQLParser.HAVING:
            case SiddhiQLParser.INSERT:
            case SiddhiQLParser.DELETE:
            case SiddhiQLParser.UPDATE:
            case SiddhiQLParser.RETURN:
            case SiddhiQLParser.EVENTS:
            case SiddhiQLParser.INTO:
            case SiddhiQLParser.OUTPUT:
            case SiddhiQLParser.EXPIRED:
            case SiddhiQLParser.CURRENT:
            case SiddhiQLParser.SNAPSHOT:
            case SiddhiQLParser.FOR:
            case SiddhiQLParser.RAW:
            case SiddhiQLParser.OF:
            case SiddhiQLParser.AS:
            case SiddhiQLParser.OR:
            case SiddhiQLParser.AND:
            case SiddhiQLParser.ON:
            case SiddhiQLParser.IS:
            case SiddhiQLParser.NOT:
            case SiddhiQLParser.WITHIN:
            case SiddhiQLParser.WITH:
            case SiddhiQLParser.BEGIN:
            case SiddhiQLParser.END:
            case SiddhiQLParser.NULL:
            case SiddhiQLParser.EVERY:
            case SiddhiQLParser.LAST:
            case SiddhiQLParser.ALL:
            case SiddhiQLParser.FIRST:
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
            case SiddhiQLParser.OUTER:
            case SiddhiQLParser.RIGHT:
            case SiddhiQLParser.LEFT:
            case SiddhiQLParser.FULL:
            case SiddhiQLParser.UNIDIRECTIONAL:
            case SiddhiQLParser.YEARS:
            case SiddhiQLParser.MONTHS:
            case SiddhiQLParser.WEEKS:
            case SiddhiQLParser.DAYS:
            case SiddhiQLParser.HOURS:
            case SiddhiQLParser.MINUTES:
            case SiddhiQLParser.SECONDS:
            case SiddhiQLParser.MILLISECONDS:
            case SiddhiQLParser.FALSE:
            case SiddhiQLParser.TRUE:
            case SiddhiQLParser.STRING:
            case SiddhiQLParser.INT:
            case SiddhiQLParser.LONG:
            case SiddhiQLParser.FLOAT:
            case SiddhiQLParser.DOUBLE:
            case SiddhiQLParser.BOOL:
            case SiddhiQLParser.OBJECT:
            case SiddhiQLParser.ID_QUOTES:
            case SiddhiQLParser.ID:
            case SiddhiQLParser.STRING_LITERAL:
                this.state = 806;
                this.output_attribute();
                this.state = 811;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === SiddhiQLParser.COMMA) {
                    this.state = 807;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 808;
                    this.output_attribute();
                    this.state = 813;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 817;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.GROUP) {
            this.state = 816;
            this.group_by();
        }

        this.state = 820;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.HAVING) {
            this.state = 819;
            this.having();
        }

    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Group_byContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_group_by;
    return this;
}

Group_byContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Group_byContext.prototype.constructor = Group_byContext;

Group_byContext.prototype.GROUP = function () {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

Group_byContext.prototype.BY = function () {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Group_byContext.prototype.attribute_reference = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Attribute_referenceContext);
    } else {
        return this.getTypedRuleContext(Attribute_referenceContext, i);
    }
};

Group_byContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterGroup_by(this);
    }
};

Group_byContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitGroup_by(this);
    }
};


SiddhiQLParser.Group_byContext = Group_byContext;

SiddhiQLParser.prototype.group_by = function () {

    var localctx = new Group_byContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, SiddhiQLParser.RULE_group_by);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 822;
        this.match(SiddhiQLParser.GROUP);
        this.state = 823;
        this.match(SiddhiQLParser.BY);
        this.state = 824;
        this.attribute_reference();
        this.state = 829;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while (_la === SiddhiQLParser.COMMA) {
            this.state = 825;
            this.match(SiddhiQLParser.COMMA);
            this.state = 826;
            this.attribute_reference();
            this.state = 831;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function HavingContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_having;
    return this;
}

HavingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
HavingContext.prototype.constructor = HavingContext;

HavingContext.prototype.HAVING = function () {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

HavingContext.prototype.expression = function () {
    return this.getTypedRuleContext(ExpressionContext, 0);
};

HavingContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterHaving(this);
    }
};

HavingContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitHaving(this);
    }
};


SiddhiQLParser.HavingContext = HavingContext;

SiddhiQLParser.prototype.having = function () {

    var localctx = new HavingContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, SiddhiQLParser.RULE_having);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 832;
        this.match(SiddhiQLParser.HAVING);
        this.state = 833;
        this.expression();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_outputContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_output;
    return this;
}

Query_outputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_outputContext.prototype.constructor = Query_outputContext;

Query_outputContext.prototype.INSERT = function () {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

Query_outputContext.prototype.INTO = function () {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

Query_outputContext.prototype.target = function () {
    return this.getTypedRuleContext(TargetContext, 0);
};

Query_outputContext.prototype.output_event_type = function () {
    return this.getTypedRuleContext(Output_event_typeContext, 0);
};

Query_outputContext.prototype.DELETE = function () {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

Query_outputContext.prototype.ON = function () {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Query_outputContext.prototype.expression = function () {
    return this.getTypedRuleContext(ExpressionContext, 0);
};

Query_outputContext.prototype.FOR = function () {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

Query_outputContext.prototype.UPDATE = function () {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

Query_outputContext.prototype.OR = function () {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Query_outputContext.prototype.RETURN = function () {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Query_outputContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterQuery_output(this);
    }
};

Query_outputContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitQuery_output(this);
    }
};


SiddhiQLParser.Query_outputContext = Query_outputContext;

SiddhiQLParser.prototype.query_output = function () {

    var localctx = new Query_outputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, SiddhiQLParser.RULE_query_output);
    var _la = 0; // Token type
    try {
        this.state = 875;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 104, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 835;
                this.match(SiddhiQLParser.INSERT);
                this.state = 837;
                _la = this._input.LA(1);
                if (((((_la - 46)) & ~0x1f) == 0 && ((1 << (_la - 46)) & ((1 << (SiddhiQLParser.EVENTS - 46)) | (1 << (SiddhiQLParser.EXPIRED - 46)) | (1 << (SiddhiQLParser.CURRENT - 46)) | (1 << (SiddhiQLParser.ALL - 46)))) !== 0)) {
                    this.state = 836;
                    this.output_event_type();
                }

                this.state = 839;
                this.match(SiddhiQLParser.INTO);
                this.state = 840;
                this.target();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 841;
                this.match(SiddhiQLParser.DELETE);
                this.state = 842;
                this.target();
                this.state = 845;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.FOR) {
                    this.state = 843;
                    this.match(SiddhiQLParser.FOR);
                    this.state = 844;
                    this.output_event_type();
                }

                this.state = 847;
                this.match(SiddhiQLParser.ON);
                this.state = 848;
                this.expression();
                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 850;
                this.match(SiddhiQLParser.UPDATE);
                this.state = 851;
                this.match(SiddhiQLParser.OR);
                this.state = 852;
                this.match(SiddhiQLParser.INSERT);
                this.state = 853;
                this.match(SiddhiQLParser.INTO);
                this.state = 854;
                this.target();
                this.state = 857;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.FOR) {
                    this.state = 855;
                    this.match(SiddhiQLParser.FOR);
                    this.state = 856;
                    this.output_event_type();
                }

                this.state = 859;
                this.match(SiddhiQLParser.ON);
                this.state = 860;
                this.expression();
                break;

            case 4:
                this.enterOuterAlt(localctx, 4);
                this.state = 862;
                this.match(SiddhiQLParser.UPDATE);
                this.state = 863;
                this.target();
                this.state = 866;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.FOR) {
                    this.state = 864;
                    this.match(SiddhiQLParser.FOR);
                    this.state = 865;
                    this.output_event_type();
                }

                this.state = 868;
                this.match(SiddhiQLParser.ON);
                this.state = 869;
                this.expression();
                break;

            case 5:
                this.enterOuterAlt(localctx, 5);
                this.state = 871;
                this.match(SiddhiQLParser.RETURN);
                this.state = 873;
                _la = this._input.LA(1);
                if (((((_la - 46)) & ~0x1f) == 0 && ((1 << (_la - 46)) & ((1 << (SiddhiQLParser.EVENTS - 46)) | (1 << (SiddhiQLParser.EXPIRED - 46)) | (1 << (SiddhiQLParser.CURRENT - 46)) | (1 << (SiddhiQLParser.ALL - 46)))) !== 0)) {
                    this.state = 872;
                    this.output_event_type();
                }

                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_event_typeContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_event_type;
    return this;
}

Output_event_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_event_typeContext.prototype.constructor = Output_event_typeContext;

Output_event_typeContext.prototype.ALL = function () {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_event_typeContext.prototype.EVENTS = function () {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_event_typeContext.prototype.RAW = function () {
    return this.getToken(SiddhiQLParser.RAW, 0);
};

Output_event_typeContext.prototype.EXPIRED = function () {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

Output_event_typeContext.prototype.CURRENT = function () {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

Output_event_typeContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterOutput_event_type(this);
    }
};

Output_event_typeContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitOutput_event_type(this);
    }
};


SiddhiQLParser.Output_event_typeContext = Output_event_typeContext;

SiddhiQLParser.prototype.output_event_type = function () {

    var localctx = new Output_event_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, SiddhiQLParser.RULE_output_event_type);
    var _la = 0; // Token type
    try {
        this.state = 891;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 106, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 877;
                this.match(SiddhiQLParser.ALL);
                this.state = 878;
                this.match(SiddhiQLParser.EVENTS);
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 879;
                this.match(SiddhiQLParser.ALL);
                this.state = 880;
                this.match(SiddhiQLParser.RAW);
                this.state = 881;
                this.match(SiddhiQLParser.EVENTS);
                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 882;
                this.match(SiddhiQLParser.EXPIRED);
                this.state = 883;
                this.match(SiddhiQLParser.EVENTS);
                break;

            case 4:
                this.enterOuterAlt(localctx, 4);
                this.state = 884;
                this.match(SiddhiQLParser.EXPIRED);
                this.state = 885;
                this.match(SiddhiQLParser.RAW);
                this.state = 886;
                this.match(SiddhiQLParser.EVENTS);
                break;

            case 5:
                this.enterOuterAlt(localctx, 5);
                this.state = 888;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.CURRENT) {
                    this.state = 887;
                    this.match(SiddhiQLParser.CURRENT);
                }

                this.state = 890;
                this.match(SiddhiQLParser.EVENTS);
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rateContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate;
    return this;
}

Output_rateContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rateContext.prototype.constructor = Output_rateContext;

Output_rateContext.prototype.OUTPUT = function () {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Output_rateContext.prototype.EVERY = function () {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Output_rateContext.prototype.time_value = function () {
    return this.getTypedRuleContext(Time_valueContext, 0);
};

Output_rateContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Output_rateContext.prototype.EVENTS = function () {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_rateContext.prototype.output_rate_type = function () {
    return this.getTypedRuleContext(Output_rate_typeContext, 0);
};

Output_rateContext.prototype.SNAPSHOT = function () {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

Output_rateContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterOutput_rate(this);
    }
};

Output_rateContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitOutput_rate(this);
    }
};


SiddhiQLParser.Output_rateContext = Output_rateContext;

SiddhiQLParser.prototype.output_rate = function () {

    var localctx = new Output_rateContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, SiddhiQLParser.RULE_output_rate);
    var _la = 0; // Token type
    try {
        this.state = 907;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 109, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 893;
                this.match(SiddhiQLParser.OUTPUT);
                this.state = 895;
                _la = this._input.LA(1);
                if (((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (SiddhiQLParser.LAST - 69)) | (1 << (SiddhiQLParser.ALL - 69)) | (1 << (SiddhiQLParser.FIRST - 69)))) !== 0)) {
                    this.state = 894;
                    this.output_rate_type();
                }

                this.state = 897;
                this.match(SiddhiQLParser.EVERY);
                this.state = 901;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 108, this._ctx);
                switch (la_) {
                    case 1:
                        this.state = 898;
                        this.time_value();
                        break;

                    case 2:
                        this.state = 899;
                        this.match(SiddhiQLParser.INT_LITERAL);
                        this.state = 900;
                        this.match(SiddhiQLParser.EVENTS);
                        break;

                }
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 903;
                this.match(SiddhiQLParser.OUTPUT);
                this.state = 904;
                this.match(SiddhiQLParser.SNAPSHOT);
                this.state = 905;
                this.match(SiddhiQLParser.EVERY);
                this.state = 906;
                this.time_value();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rate_typeContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate_type;
    return this;
}

Output_rate_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rate_typeContext.prototype.constructor = Output_rate_typeContext;

Output_rate_typeContext.prototype.ALL = function () {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_rate_typeContext.prototype.LAST = function () {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Output_rate_typeContext.prototype.FIRST = function () {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

Output_rate_typeContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterOutput_rate_type(this);
    }
};

Output_rate_typeContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitOutput_rate_type(this);
    }
};


SiddhiQLParser.Output_rate_typeContext = Output_rate_typeContext;

SiddhiQLParser.prototype.output_rate_type = function () {

    var localctx = new Output_rate_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, SiddhiQLParser.RULE_output_rate_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 909;
        _la = this._input.LA(1);
        if (!(((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (SiddhiQLParser.LAST - 69)) | (1 << (SiddhiQLParser.ALL - 69)) | (1 << (SiddhiQLParser.FIRST - 69)))) !== 0))) {
            this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Within_timeContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_within_time;
    return this;
}

Within_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Within_timeContext.prototype.constructor = Within_timeContext;

Within_timeContext.prototype.WITHIN = function () {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

Within_timeContext.prototype.time_value = function () {
    return this.getTypedRuleContext(Time_valueContext, 0);
};

Within_timeContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterWithin_time(this);
    }
};

Within_timeContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitWithin_time(this);
    }
};


SiddhiQLParser.Within_timeContext = Within_timeContext;

SiddhiQLParser.prototype.within_time = function () {

    var localctx = new Within_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, SiddhiQLParser.RULE_within_time);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 911;
        this.match(SiddhiQLParser.WITHIN);
        this.state = 912;
        this.time_value();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_attributeContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_attribute;
    return this;
}

Output_attributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_attributeContext.prototype.constructor = Output_attributeContext;

Output_attributeContext.prototype.attribute = function () {
    return this.getTypedRuleContext(AttributeContext, 0);
};

Output_attributeContext.prototype.AS = function () {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Output_attributeContext.prototype.attribute_name = function () {
    return this.getTypedRuleContext(Attribute_nameContext, 0);
};

Output_attributeContext.prototype.attribute_reference = function () {
    return this.getTypedRuleContext(Attribute_referenceContext, 0);
};

Output_attributeContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterOutput_attribute(this);
    }
};

Output_attributeContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitOutput_attribute(this);
    }
};


SiddhiQLParser.Output_attributeContext = Output_attributeContext;

SiddhiQLParser.prototype.output_attribute = function () {

    var localctx = new Output_attributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, SiddhiQLParser.RULE_output_attribute);
    try {
        this.state = 919;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 110, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 914;
                this.attribute();
                this.state = 915;
                this.match(SiddhiQLParser.AS);
                this.state = 916;
                this.attribute_name();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 918;
                this.attribute_reference();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributeContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute;
    return this;
}

AttributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributeContext.prototype.constructor = AttributeContext;

AttributeContext.prototype.math_operation = function () {
    return this.getTypedRuleContext(Math_operationContext, 0);
};

AttributeContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAttribute(this);
    }
};

AttributeContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAttribute(this);
    }
};


SiddhiQLParser.AttributeContext = AttributeContext;

SiddhiQLParser.prototype.attribute = function () {

    var localctx = new AttributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, SiddhiQLParser.RULE_attribute);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 921;
        this.math_operation(0);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_expression;
    return this;
}

ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionContext.prototype.constructor = ExpressionContext;

ExpressionContext.prototype.math_operation = function () {
    return this.getTypedRuleContext(Math_operationContext, 0);
};

ExpressionContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterExpression(this);
    }
};

ExpressionContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitExpression(this);
    }
};


SiddhiQLParser.ExpressionContext = ExpressionContext;

SiddhiQLParser.prototype.expression = function () {

    var localctx = new ExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, SiddhiQLParser.RULE_expression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 923;
        this.math_operation(0);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Math_operationContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_math_operation;
    return this;
}

Math_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Math_operationContext.prototype.constructor = Math_operationContext;


Math_operationContext.prototype.copyFrom = function (ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};

function Multiplication_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    this.multiply = null; // Token;
    this.devide = null; // Token;
    this.mod = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Multiplication_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Multiplication_math_operationContext.prototype.constructor = Multiplication_math_operationContext;

SiddhiQLParser.Multiplication_math_operationContext = Multiplication_math_operationContext;

Multiplication_math_operationContext.prototype.math_operation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext, i);
    }
};
Multiplication_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterMultiplication_math_operation(this);
    }
};

Multiplication_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitMultiplication_math_operation(this);
    }
};


function Greaterthan_lessthan_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    this.gt_eq = null; // Token;
    this.lt_eq = null; // Token;
    this.gt = null; // Token;
    this.lt = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Greaterthan_lessthan_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Greaterthan_lessthan_math_operationContext.prototype.constructor = Greaterthan_lessthan_math_operationContext;

SiddhiQLParser.Greaterthan_lessthan_math_operationContext = Greaterthan_lessthan_math_operationContext;

Greaterthan_lessthan_math_operationContext.prototype.math_operation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext, i);
    }
};
Greaterthan_lessthan_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterGreaterthan_lessthan_math_operation(this);
    }
};

Greaterthan_lessthan_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitGreaterthan_lessthan_math_operation(this);
    }
};


function Basic_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Basic_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Basic_math_operationContext.prototype.constructor = Basic_math_operationContext;

SiddhiQLParser.Basic_math_operationContext = Basic_math_operationContext;

Basic_math_operationContext.prototype.math_operation = function () {
    return this.getTypedRuleContext(Math_operationContext, 0);
};

Basic_math_operationContext.prototype.null_check = function () {
    return this.getTypedRuleContext(Null_checkContext, 0);
};

Basic_math_operationContext.prototype.function_operation = function () {
    return this.getTypedRuleContext(Function_operationContext, 0);
};

Basic_math_operationContext.prototype.constant_value = function () {
    return this.getTypedRuleContext(Constant_valueContext, 0);
};

Basic_math_operationContext.prototype.attribute_reference = function () {
    return this.getTypedRuleContext(Attribute_referenceContext, 0);
};
Basic_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterBasic_math_operation(this);
    }
};

Basic_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitBasic_math_operation(this);
    }
};


function In_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

In_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
In_math_operationContext.prototype.constructor = In_math_operationContext;

SiddhiQLParser.In_math_operationContext = In_math_operationContext;

In_math_operationContext.prototype.math_operation = function () {
    return this.getTypedRuleContext(Math_operationContext, 0);
};

In_math_operationContext.prototype.IN = function () {
    return this.getToken(SiddhiQLParser.IN, 0);
};

In_math_operationContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};
In_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterIn_math_operation(this);
    }
};

In_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitIn_math_operation(this);
    }
};


function Addition_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    this.add = null; // Token;
    this.substract = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Addition_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Addition_math_operationContext.prototype.constructor = Addition_math_operationContext;

SiddhiQLParser.Addition_math_operationContext = Addition_math_operationContext;

Addition_math_operationContext.prototype.math_operation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext, i);
    }
};
Addition_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAddition_math_operation(this);
    }
};

Addition_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAddition_math_operation(this);
    }
};


function And_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

And_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
And_math_operationContext.prototype.constructor = And_math_operationContext;

SiddhiQLParser.And_math_operationContext = And_math_operationContext;

And_math_operationContext.prototype.math_operation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext, i);
    }
};

And_math_operationContext.prototype.AND = function () {
    return this.getToken(SiddhiQLParser.AND, 0);
};
And_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAnd_math_operation(this);
    }
};

And_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAnd_math_operation(this);
    }
};


function Or_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Or_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Or_math_operationContext.prototype.constructor = Or_math_operationContext;

SiddhiQLParser.Or_math_operationContext = Or_math_operationContext;

Or_math_operationContext.prototype.math_operation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext, i);
    }
};

Or_math_operationContext.prototype.OR = function () {
    return this.getToken(SiddhiQLParser.OR, 0);
};
Or_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterOr_math_operation(this);
    }
};

Or_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitOr_math_operation(this);
    }
};


function Equality_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    this.eq = null; // Token;
    this.not_eq = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Equality_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Equality_math_operationContext.prototype.constructor = Equality_math_operationContext;

SiddhiQLParser.Equality_math_operationContext = Equality_math_operationContext;

Equality_math_operationContext.prototype.math_operation = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext, i);
    }
};
Equality_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterEquality_math_operation(this);
    }
};

Equality_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitEquality_math_operation(this);
    }
};


function Not_math_operationContext(parser, ctx) {
    Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Not_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Not_math_operationContext.prototype.constructor = Not_math_operationContext;

SiddhiQLParser.Not_math_operationContext = Not_math_operationContext;

Not_math_operationContext.prototype.NOT = function () {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Not_math_operationContext.prototype.math_operation = function () {
    return this.getTypedRuleContext(Math_operationContext, 0);
};
Not_math_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterNot_math_operation(this);
    }
};

Not_math_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitNot_math_operation(this);
    }
};


SiddhiQLParser.prototype.math_operation = function (_p) {
    if (_p === undefined) {
        _p = 0;
    }
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Math_operationContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 122;
    this.enterRecursionRule(localctx, 122, SiddhiQLParser.RULE_math_operation, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 936;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 111, this._ctx);
        switch (la_) {
            case 1:
                localctx = new Not_math_operationContext(this, localctx);
                this._ctx = localctx;
                _prevctx = localctx;

                this.state = 926;
                this.match(SiddhiQLParser.NOT);
                this.state = 927;
                this.math_operation(11);
                break;

            case 2:
                localctx = new Basic_math_operationContext(this, localctx);
                this._ctx = localctx;
                _prevctx = localctx;
                this.state = 928;
                this.match(SiddhiQLParser.OPEN_PAR);
                this.state = 929;
                this.math_operation(0);
                this.state = 930;
                this.match(SiddhiQLParser.CLOSE_PAR);
                break;

            case 3:
                localctx = new Basic_math_operationContext(this, localctx);
                this._ctx = localctx;
                _prevctx = localctx;
                this.state = 932;
                this.null_check();
                break;

            case 4:
                localctx = new Basic_math_operationContext(this, localctx);
                this._ctx = localctx;
                _prevctx = localctx;
                this.state = 933;
                this.function_operation();
                break;

            case 5:
                localctx = new Basic_math_operationContext(this, localctx);
                this._ctx = localctx;
                _prevctx = localctx;
                this.state = 934;
                this.constant_value();
                break;

            case 6:
                localctx = new Basic_math_operationContext(this, localctx);
                this._ctx = localctx;
                _prevctx = localctx;
                this.state = 935;
                this.attribute_reference();
                break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 976;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input, 117, this._ctx)
        while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if (_alt === 1) {
                if (this._parseListeners !== null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 974;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 116, this._ctx);
                switch (la_) {
                    case 1:
                        localctx = new Multiplication_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                        this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                        this.state = 938;
                        if (!( this.precpred(this._ctx, 10))) {
                            throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                        }
                        this.state = 942;
                        switch (this._input.LA(1)) {
                            case SiddhiQLParser.STAR:
                                this.state = 939;
                                localctx.multiply = this.match(SiddhiQLParser.STAR);
                                break;
                            case SiddhiQLParser.DIV:
                                this.state = 940;
                                localctx.devide = this.match(SiddhiQLParser.DIV);
                                break;
                            case SiddhiQLParser.MOD:
                                this.state = 941;
                                localctx.mod = this.match(SiddhiQLParser.MOD);
                                break;
                            default:
                                throw new antlr4.error.NoViableAltException(this);
                        }
                        this.state = 944;
                        this.math_operation(11);
                        break;

                    case 2:
                        localctx = new Addition_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                        this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                        this.state = 945;
                        if (!( this.precpred(this._ctx, 9))) {
                            throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                        }
                        this.state = 948;
                        switch (this._input.LA(1)) {
                            case SiddhiQLParser.PLUS:
                                this.state = 946;
                                localctx.add = this.match(SiddhiQLParser.PLUS);
                                break;
                            case SiddhiQLParser.MINUS:
                                this.state = 947;
                                localctx.substract = this.match(SiddhiQLParser.MINUS);
                                break;
                            default:
                                throw new antlr4.error.NoViableAltException(this);
                        }
                        this.state = 950;
                        this.math_operation(10);
                        break;

                    case 3:
                        localctx = new Greaterthan_lessthan_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                        this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                        this.state = 951;
                        if (!( this.precpred(this._ctx, 8))) {
                            throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                        }
                        this.state = 956;
                        switch (this._input.LA(1)) {
                            case SiddhiQLParser.GT_EQ:
                                this.state = 952;
                                localctx.gt_eq = this.match(SiddhiQLParser.GT_EQ);
                                break;
                            case SiddhiQLParser.LT_EQ:
                                this.state = 953;
                                localctx.lt_eq = this.match(SiddhiQLParser.LT_EQ);
                                break;
                            case SiddhiQLParser.GT:
                                this.state = 954;
                                localctx.gt = this.match(SiddhiQLParser.GT);
                                break;
                            case SiddhiQLParser.LT:
                                this.state = 955;
                                localctx.lt = this.match(SiddhiQLParser.LT);
                                break;
                            default:
                                throw new antlr4.error.NoViableAltException(this);
                        }
                        this.state = 958;
                        this.math_operation(9);
                        break;

                    case 4:
                        localctx = new Equality_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                        this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                        this.state = 959;
                        if (!( this.precpred(this._ctx, 7))) {
                            throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                        }
                        this.state = 962;
                        switch (this._input.LA(1)) {
                            case SiddhiQLParser.EQ:
                                this.state = 960;
                                localctx.eq = this.match(SiddhiQLParser.EQ);
                                break;
                            case SiddhiQLParser.NOT_EQ:
                                this.state = 961;
                                localctx.not_eq = this.match(SiddhiQLParser.NOT_EQ);
                                break;
                            default:
                                throw new antlr4.error.NoViableAltException(this);
                        }
                        this.state = 964;
                        this.math_operation(8);
                        break;

                    case 5:
                        localctx = new And_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                        this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                        this.state = 965;
                        if (!( this.precpred(this._ctx, 5))) {
                            throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                        }
                        this.state = 966;
                        this.match(SiddhiQLParser.AND);
                        this.state = 967;
                        this.math_operation(6);
                        break;

                    case 6:
                        localctx = new Or_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                        this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                        this.state = 968;
                        if (!( this.precpred(this._ctx, 4))) {
                            throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
                        }
                        this.state = 969;
                        this.match(SiddhiQLParser.OR);
                        this.state = 970;
                        this.math_operation(5);
                        break;

                    case 7:
                        localctx = new In_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                        this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                        this.state = 971;
                        if (!( this.precpred(this._ctx, 6))) {
                            throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                        }
                        this.state = 972;
                        this.match(SiddhiQLParser.IN);
                        this.state = 973;
                        this.name();
                        break;

                }
            }
            this.state = 978;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input, 117, this._ctx);
        }

    } catch (error) {
        if (error instanceof antlr4.error.RecognitionException) {
            localctx.exception = error;
            this._errHandler.reportError(this, error);
            this._errHandler.recover(this, error);
        } else {
            throw error;
        }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Function_operationContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_operation;
    return this;
}

Function_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_operationContext.prototype.constructor = Function_operationContext;

Function_operationContext.prototype.function_id = function () {
    return this.getTypedRuleContext(Function_idContext, 0);
};

Function_operationContext.prototype.function_namespace = function () {
    return this.getTypedRuleContext(Function_namespaceContext, 0);
};

Function_operationContext.prototype.attribute_list = function () {
    return this.getTypedRuleContext(Attribute_listContext, 0);
};

Function_operationContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterFunction_operation(this);
    }
};

Function_operationContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitFunction_operation(this);
    }
};


SiddhiQLParser.Function_operationContext = Function_operationContext;

SiddhiQLParser.prototype.function_operation = function () {

    var localctx = new Function_operationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 124, SiddhiQLParser.RULE_function_operation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 982;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 118, this._ctx);
        if (la_ === 1) {
            this.state = 979;
            this.function_namespace();
            this.state = 980;
            this.match(SiddhiQLParser.COL);

        }
        this.state = 984;
        this.function_id();
        this.state = 985;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 987;
        _la = this._input.LA(1);
        if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.INT_LITERAL) | (1 << SiddhiQLParser.LONG_LITERAL) | (1 << SiddhiQLParser.FLOAT_LITERAL) | (1 << SiddhiQLParser.DOUBLE_LITERAL) | (1 << SiddhiQLParser.OPEN_PAR) | (1 << SiddhiQLParser.STAR) | (1 << SiddhiQLParser.PLUS) | (1 << SiddhiQLParser.MINUS) | (1 << SiddhiQLParser.HASH) | (1 << SiddhiQLParser.STREAM) | (1 << SiddhiQLParser.DEFINE))) !== 0) || ((((_la - 33)) & ~0x1f) == 0 && ((1 << (_la - 33)) & ((1 << (SiddhiQLParser.TABLE - 33)) | (1 << (SiddhiQLParser.FROM - 33)) | (1 << (SiddhiQLParser.PARTITION - 33)) | (1 << (SiddhiQLParser.WINDOW - 33)) | (1 << (SiddhiQLParser.SELECT - 33)) | (1 << (SiddhiQLParser.GROUP - 33)) | (1 << (SiddhiQLParser.BY - 33)) | (1 << (SiddhiQLParser.HAVING - 33)) | (1 << (SiddhiQLParser.INSERT - 33)) | (1 << (SiddhiQLParser.DELETE - 33)) | (1 << (SiddhiQLParser.UPDATE - 33)) | (1 << (SiddhiQLParser.RETURN - 33)) | (1 << (SiddhiQLParser.EVENTS - 33)) | (1 << (SiddhiQLParser.INTO - 33)) | (1 << (SiddhiQLParser.OUTPUT - 33)) | (1 << (SiddhiQLParser.EXPIRED - 33)) | (1 << (SiddhiQLParser.CURRENT - 33)) | (1 << (SiddhiQLParser.SNAPSHOT - 33)) | (1 << (SiddhiQLParser.FOR - 33)) | (1 << (SiddhiQLParser.RAW - 33)) | (1 << (SiddhiQLParser.OF - 33)) | (1 << (SiddhiQLParser.AS - 33)) | (1 << (SiddhiQLParser.OR - 33)) | (1 << (SiddhiQLParser.AND - 33)) | (1 << (SiddhiQLParser.ON - 33)) | (1 << (SiddhiQLParser.IS - 33)) | (1 << (SiddhiQLParser.NOT - 33)) | (1 << (SiddhiQLParser.WITHIN - 33)) | (1 << (SiddhiQLParser.WITH - 33)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (SiddhiQLParser.BEGIN - 65)) | (1 << (SiddhiQLParser.END - 65)) | (1 << (SiddhiQLParser.NULL - 65)) | (1 << (SiddhiQLParser.EVERY - 65)) | (1 << (SiddhiQLParser.LAST - 65)) | (1 << (SiddhiQLParser.ALL - 65)) | (1 << (SiddhiQLParser.FIRST - 65)) | (1 << (SiddhiQLParser.JOIN - 65)) | (1 << (SiddhiQLParser.INNER - 65)) | (1 << (SiddhiQLParser.OUTER - 65)) | (1 << (SiddhiQLParser.RIGHT - 65)) | (1 << (SiddhiQLParser.LEFT - 65)) | (1 << (SiddhiQLParser.FULL - 65)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 65)) | (1 << (SiddhiQLParser.YEARS - 65)) | (1 << (SiddhiQLParser.MONTHS - 65)) | (1 << (SiddhiQLParser.WEEKS - 65)) | (1 << (SiddhiQLParser.DAYS - 65)) | (1 << (SiddhiQLParser.HOURS - 65)) | (1 << (SiddhiQLParser.MINUTES - 65)) | (1 << (SiddhiQLParser.SECONDS - 65)) | (1 << (SiddhiQLParser.MILLISECONDS - 65)) | (1 << (SiddhiQLParser.FALSE - 65)) | (1 << (SiddhiQLParser.TRUE - 65)) | (1 << (SiddhiQLParser.STRING - 65)) | (1 << (SiddhiQLParser.INT - 65)) | (1 << (SiddhiQLParser.LONG - 65)) | (1 << (SiddhiQLParser.FLOAT - 65)) | (1 << (SiddhiQLParser.DOUBLE - 65)) | (1 << (SiddhiQLParser.BOOL - 65)) | (1 << (SiddhiQLParser.OBJECT - 65)) | (1 << (SiddhiQLParser.ID_QUOTES - 65)))) !== 0) || _la === SiddhiQLParser.ID || _la === SiddhiQLParser.STRING_LITERAL) {
            this.state = 986;
            this.attribute_list();
        }

        this.state = 989;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_listContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_list;
    return this;
}

Attribute_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_listContext.prototype.constructor = Attribute_listContext;

Attribute_listContext.prototype.attribute = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(AttributeContext);
    } else {
        return this.getTypedRuleContext(AttributeContext, i);
    }
};

Attribute_listContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAttribute_list(this);
    }
};

Attribute_listContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAttribute_list(this);
    }
};


SiddhiQLParser.Attribute_listContext = Attribute_listContext;

SiddhiQLParser.prototype.attribute_list = function () {

    var localctx = new Attribute_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 126, SiddhiQLParser.RULE_attribute_list);
    var _la = 0; // Token type
    try {
        this.state = 1000;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.INT_LITERAL:
            case SiddhiQLParser.LONG_LITERAL:
            case SiddhiQLParser.FLOAT_LITERAL:
            case SiddhiQLParser.DOUBLE_LITERAL:
            case SiddhiQLParser.OPEN_PAR:
            case SiddhiQLParser.PLUS:
            case SiddhiQLParser.MINUS:
            case SiddhiQLParser.HASH:
            case SiddhiQLParser.STREAM:
            case SiddhiQLParser.DEFINE:
            case SiddhiQLParser.TABLE:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
            case SiddhiQLParser.WINDOW:
            case SiddhiQLParser.SELECT:
            case SiddhiQLParser.GROUP:
            case SiddhiQLParser.BY:
            case SiddhiQLParser.HAVING:
            case SiddhiQLParser.INSERT:
            case SiddhiQLParser.DELETE:
            case SiddhiQLParser.UPDATE:
            case SiddhiQLParser.RETURN:
            case SiddhiQLParser.EVENTS:
            case SiddhiQLParser.INTO:
            case SiddhiQLParser.OUTPUT:
            case SiddhiQLParser.EXPIRED:
            case SiddhiQLParser.CURRENT:
            case SiddhiQLParser.SNAPSHOT:
            case SiddhiQLParser.FOR:
            case SiddhiQLParser.RAW:
            case SiddhiQLParser.OF:
            case SiddhiQLParser.AS:
            case SiddhiQLParser.OR:
            case SiddhiQLParser.AND:
            case SiddhiQLParser.ON:
            case SiddhiQLParser.IS:
            case SiddhiQLParser.NOT:
            case SiddhiQLParser.WITHIN:
            case SiddhiQLParser.WITH:
            case SiddhiQLParser.BEGIN:
            case SiddhiQLParser.END:
            case SiddhiQLParser.NULL:
            case SiddhiQLParser.EVERY:
            case SiddhiQLParser.LAST:
            case SiddhiQLParser.ALL:
            case SiddhiQLParser.FIRST:
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
            case SiddhiQLParser.OUTER:
            case SiddhiQLParser.RIGHT:
            case SiddhiQLParser.LEFT:
            case SiddhiQLParser.FULL:
            case SiddhiQLParser.UNIDIRECTIONAL:
            case SiddhiQLParser.YEARS:
            case SiddhiQLParser.MONTHS:
            case SiddhiQLParser.WEEKS:
            case SiddhiQLParser.DAYS:
            case SiddhiQLParser.HOURS:
            case SiddhiQLParser.MINUTES:
            case SiddhiQLParser.SECONDS:
            case SiddhiQLParser.MILLISECONDS:
            case SiddhiQLParser.FALSE:
            case SiddhiQLParser.TRUE:
            case SiddhiQLParser.STRING:
            case SiddhiQLParser.INT:
            case SiddhiQLParser.LONG:
            case SiddhiQLParser.FLOAT:
            case SiddhiQLParser.DOUBLE:
            case SiddhiQLParser.BOOL:
            case SiddhiQLParser.OBJECT:
            case SiddhiQLParser.ID_QUOTES:
            case SiddhiQLParser.ID:
            case SiddhiQLParser.STRING_LITERAL:
                this.enterOuterAlt(localctx, 1);
                this.state = 991;
                this.attribute();
                this.state = 996;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === SiddhiQLParser.COMMA) {
                    this.state = 992;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 993;
                    this.attribute();
                    this.state = 998;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                break;
            case SiddhiQLParser.STAR:
                this.enterOuterAlt(localctx, 2);
                this.state = 999;
                this.match(SiddhiQLParser.STAR);
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Null_checkContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_null_check;
    return this;
}

Null_checkContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Null_checkContext.prototype.constructor = Null_checkContext;

Null_checkContext.prototype.IS = function () {
    return this.getToken(SiddhiQLParser.IS, 0);
};

Null_checkContext.prototype.NULL = function () {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

Null_checkContext.prototype.stream_reference = function () {
    return this.getTypedRuleContext(Stream_referenceContext, 0);
};

Null_checkContext.prototype.attribute_reference = function () {
    return this.getTypedRuleContext(Attribute_referenceContext, 0);
};

Null_checkContext.prototype.function_operation = function () {
    return this.getTypedRuleContext(Function_operationContext, 0);
};

Null_checkContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterNull_check(this);
    }
};

Null_checkContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitNull_check(this);
    }
};


SiddhiQLParser.Null_checkContext = Null_checkContext;

SiddhiQLParser.prototype.null_check = function () {

    var localctx = new Null_checkContext(this, this._ctx, this.state);
    this.enterRule(localctx, 128, SiddhiQLParser.RULE_null_check);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1005;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 122, this._ctx);
        switch (la_) {
            case 1:
                this.state = 1002;
                this.stream_reference();
                break;

            case 2:
                this.state = 1003;
                this.attribute_reference();
                break;

            case 3:
                this.state = 1004;
                this.function_operation();
                break;

        }
        this.state = 1007;
        this.match(SiddhiQLParser.IS);
        this.state = 1008;
        this.match(SiddhiQLParser.NULL);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_referenceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_reference;
    this.hash = null; // Token
    return this;
}

Stream_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_referenceContext.prototype.constructor = Stream_referenceContext;

Stream_referenceContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

Stream_referenceContext.prototype.attribute_index = function () {
    return this.getTypedRuleContext(Attribute_indexContext, 0);
};

Stream_referenceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterStream_reference(this);
    }
};

Stream_referenceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitStream_reference(this);
    }
};


SiddhiQLParser.Stream_referenceContext = Stream_referenceContext;

SiddhiQLParser.prototype.stream_reference = function () {

    var localctx = new Stream_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, SiddhiQLParser.RULE_stream_reference);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1011;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.HASH) {
            this.state = 1010;
            localctx.hash = this.match(SiddhiQLParser.HASH);
        }

        this.state = 1013;
        this.name();
        this.state = 1018;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.OPEN_SQARE_BRACKETS) {
            this.state = 1014;
            this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
            this.state = 1015;
            this.attribute_index();
            this.state = 1016;
            this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
        }

    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_referenceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_reference;
    this.hash1 = null; // Token
    this.name1 = null; // NameContext
    this.attribute_index1 = null; // Attribute_indexContext
    this.hash2 = null; // Token
    this.name2 = null; // NameContext
    this.attribute_index2 = null; // Attribute_indexContext
    return this;
}

Attribute_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_referenceContext.prototype.constructor = Attribute_referenceContext;

Attribute_referenceContext.prototype.attribute_name = function () {
    return this.getTypedRuleContext(Attribute_nameContext, 0);
};

Attribute_referenceContext.prototype.name = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext, i);
    }
};

Attribute_referenceContext.prototype.attribute_index = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Attribute_indexContext);
    } else {
        return this.getTypedRuleContext(Attribute_indexContext, i);
    }
};

Attribute_referenceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAttribute_reference(this);
    }
};

Attribute_referenceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAttribute_reference(this);
    }
};


SiddhiQLParser.Attribute_referenceContext = Attribute_referenceContext;

SiddhiQLParser.prototype.attribute_reference = function () {

    var localctx = new Attribute_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, SiddhiQLParser.RULE_attribute_reference);
    var _la = 0; // Token type
    try {
        this.state = 1044;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 129, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 1021;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.HASH) {
                    this.state = 1020;
                    localctx.hash1 = this.match(SiddhiQLParser.HASH);
                }

                this.state = 1023;
                localctx.name1 = this.name();
                this.state = 1028;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.OPEN_SQARE_BRACKETS) {
                    this.state = 1024;
                    this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
                    this.state = 1025;
                    localctx.attribute_index1 = this.attribute_index();
                    this.state = 1026;
                    this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
                }

                this.state = 1038;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.HASH) {
                    this.state = 1030;
                    localctx.hash2 = this.match(SiddhiQLParser.HASH);
                    this.state = 1031;
                    localctx.name2 = this.name();
                    this.state = 1036;
                    _la = this._input.LA(1);
                    if (_la === SiddhiQLParser.OPEN_SQARE_BRACKETS) {
                        this.state = 1032;
                        this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
                        this.state = 1033;
                        localctx.attribute_index2 = this.attribute_index();
                        this.state = 1034;
                        this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
                    }

                }

                this.state = 1040;
                this.match(SiddhiQLParser.DOT);
                this.state = 1041;
                this.attribute_name();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 1043;
                this.attribute_name();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_indexContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_index;
    return this;
}

Attribute_indexContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_indexContext.prototype.constructor = Attribute_indexContext;

Attribute_indexContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Attribute_indexContext.prototype.LAST = function () {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Attribute_indexContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAttribute_index(this);
    }
};

Attribute_indexContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAttribute_index(this);
    }
};


SiddhiQLParser.Attribute_indexContext = Attribute_indexContext;

SiddhiQLParser.prototype.attribute_index = function () {

    var localctx = new Attribute_indexContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, SiddhiQLParser.RULE_attribute_index);
    var _la = 0; // Token type
    try {
        this.state = 1052;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.INT_LITERAL:
                this.enterOuterAlt(localctx, 1);
                this.state = 1046;
                this.match(SiddhiQLParser.INT_LITERAL);
                break;
            case SiddhiQLParser.LAST:
                this.enterOuterAlt(localctx, 2);
                this.state = 1047;
                this.match(SiddhiQLParser.LAST);
                this.state = 1050;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.MINUS) {
                    this.state = 1048;
                    this.match(SiddhiQLParser.MINUS);
                    this.state = 1049;
                    this.match(SiddhiQLParser.INT_LITERAL);
                }

                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_idContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_id;
    return this;
}

Function_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_idContext.prototype.constructor = Function_idContext;

Function_idContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

Function_idContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterFunction_id(this);
    }
};

Function_idContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitFunction_id(this);
    }
};


SiddhiQLParser.Function_idContext = Function_idContext;

SiddhiQLParser.prototype.function_id = function () {

    var localctx = new Function_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, SiddhiQLParser.RULE_function_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1054;
        this.name();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_namespaceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_namespace;
    return this;
}

Function_namespaceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_namespaceContext.prototype.constructor = Function_namespaceContext;

Function_namespaceContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

Function_namespaceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterFunction_namespace(this);
    }
};

Function_namespaceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitFunction_namespace(this);
    }
};


SiddhiQLParser.Function_namespaceContext = Function_namespaceContext;

SiddhiQLParser.prototype.function_namespace = function () {

    var localctx = new Function_namespaceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, SiddhiQLParser.RULE_function_namespace);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1056;
        this.name();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_idContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_id;
    return this;
}

Stream_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_idContext.prototype.constructor = Stream_idContext;

Stream_idContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

Stream_idContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterStream_id(this);
    }
};

Stream_idContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitStream_id(this);
    }
};


SiddhiQLParser.Stream_idContext = Stream_idContext;

SiddhiQLParser.prototype.stream_id = function () {

    var localctx = new Stream_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, SiddhiQLParser.RULE_stream_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1058;
        this.name();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_aliasContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_alias;
    return this;
}

Stream_aliasContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_aliasContext.prototype.constructor = Stream_aliasContext;

Stream_aliasContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

Stream_aliasContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterStream_alias(this);
    }
};

Stream_aliasContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitStream_alias(this);
    }
};


SiddhiQLParser.Stream_aliasContext = Stream_aliasContext;

SiddhiQLParser.prototype.stream_alias = function () {

    var localctx = new Stream_aliasContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, SiddhiQLParser.RULE_stream_alias);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1060;
        this.name();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_nameContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_name;
    return this;
}

Property_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_nameContext.prototype.constructor = Property_nameContext;

Property_nameContext.prototype.name = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext, i);
    }
};

Property_nameContext.prototype.property_separator = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTypedRuleContexts(Property_separatorContext);
    } else {
        return this.getTypedRuleContext(Property_separatorContext, i);
    }
};

Property_nameContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterProperty_name(this);
    }
};

Property_nameContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitProperty_name(this);
    }
};


SiddhiQLParser.Property_nameContext = Property_nameContext;

SiddhiQLParser.prototype.property_name = function () {

    var localctx = new Property_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, SiddhiQLParser.RULE_property_name);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1062;
        this.name();
        this.state = 1068;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.COL) | (1 << SiddhiQLParser.DOT) | (1 << SiddhiQLParser.MINUS))) !== 0)) {
            this.state = 1063;
            this.property_separator();
            this.state = 1064;
            this.name();
            this.state = 1070;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_nameContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_name;
    return this;
}

Attribute_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_nameContext.prototype.constructor = Attribute_nameContext;

Attribute_nameContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

Attribute_nameContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAttribute_name(this);
    }
};

Attribute_nameContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAttribute_name(this);
    }
};


SiddhiQLParser.Attribute_nameContext = Attribute_nameContext;

SiddhiQLParser.prototype.attribute_name = function () {

    var localctx = new Attribute_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, SiddhiQLParser.RULE_attribute_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1071;
        this.name();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_type;
    return this;
}

TypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeContext.prototype.constructor = TypeContext;

TypeContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

TypeContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterType(this);
    }
};

TypeContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitType(this);
    }
};


SiddhiQLParser.TypeContext = TypeContext;

SiddhiQLParser.prototype.type = function () {

    var localctx = new TypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, SiddhiQLParser.RULE_type);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1073;
        this.name();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_value;
    return this;
}

Property_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_valueContext.prototype.constructor = Property_valueContext;

Property_valueContext.prototype.string_value = function () {
    return this.getTypedRuleContext(String_valueContext, 0);
};

Property_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterProperty_value(this);
    }
};

Property_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitProperty_value(this);
    }
};


SiddhiQLParser.Property_valueContext = Property_valueContext;

SiddhiQLParser.prototype.property_value = function () {

    var localctx = new Property_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, SiddhiQLParser.RULE_property_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1075;
        this.string_value();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_separatorContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_separator;
    return this;
}

Property_separatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_separatorContext.prototype.constructor = Property_separatorContext;

Property_separatorContext.prototype.DOT = function () {
    return this.getToken(SiddhiQLParser.DOT, 0);
};

Property_separatorContext.prototype.MINUS = function () {
    return this.getToken(SiddhiQLParser.MINUS, 0);
};

Property_separatorContext.prototype.COL = function () {
    return this.getToken(SiddhiQLParser.COL, 0);
};

Property_separatorContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterProperty_separator(this);
    }
};

Property_separatorContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitProperty_separator(this);
    }
};


SiddhiQLParser.Property_separatorContext = Property_separatorContext;

SiddhiQLParser.prototype.property_separator = function () {

    var localctx = new Property_separatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, SiddhiQLParser.RULE_property_separator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1077;
        _la = this._input.LA(1);
        if (!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.COL) | (1 << SiddhiQLParser.DOT) | (1 << SiddhiQLParser.MINUS))) !== 0))) {
            this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SourceContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_source;
    this.inner = null; // Token
    return this;
}

SourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SourceContext.prototype.constructor = SourceContext;

SourceContext.prototype.stream_id = function () {
    return this.getTypedRuleContext(Stream_idContext, 0);
};

SourceContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSource(this);
    }
};

SourceContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSource(this);
    }
};


SiddhiQLParser.SourceContext = SourceContext;

SiddhiQLParser.prototype.source = function () {

    var localctx = new SourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, SiddhiQLParser.RULE_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1080;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.HASH) {
            this.state = 1079;
            localctx.inner = this.match(SiddhiQLParser.HASH);
        }

        this.state = 1082;
        this.stream_id();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TargetContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_target;
    return this;
}

TargetContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TargetContext.prototype.constructor = TargetContext;

TargetContext.prototype.source = function () {
    return this.getTypedRuleContext(SourceContext, 0);
};

TargetContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterTarget(this);
    }
};

TargetContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitTarget(this);
    }
};


SiddhiQLParser.TargetContext = TargetContext;

SiddhiQLParser.prototype.target = function () {

    var localctx = new TargetContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, SiddhiQLParser.RULE_target);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1084;
        this.source();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EventContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_event;
    return this;
}

EventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EventContext.prototype.constructor = EventContext;

EventContext.prototype.name = function () {
    return this.getTypedRuleContext(NameContext, 0);
};

EventContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterEvent(this);
    }
};

EventContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitEvent(this);
    }
};


SiddhiQLParser.EventContext = EventContext;

SiddhiQLParser.prototype.event = function () {

    var localctx = new EventContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, SiddhiQLParser.RULE_event);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1086;
        this.name();
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NameContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_name;
    return this;
}

NameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NameContext.prototype.constructor = NameContext;

NameContext.prototype.id = function () {
    return this.getTypedRuleContext(IdContext, 0);
};

NameContext.prototype.keyword = function () {
    return this.getTypedRuleContext(KeywordContext, 0);
};

NameContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterName(this);
    }
};

NameContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitName(this);
    }
};


SiddhiQLParser.NameContext = NameContext;

SiddhiQLParser.prototype.name = function () {

    var localctx = new NameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, SiddhiQLParser.RULE_name);
    try {
        this.state = 1090;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.ID_QUOTES:
            case SiddhiQLParser.ID:
                this.enterOuterAlt(localctx, 1);
                this.state = 1088;
                this.id();
                break;
            case SiddhiQLParser.STREAM:
            case SiddhiQLParser.DEFINE:
            case SiddhiQLParser.TABLE:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
            case SiddhiQLParser.WINDOW:
            case SiddhiQLParser.SELECT:
            case SiddhiQLParser.GROUP:
            case SiddhiQLParser.BY:
            case SiddhiQLParser.HAVING:
            case SiddhiQLParser.INSERT:
            case SiddhiQLParser.DELETE:
            case SiddhiQLParser.UPDATE:
            case SiddhiQLParser.RETURN:
            case SiddhiQLParser.EVENTS:
            case SiddhiQLParser.INTO:
            case SiddhiQLParser.OUTPUT:
            case SiddhiQLParser.EXPIRED:
            case SiddhiQLParser.CURRENT:
            case SiddhiQLParser.SNAPSHOT:
            case SiddhiQLParser.FOR:
            case SiddhiQLParser.RAW:
            case SiddhiQLParser.OF:
            case SiddhiQLParser.AS:
            case SiddhiQLParser.OR:
            case SiddhiQLParser.AND:
            case SiddhiQLParser.ON:
            case SiddhiQLParser.IS:
            case SiddhiQLParser.NOT:
            case SiddhiQLParser.WITHIN:
            case SiddhiQLParser.WITH:
            case SiddhiQLParser.BEGIN:
            case SiddhiQLParser.END:
            case SiddhiQLParser.NULL:
            case SiddhiQLParser.EVERY:
            case SiddhiQLParser.LAST:
            case SiddhiQLParser.ALL:
            case SiddhiQLParser.FIRST:
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
            case SiddhiQLParser.OUTER:
            case SiddhiQLParser.RIGHT:
            case SiddhiQLParser.LEFT:
            case SiddhiQLParser.FULL:
            case SiddhiQLParser.UNIDIRECTIONAL:
            case SiddhiQLParser.YEARS:
            case SiddhiQLParser.MONTHS:
            case SiddhiQLParser.WEEKS:
            case SiddhiQLParser.DAYS:
            case SiddhiQLParser.HOURS:
            case SiddhiQLParser.MINUTES:
            case SiddhiQLParser.SECONDS:
            case SiddhiQLParser.MILLISECONDS:
            case SiddhiQLParser.FALSE:
            case SiddhiQLParser.TRUE:
            case SiddhiQLParser.STRING:
            case SiddhiQLParser.INT:
            case SiddhiQLParser.LONG:
            case SiddhiQLParser.FLOAT:
            case SiddhiQLParser.DOUBLE:
            case SiddhiQLParser.BOOL:
            case SiddhiQLParser.OBJECT:
                this.enterOuterAlt(localctx, 2);
                this.state = 1089;
                this.keyword();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CollectContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_collect;
    this.start = null; // Token
    this.end = null; // Token
    return this;
}

CollectContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CollectContext.prototype.constructor = CollectContext;

CollectContext.prototype.INT_LITERAL = function (i) {
    if (i === undefined) {
        i = null;
    }
    if (i === null) {
        return this.getTokens(SiddhiQLParser.INT_LITERAL);
    } else {
        return this.getToken(SiddhiQLParser.INT_LITERAL, i);
    }
};


CollectContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterCollect(this);
    }
};

CollectContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitCollect(this);
    }
};


SiddhiQLParser.CollectContext = CollectContext;

SiddhiQLParser.prototype.collect = function () {

    var localctx = new CollectContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, SiddhiQLParser.RULE_collect);
    try {
        this.state = 1100;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 135, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 1092;
                localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
                this.state = 1093;
                this.match(SiddhiQLParser.COL);
                this.state = 1094;
                localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 1095;
                localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
                this.state = 1096;
                this.match(SiddhiQLParser.COL);
                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 1097;
                this.match(SiddhiQLParser.COL);
                this.state = 1098;
                localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
                break;

            case 4:
                this.enterOuterAlt(localctx, 4);
                this.state = 1099;
                this.match(SiddhiQLParser.INT_LITERAL);
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_typeContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_type;
    return this;
}

Attribute_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_typeContext.prototype.constructor = Attribute_typeContext;

Attribute_typeContext.prototype.STRING = function () {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

Attribute_typeContext.prototype.INT = function () {
    return this.getToken(SiddhiQLParser.INT, 0);
};

Attribute_typeContext.prototype.LONG = function () {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

Attribute_typeContext.prototype.FLOAT = function () {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

Attribute_typeContext.prototype.DOUBLE = function () {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

Attribute_typeContext.prototype.BOOL = function () {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

Attribute_typeContext.prototype.OBJECT = function () {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

Attribute_typeContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterAttribute_type(this);
    }
};

Attribute_typeContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitAttribute_type(this);
    }
};


SiddhiQLParser.Attribute_typeContext = Attribute_typeContext;

SiddhiQLParser.prototype.attribute_type = function () {

    var localctx = new Attribute_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, SiddhiQLParser.RULE_attribute_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1102;
        _la = this._input.LA(1);
        if (!(((((_la - 89)) & ~0x1f) == 0 && ((1 << (_la - 89)) & ((1 << (SiddhiQLParser.STRING - 89)) | (1 << (SiddhiQLParser.INT - 89)) | (1 << (SiddhiQLParser.LONG - 89)) | (1 << (SiddhiQLParser.FLOAT - 89)) | (1 << (SiddhiQLParser.DOUBLE - 89)) | (1 << (SiddhiQLParser.BOOL - 89)) | (1 << (SiddhiQLParser.OBJECT - 89)))) !== 0))) {
            this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function JoinContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join;
    return this;
}

JoinContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
JoinContext.prototype.constructor = JoinContext;

JoinContext.prototype.LEFT = function () {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

JoinContext.prototype.OUTER = function () {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

JoinContext.prototype.JOIN = function () {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

JoinContext.prototype.RIGHT = function () {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

JoinContext.prototype.FULL = function () {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

JoinContext.prototype.INNER = function () {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

JoinContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterJoin(this);
    }
};

JoinContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitJoin(this);
    }
};


SiddhiQLParser.JoinContext = JoinContext;

SiddhiQLParser.prototype.join = function () {

    var localctx = new JoinContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, SiddhiQLParser.RULE_join);
    var _la = 0; // Token type
    try {
        this.state = 1119;
        switch (this._input.LA(1)) {
            case SiddhiQLParser.LEFT:
                this.enterOuterAlt(localctx, 1);
                this.state = 1104;
                this.match(SiddhiQLParser.LEFT);
                this.state = 1105;
                this.match(SiddhiQLParser.OUTER);
                this.state = 1106;
                this.match(SiddhiQLParser.JOIN);
                break;
            case SiddhiQLParser.RIGHT:
                this.enterOuterAlt(localctx, 2);
                this.state = 1107;
                this.match(SiddhiQLParser.RIGHT);
                this.state = 1108;
                this.match(SiddhiQLParser.OUTER);
                this.state = 1109;
                this.match(SiddhiQLParser.JOIN);
                break;
            case SiddhiQLParser.FULL:
                this.enterOuterAlt(localctx, 3);
                this.state = 1110;
                this.match(SiddhiQLParser.FULL);
                this.state = 1111;
                this.match(SiddhiQLParser.OUTER);
                this.state = 1112;
                this.match(SiddhiQLParser.JOIN);
                break;
            case SiddhiQLParser.OUTER:
                this.enterOuterAlt(localctx, 4);
                this.state = 1113;
                this.match(SiddhiQLParser.OUTER);
                this.state = 1114;
                this.match(SiddhiQLParser.JOIN);
                break;
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
                this.enterOuterAlt(localctx, 5);
                this.state = 1116;
                _la = this._input.LA(1);
                if (_la === SiddhiQLParser.INNER) {
                    this.state = 1115;
                    this.match(SiddhiQLParser.INNER);
                }

                this.state = 1118;
                this.match(SiddhiQLParser.JOIN);
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Constant_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_constant_value;
    return this;
}

Constant_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Constant_valueContext.prototype.constructor = Constant_valueContext;

Constant_valueContext.prototype.bool_value = function () {
    return this.getTypedRuleContext(Bool_valueContext, 0);
};

Constant_valueContext.prototype.signed_double_value = function () {
    return this.getTypedRuleContext(Signed_double_valueContext, 0);
};

Constant_valueContext.prototype.signed_float_value = function () {
    return this.getTypedRuleContext(Signed_float_valueContext, 0);
};

Constant_valueContext.prototype.signed_long_value = function () {
    return this.getTypedRuleContext(Signed_long_valueContext, 0);
};

Constant_valueContext.prototype.signed_int_value = function () {
    return this.getTypedRuleContext(Signed_int_valueContext, 0);
};

Constant_valueContext.prototype.time_value = function () {
    return this.getTypedRuleContext(Time_valueContext, 0);
};

Constant_valueContext.prototype.string_value = function () {
    return this.getTypedRuleContext(String_valueContext, 0);
};

Constant_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterConstant_value(this);
    }
};

Constant_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitConstant_value(this);
    }
};


SiddhiQLParser.Constant_valueContext = Constant_valueContext;

SiddhiQLParser.prototype.constant_value = function () {

    var localctx = new Constant_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, SiddhiQLParser.RULE_constant_value);
    try {
        this.state = 1128;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 138, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 1121;
                this.bool_value();
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 1122;
                this.signed_double_value();
                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 1123;
                this.signed_float_value();
                break;

            case 4:
                this.enterOuterAlt(localctx, 4);
                this.state = 1124;
                this.signed_long_value();
                break;

            case 5:
                this.enterOuterAlt(localctx, 5);
                this.state = 1125;
                this.signed_int_value();
                break;

            case 6:
                this.enterOuterAlt(localctx, 6);
                this.state = 1126;
                this.time_value();
                break;

            case 7:
                this.enterOuterAlt(localctx, 7);
                this.state = 1127;
                this.string_value();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IdContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_id;
    return this;
}

IdContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IdContext.prototype.constructor = IdContext;

IdContext.prototype.ID_QUOTES = function () {
    return this.getToken(SiddhiQLParser.ID_QUOTES, 0);
};

IdContext.prototype.ID = function () {
    return this.getToken(SiddhiQLParser.ID, 0);
};

IdContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterId(this);
    }
};

IdContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitId(this);
    }
};


SiddhiQLParser.IdContext = IdContext;

SiddhiQLParser.prototype.id = function () {

    var localctx = new IdContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, SiddhiQLParser.RULE_id);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1130;
        _la = this._input.LA(1);
        if (!(_la === SiddhiQLParser.ID_QUOTES || _la === SiddhiQLParser.ID)) {
            this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function KeywordContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_keyword;
    return this;
}

KeywordContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
KeywordContext.prototype.constructor = KeywordContext;

KeywordContext.prototype.STREAM = function () {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

KeywordContext.prototype.DEFINE = function () {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

KeywordContext.prototype.TABLE = function () {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

KeywordContext.prototype.FROM = function () {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

KeywordContext.prototype.PARTITION = function () {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

KeywordContext.prototype.WINDOW = function () {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

KeywordContext.prototype.SELECT = function () {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

KeywordContext.prototype.GROUP = function () {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

KeywordContext.prototype.BY = function () {
    return this.getToken(SiddhiQLParser.BY, 0);
};

KeywordContext.prototype.HAVING = function () {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

KeywordContext.prototype.INSERT = function () {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

KeywordContext.prototype.DELETE = function () {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

KeywordContext.prototype.UPDATE = function () {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

KeywordContext.prototype.RETURN = function () {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

KeywordContext.prototype.EVENTS = function () {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

KeywordContext.prototype.INTO = function () {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

KeywordContext.prototype.OUTPUT = function () {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

KeywordContext.prototype.EXPIRED = function () {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

KeywordContext.prototype.CURRENT = function () {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

KeywordContext.prototype.SNAPSHOT = function () {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

KeywordContext.prototype.FOR = function () {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

KeywordContext.prototype.RAW = function () {
    return this.getToken(SiddhiQLParser.RAW, 0);
};

KeywordContext.prototype.OF = function () {
    return this.getToken(SiddhiQLParser.OF, 0);
};

KeywordContext.prototype.AS = function () {
    return this.getToken(SiddhiQLParser.AS, 0);
};

KeywordContext.prototype.OR = function () {
    return this.getToken(SiddhiQLParser.OR, 0);
};

KeywordContext.prototype.AND = function () {
    return this.getToken(SiddhiQLParser.AND, 0);
};

KeywordContext.prototype.ON = function () {
    return this.getToken(SiddhiQLParser.ON, 0);
};

KeywordContext.prototype.IS = function () {
    return this.getToken(SiddhiQLParser.IS, 0);
};

KeywordContext.prototype.NOT = function () {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

KeywordContext.prototype.WITHIN = function () {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

KeywordContext.prototype.WITH = function () {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

KeywordContext.prototype.BEGIN = function () {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

KeywordContext.prototype.END = function () {
    return this.getToken(SiddhiQLParser.END, 0);
};

KeywordContext.prototype.NULL = function () {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

KeywordContext.prototype.EVERY = function () {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

KeywordContext.prototype.LAST = function () {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

KeywordContext.prototype.ALL = function () {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

KeywordContext.prototype.FIRST = function () {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

KeywordContext.prototype.JOIN = function () {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

KeywordContext.prototype.INNER = function () {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

KeywordContext.prototype.OUTER = function () {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

KeywordContext.prototype.RIGHT = function () {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

KeywordContext.prototype.LEFT = function () {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

KeywordContext.prototype.FULL = function () {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

KeywordContext.prototype.UNIDIRECTIONAL = function () {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

KeywordContext.prototype.YEARS = function () {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

KeywordContext.prototype.MONTHS = function () {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

KeywordContext.prototype.WEEKS = function () {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

KeywordContext.prototype.DAYS = function () {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

KeywordContext.prototype.HOURS = function () {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

KeywordContext.prototype.MINUTES = function () {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

KeywordContext.prototype.SECONDS = function () {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

KeywordContext.prototype.MILLISECONDS = function () {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

KeywordContext.prototype.FALSE = function () {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

KeywordContext.prototype.TRUE = function () {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

KeywordContext.prototype.STRING = function () {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

KeywordContext.prototype.INT = function () {
    return this.getToken(SiddhiQLParser.INT, 0);
};

KeywordContext.prototype.LONG = function () {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

KeywordContext.prototype.FLOAT = function () {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

KeywordContext.prototype.DOUBLE = function () {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

KeywordContext.prototype.BOOL = function () {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

KeywordContext.prototype.OBJECT = function () {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

KeywordContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterKeyword(this);
    }
};

KeywordContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitKeyword(this);
    }
};


SiddhiQLParser.KeywordContext = KeywordContext;

SiddhiQLParser.prototype.keyword = function () {

    var localctx = new KeywordContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, SiddhiQLParser.RULE_keyword);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1132;
        _la = this._input.LA(1);
        if (!(_la === SiddhiQLParser.STREAM || _la === SiddhiQLParser.DEFINE || ((((_la - 33)) & ~0x1f) == 0 && ((1 << (_la - 33)) & ((1 << (SiddhiQLParser.TABLE - 33)) | (1 << (SiddhiQLParser.FROM - 33)) | (1 << (SiddhiQLParser.PARTITION - 33)) | (1 << (SiddhiQLParser.WINDOW - 33)) | (1 << (SiddhiQLParser.SELECT - 33)) | (1 << (SiddhiQLParser.GROUP - 33)) | (1 << (SiddhiQLParser.BY - 33)) | (1 << (SiddhiQLParser.HAVING - 33)) | (1 << (SiddhiQLParser.INSERT - 33)) | (1 << (SiddhiQLParser.DELETE - 33)) | (1 << (SiddhiQLParser.UPDATE - 33)) | (1 << (SiddhiQLParser.RETURN - 33)) | (1 << (SiddhiQLParser.EVENTS - 33)) | (1 << (SiddhiQLParser.INTO - 33)) | (1 << (SiddhiQLParser.OUTPUT - 33)) | (1 << (SiddhiQLParser.EXPIRED - 33)) | (1 << (SiddhiQLParser.CURRENT - 33)) | (1 << (SiddhiQLParser.SNAPSHOT - 33)) | (1 << (SiddhiQLParser.FOR - 33)) | (1 << (SiddhiQLParser.RAW - 33)) | (1 << (SiddhiQLParser.OF - 33)) | (1 << (SiddhiQLParser.AS - 33)) | (1 << (SiddhiQLParser.OR - 33)) | (1 << (SiddhiQLParser.AND - 33)) | (1 << (SiddhiQLParser.ON - 33)) | (1 << (SiddhiQLParser.IS - 33)) | (1 << (SiddhiQLParser.NOT - 33)) | (1 << (SiddhiQLParser.WITHIN - 33)) | (1 << (SiddhiQLParser.WITH - 33)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (SiddhiQLParser.BEGIN - 65)) | (1 << (SiddhiQLParser.END - 65)) | (1 << (SiddhiQLParser.NULL - 65)) | (1 << (SiddhiQLParser.EVERY - 65)) | (1 << (SiddhiQLParser.LAST - 65)) | (1 << (SiddhiQLParser.ALL - 65)) | (1 << (SiddhiQLParser.FIRST - 65)) | (1 << (SiddhiQLParser.JOIN - 65)) | (1 << (SiddhiQLParser.INNER - 65)) | (1 << (SiddhiQLParser.OUTER - 65)) | (1 << (SiddhiQLParser.RIGHT - 65)) | (1 << (SiddhiQLParser.LEFT - 65)) | (1 << (SiddhiQLParser.FULL - 65)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 65)) | (1 << (SiddhiQLParser.YEARS - 65)) | (1 << (SiddhiQLParser.MONTHS - 65)) | (1 << (SiddhiQLParser.WEEKS - 65)) | (1 << (SiddhiQLParser.DAYS - 65)) | (1 << (SiddhiQLParser.HOURS - 65)) | (1 << (SiddhiQLParser.MINUTES - 65)) | (1 << (SiddhiQLParser.SECONDS - 65)) | (1 << (SiddhiQLParser.MILLISECONDS - 65)) | (1 << (SiddhiQLParser.FALSE - 65)) | (1 << (SiddhiQLParser.TRUE - 65)) | (1 << (SiddhiQLParser.STRING - 65)) | (1 << (SiddhiQLParser.INT - 65)) | (1 << (SiddhiQLParser.LONG - 65)) | (1 << (SiddhiQLParser.FLOAT - 65)) | (1 << (SiddhiQLParser.DOUBLE - 65)) | (1 << (SiddhiQLParser.BOOL - 65)) | (1 << (SiddhiQLParser.OBJECT - 65)))) !== 0))) {
            this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Time_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_time_value;
    return this;
}

Time_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Time_valueContext.prototype.constructor = Time_valueContext;

Time_valueContext.prototype.year_value = function () {
    return this.getTypedRuleContext(Year_valueContext, 0);
};

Time_valueContext.prototype.month_value = function () {
    return this.getTypedRuleContext(Month_valueContext, 0);
};

Time_valueContext.prototype.week_value = function () {
    return this.getTypedRuleContext(Week_valueContext, 0);
};

Time_valueContext.prototype.day_value = function () {
    return this.getTypedRuleContext(Day_valueContext, 0);
};

Time_valueContext.prototype.hour_value = function () {
    return this.getTypedRuleContext(Hour_valueContext, 0);
};

Time_valueContext.prototype.minute_value = function () {
    return this.getTypedRuleContext(Minute_valueContext, 0);
};

Time_valueContext.prototype.second_value = function () {
    return this.getTypedRuleContext(Second_valueContext, 0);
};

Time_valueContext.prototype.millisecond_value = function () {
    return this.getTypedRuleContext(Millisecond_valueContext, 0);
};

Time_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterTime_value(this);
    }
};

Time_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitTime_value(this);
    }
};


SiddhiQLParser.Time_valueContext = Time_valueContext;

SiddhiQLParser.prototype.time_value = function () {

    var localctx = new Time_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, SiddhiQLParser.RULE_time_value);
    try {
        this.state = 1226;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input, 167, this._ctx);
        switch (la_) {
            case 1:
                this.enterOuterAlt(localctx, 1);
                this.state = 1134;
                this.year_value();
                this.state = 1136;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 139, this._ctx);
                if (la_ === 1) {
                    this.state = 1135;
                    this.month_value();

                }
                this.state = 1139;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 140, this._ctx);
                if (la_ === 1) {
                    this.state = 1138;
                    this.week_value();

                }
                this.state = 1142;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 141, this._ctx);
                if (la_ === 1) {
                    this.state = 1141;
                    this.day_value();

                }
                this.state = 1145;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 142, this._ctx);
                if (la_ === 1) {
                    this.state = 1144;
                    this.hour_value();

                }
                this.state = 1148;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 143, this._ctx);
                if (la_ === 1) {
                    this.state = 1147;
                    this.minute_value();

                }
                this.state = 1151;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 144, this._ctx);
                if (la_ === 1) {
                    this.state = 1150;
                    this.second_value();

                }
                this.state = 1154;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 145, this._ctx);
                if (la_ === 1) {
                    this.state = 1153;
                    this.millisecond_value();

                }
                break;

            case 2:
                this.enterOuterAlt(localctx, 2);
                this.state = 1156;
                this.month_value();
                this.state = 1158;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 146, this._ctx);
                if (la_ === 1) {
                    this.state = 1157;
                    this.week_value();

                }
                this.state = 1161;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 147, this._ctx);
                if (la_ === 1) {
                    this.state = 1160;
                    this.day_value();

                }
                this.state = 1164;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 148, this._ctx);
                if (la_ === 1) {
                    this.state = 1163;
                    this.hour_value();

                }
                this.state = 1167;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 149, this._ctx);
                if (la_ === 1) {
                    this.state = 1166;
                    this.minute_value();

                }
                this.state = 1170;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 150, this._ctx);
                if (la_ === 1) {
                    this.state = 1169;
                    this.second_value();

                }
                this.state = 1173;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 151, this._ctx);
                if (la_ === 1) {
                    this.state = 1172;
                    this.millisecond_value();

                }
                break;

            case 3:
                this.enterOuterAlt(localctx, 3);
                this.state = 1175;
                this.week_value();
                this.state = 1177;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 152, this._ctx);
                if (la_ === 1) {
                    this.state = 1176;
                    this.day_value();

                }
                this.state = 1180;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 153, this._ctx);
                if (la_ === 1) {
                    this.state = 1179;
                    this.hour_value();

                }
                this.state = 1183;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 154, this._ctx);
                if (la_ === 1) {
                    this.state = 1182;
                    this.minute_value();

                }
                this.state = 1186;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 155, this._ctx);
                if (la_ === 1) {
                    this.state = 1185;
                    this.second_value();

                }
                this.state = 1189;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 156, this._ctx);
                if (la_ === 1) {
                    this.state = 1188;
                    this.millisecond_value();

                }
                break;

            case 4:
                this.enterOuterAlt(localctx, 4);
                this.state = 1191;
                this.day_value();
                this.state = 1193;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 157, this._ctx);
                if (la_ === 1) {
                    this.state = 1192;
                    this.hour_value();

                }
                this.state = 1196;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 158, this._ctx);
                if (la_ === 1) {
                    this.state = 1195;
                    this.minute_value();

                }
                this.state = 1199;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 159, this._ctx);
                if (la_ === 1) {
                    this.state = 1198;
                    this.second_value();

                }
                this.state = 1202;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 160, this._ctx);
                if (la_ === 1) {
                    this.state = 1201;
                    this.millisecond_value();

                }
                break;

            case 5:
                this.enterOuterAlt(localctx, 5);
                this.state = 1204;
                this.hour_value();
                this.state = 1206;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 161, this._ctx);
                if (la_ === 1) {
                    this.state = 1205;
                    this.minute_value();

                }
                this.state = 1209;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 162, this._ctx);
                if (la_ === 1) {
                    this.state = 1208;
                    this.second_value();

                }
                this.state = 1212;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 163, this._ctx);
                if (la_ === 1) {
                    this.state = 1211;
                    this.millisecond_value();

                }
                break;

            case 6:
                this.enterOuterAlt(localctx, 6);
                this.state = 1214;
                this.minute_value();
                this.state = 1216;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 164, this._ctx);
                if (la_ === 1) {
                    this.state = 1215;
                    this.second_value();

                }
                this.state = 1219;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 165, this._ctx);
                if (la_ === 1) {
                    this.state = 1218;
                    this.millisecond_value();

                }
                break;

            case 7:
                this.enterOuterAlt(localctx, 7);
                this.state = 1221;
                this.second_value();
                this.state = 1223;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 166, this._ctx);
                if (la_ === 1) {
                    this.state = 1222;
                    this.millisecond_value();

                }
                break;

            case 8:
                this.enterOuterAlt(localctx, 8);
                this.state = 1225;
                this.millisecond_value();
                break;

        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Year_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_year_value;
    return this;
}

Year_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Year_valueContext.prototype.constructor = Year_valueContext;

Year_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Year_valueContext.prototype.YEARS = function () {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

Year_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterYear_value(this);
    }
};

Year_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitYear_value(this);
    }
};


SiddhiQLParser.Year_valueContext = Year_valueContext;

SiddhiQLParser.prototype.year_value = function () {

    var localctx = new Year_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, SiddhiQLParser.RULE_year_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1228;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1229;
        this.match(SiddhiQLParser.YEARS);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Month_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_month_value;
    return this;
}

Month_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Month_valueContext.prototype.constructor = Month_valueContext;

Month_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Month_valueContext.prototype.MONTHS = function () {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

Month_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterMonth_value(this);
    }
};

Month_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitMonth_value(this);
    }
};


SiddhiQLParser.Month_valueContext = Month_valueContext;

SiddhiQLParser.prototype.month_value = function () {

    var localctx = new Month_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, SiddhiQLParser.RULE_month_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1231;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1232;
        this.match(SiddhiQLParser.MONTHS);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Week_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_week_value;
    return this;
}

Week_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Week_valueContext.prototype.constructor = Week_valueContext;

Week_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Week_valueContext.prototype.WEEKS = function () {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

Week_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterWeek_value(this);
    }
};

Week_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitWeek_value(this);
    }
};


SiddhiQLParser.Week_valueContext = Week_valueContext;

SiddhiQLParser.prototype.week_value = function () {

    var localctx = new Week_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, SiddhiQLParser.RULE_week_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1234;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1235;
        this.match(SiddhiQLParser.WEEKS);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Day_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_day_value;
    return this;
}

Day_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Day_valueContext.prototype.constructor = Day_valueContext;

Day_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Day_valueContext.prototype.DAYS = function () {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

Day_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterDay_value(this);
    }
};

Day_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitDay_value(this);
    }
};


SiddhiQLParser.Day_valueContext = Day_valueContext;

SiddhiQLParser.prototype.day_value = function () {

    var localctx = new Day_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, SiddhiQLParser.RULE_day_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1237;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1238;
        this.match(SiddhiQLParser.DAYS);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Hour_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_hour_value;
    return this;
}

Hour_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hour_valueContext.prototype.constructor = Hour_valueContext;

Hour_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Hour_valueContext.prototype.HOURS = function () {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

Hour_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterHour_value(this);
    }
};

Hour_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitHour_value(this);
    }
};


SiddhiQLParser.Hour_valueContext = Hour_valueContext;

SiddhiQLParser.prototype.hour_value = function () {

    var localctx = new Hour_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, SiddhiQLParser.RULE_hour_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1240;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1241;
        this.match(SiddhiQLParser.HOURS);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Minute_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_minute_value;
    return this;
}

Minute_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Minute_valueContext.prototype.constructor = Minute_valueContext;

Minute_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Minute_valueContext.prototype.MINUTES = function () {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

Minute_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterMinute_value(this);
    }
};

Minute_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitMinute_value(this);
    }
};


SiddhiQLParser.Minute_valueContext = Minute_valueContext;

SiddhiQLParser.prototype.minute_value = function () {

    var localctx = new Minute_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, SiddhiQLParser.RULE_minute_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1243;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1244;
        this.match(SiddhiQLParser.MINUTES);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Second_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_second_value;
    return this;
}

Second_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Second_valueContext.prototype.constructor = Second_valueContext;

Second_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Second_valueContext.prototype.SECONDS = function () {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

Second_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSecond_value(this);
    }
};

Second_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSecond_value(this);
    }
};


SiddhiQLParser.Second_valueContext = Second_valueContext;

SiddhiQLParser.prototype.second_value = function () {

    var localctx = new Second_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, SiddhiQLParser.RULE_second_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1246;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1247;
        this.match(SiddhiQLParser.SECONDS);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Millisecond_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_millisecond_value;
    return this;
}

Millisecond_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Millisecond_valueContext.prototype.constructor = Millisecond_valueContext;

Millisecond_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Millisecond_valueContext.prototype.MILLISECONDS = function () {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

Millisecond_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterMillisecond_value(this);
    }
};

Millisecond_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitMillisecond_value(this);
    }
};


SiddhiQLParser.Millisecond_valueContext = Millisecond_valueContext;

SiddhiQLParser.prototype.millisecond_value = function () {

    var localctx = new Millisecond_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, SiddhiQLParser.RULE_millisecond_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1249;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1250;
        this.match(SiddhiQLParser.MILLISECONDS);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_double_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_double_value;
    return this;
}

Signed_double_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_double_valueContext.prototype.constructor = Signed_double_valueContext;

Signed_double_valueContext.prototype.DOUBLE_LITERAL = function () {
    return this.getToken(SiddhiQLParser.DOUBLE_LITERAL, 0);
};

Signed_double_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSigned_double_value(this);
    }
};

Signed_double_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSigned_double_value(this);
    }
};


SiddhiQLParser.Signed_double_valueContext = Signed_double_valueContext;

SiddhiQLParser.prototype.signed_double_value = function () {

    var localctx = new Signed_double_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, SiddhiQLParser.RULE_signed_double_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1253;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.PLUS || _la === SiddhiQLParser.MINUS) {
            this.state = 1252;
            _la = this._input.LA(1);
            if (!(_la === SiddhiQLParser.PLUS || _la === SiddhiQLParser.MINUS)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1255;
        this.match(SiddhiQLParser.DOUBLE_LITERAL);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_long_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_long_value;
    return this;
}

Signed_long_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_long_valueContext.prototype.constructor = Signed_long_valueContext;

Signed_long_valueContext.prototype.LONG_LITERAL = function () {
    return this.getToken(SiddhiQLParser.LONG_LITERAL, 0);
};

Signed_long_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSigned_long_value(this);
    }
};

Signed_long_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSigned_long_value(this);
    }
};


SiddhiQLParser.Signed_long_valueContext = Signed_long_valueContext;

SiddhiQLParser.prototype.signed_long_value = function () {

    var localctx = new Signed_long_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 194, SiddhiQLParser.RULE_signed_long_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1258;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.PLUS || _la === SiddhiQLParser.MINUS) {
            this.state = 1257;
            _la = this._input.LA(1);
            if (!(_la === SiddhiQLParser.PLUS || _la === SiddhiQLParser.MINUS)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1260;
        this.match(SiddhiQLParser.LONG_LITERAL);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_float_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_float_value;
    return this;
}

Signed_float_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_float_valueContext.prototype.constructor = Signed_float_valueContext;

Signed_float_valueContext.prototype.FLOAT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.FLOAT_LITERAL, 0);
};

Signed_float_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSigned_float_value(this);
    }
};

Signed_float_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSigned_float_value(this);
    }
};


SiddhiQLParser.Signed_float_valueContext = Signed_float_valueContext;

SiddhiQLParser.prototype.signed_float_value = function () {

    var localctx = new Signed_float_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, SiddhiQLParser.RULE_signed_float_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1263;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.PLUS || _la === SiddhiQLParser.MINUS) {
            this.state = 1262;
            _la = this._input.LA(1);
            if (!(_la === SiddhiQLParser.PLUS || _la === SiddhiQLParser.MINUS)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1265;
        this.match(SiddhiQLParser.FLOAT_LITERAL);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_int_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_int_value;
    return this;
}

Signed_int_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_int_valueContext.prototype.constructor = Signed_int_valueContext;

Signed_int_valueContext.prototype.INT_LITERAL = function () {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Signed_int_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterSigned_int_value(this);
    }
};

Signed_int_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitSigned_int_value(this);
    }
};


SiddhiQLParser.Signed_int_valueContext = Signed_int_valueContext;

SiddhiQLParser.prototype.signed_int_value = function () {

    var localctx = new Signed_int_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, SiddhiQLParser.RULE_signed_int_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1268;
        _la = this._input.LA(1);
        if (_la === SiddhiQLParser.PLUS || _la === SiddhiQLParser.MINUS) {
            this.state = 1267;
            _la = this._input.LA(1);
            if (!(_la === SiddhiQLParser.PLUS || _la === SiddhiQLParser.MINUS)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1270;
        this.match(SiddhiQLParser.INT_LITERAL);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Bool_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_bool_value;
    return this;
}

Bool_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Bool_valueContext.prototype.constructor = Bool_valueContext;

Bool_valueContext.prototype.TRUE = function () {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

Bool_valueContext.prototype.FALSE = function () {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

Bool_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterBool_value(this);
    }
};

Bool_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitBool_value(this);
    }
};


SiddhiQLParser.Bool_valueContext = Bool_valueContext;

SiddhiQLParser.prototype.bool_value = function () {

    var localctx = new Bool_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 200, SiddhiQLParser.RULE_bool_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1272;
        _la = this._input.LA(1);
        if (!(_la === SiddhiQLParser.FALSE || _la === SiddhiQLParser.TRUE)) {
            this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function String_valueContext(parser, parent, invokingState) {
    if (parent === undefined) {
        parent = null;
    }
    if (invokingState === undefined || invokingState === null) {
        invokingState = -1;
    }
    antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_string_value;
    return this;
}

String_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
String_valueContext.prototype.constructor = String_valueContext;

String_valueContext.prototype.STRING_LITERAL = function () {
    return this.getToken(SiddhiQLParser.STRING_LITERAL, 0);
};

String_valueContext.prototype.enterRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.enterString_value(this);
    }
};

String_valueContext.prototype.exitRule = function (listener) {
    if (listener instanceof SiddhiQLListener) {
        listener.exitString_value(this);
    }
};


SiddhiQLParser.String_valueContext = String_valueContext;

SiddhiQLParser.prototype.string_value = function () {

    var localctx = new String_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 202, SiddhiQLParser.RULE_string_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1274;
        this.match(SiddhiQLParser.STRING_LITERAL);
    } catch (re) {
        if (re instanceof antlr4.error.RecognitionException) {
            localctx.exception = re;
            this._errHandler.reportError(this, re);
            this._errHandler.recover(this, re);
        } else {
            throw re;
        }
    } finally {
        this.exitRule();
    }
    return localctx;
};


SiddhiQLParser.prototype.sempred = function (localctx, ruleIndex, predIndex) {
    switch (ruleIndex) {
        case 33:
            return this.every_pattern_source_chain_sempred(localctx, predIndex);
        case 34:
            return this.pattern_source_chain_sempred(localctx, predIndex);
        case 43:
            return this.sequence_source_chain_sempred(localctx, predIndex);
        case 61:
            return this.math_operation_sempred(localctx, predIndex);
        default:
            throw "No predicate with index:" + ruleIndex;
    }
};

SiddhiQLParser.prototype.every_pattern_source_chain_sempred = function (localctx, predIndex) {
    switch (predIndex) {
        case 0:
            return this.precpred(this._ctx, 3);
        default:
            throw "No predicate with index:" + predIndex;
    }
};

SiddhiQLParser.prototype.pattern_source_chain_sempred = function (localctx, predIndex) {
    switch (predIndex) {
        case 1:
            return this.precpred(this._ctx, 2);
        default:
            throw "No predicate with index:" + predIndex;
    }
};

SiddhiQLParser.prototype.sequence_source_chain_sempred = function (localctx, predIndex) {
    switch (predIndex) {
        case 2:
            return this.precpred(this._ctx, 2);
        default:
            throw "No predicate with index:" + predIndex;
    }
};

SiddhiQLParser.prototype.math_operation_sempred = function (localctx, predIndex) {
    switch (predIndex) {
        case 3:
            return this.precpred(this._ctx, 10);
        case 4:
            return this.precpred(this._ctx, 9);
        case 5:
            return this.precpred(this._ctx, 8);
        case 6:
            return this.precpred(this._ctx, 7);
        case 7:
            return this.precpred(this._ctx, 5);
        case 8:
            return this.precpred(this._ctx, 4);
        case 9:
            return this.precpred(this._ctx, 6);
        default:
            throw "No predicate with index:" + predIndex;
    }
};


exports.SiddhiQLParser = SiddhiQLParser;
