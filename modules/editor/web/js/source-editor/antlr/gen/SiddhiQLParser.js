// Generated from SiddhiQL.g4 by ANTLR 4.5
// jshint ignore: start
var antlr4 = require('../../antlr4-js-runtime/index');
var SiddhiQLListener = require('./SiddhiQLListener').SiddhiQLListener;

	//import org.wso2.siddhi.query.compiler.exception.SiddhiParserException;

var grammarFileName = "SiddhiQL.g4";

var serializedATN = ["\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\3j\u04ee\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4",
    "\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t",
    "\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27",
    "\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4",
    "\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t",
    "\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t",
    "\61\4\62\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t",
    "8\49\t9\4:\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC",
    "\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4",
    "O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z",
    "\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4`\t`\4a\ta\4b\tb\4c\tc\4d\td\4",
    "e\te\3\2\3\2\3\2\3\3\3\3\3\4\3\4\7\4\u00d2\n\4\f\4\16\4\u00d5\13\4\3",
    "\4\3\4\3\4\3\4\3\4\3\4\5\4\u00dd\n\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4",
    "\u00e6\n\4\7\4\u00e8\n\4\f\4\16\4\u00eb\13\4\3\4\5\4\u00ee\n\4\3\4\3",
    "\4\3\4\5\4\u00f3\n\4\3\4\3\4\3\4\5\4\u00f8\n\4\7\4\u00fa\n\4\f\4\16",
    "\4\u00fd\13\4\3\4\5\4\u0100\n\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4\u0109",
    "\n\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4\u0112\n\4\7\4\u0114\n\4\f\4\16",
    "\4\u0117\13\4\3\4\3\4\3\4\5\4\u011c\n\4\7\4\u011e\n\4\f\4\16\4\u0121",
    "\13\4\3\4\5\4\u0124\n\4\5\4\u0126\n\4\3\5\3\5\5\5\u012a\n\5\3\6\3\6",
    "\5\6\u012e\n\6\3\6\3\6\3\7\7\7\u0133\n\7\f\7\16\7\u0136\13\7\3\7\3\7",
    "\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\7\7\u0142\n\7\f\7\16\7\u0145\13\7\3",
    "\7\3\7\3\b\3\b\5\b\u014b\n\b\3\b\3\b\3\t\7\t\u0150\n\t\f\t\16\t\u0153",
    "\13\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\7\t\u015f\n\t\f\t\16\t",
    "\u0162\13\t\3\t\3\t\3\n\3\n\5\n\u0168\n\n\3\n\3\n\3\13\7\13\u016d\n",
    "\13\f\13\16\13\u0170\13\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3",
    "\13\3\13\7\13\u017c\n\13\f\13\16\13\u017f\13\13\3\13\3\13\3\13\3\13",
    "\5\13\u0185\n\13\3\f\3\f\5\f\u0189\n\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3",
    "\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\5\21\u019f",
    "\n\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\5\22\u01aa\n\22\3",
    "\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\7\24\u01b4\n\24\f\24\16\24\u01b7",
    "\13\24\3\24\3\24\5\24\u01bb\n\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25",
    "\3\25\7\25\u01c5\n\25\f\25\16\25\u01c8\13\25\3\25\3\25\5\25\u01cc\n",
    "\25\3\26\3\26\3\26\5\26\u01d1\n\26\3\26\3\26\3\27\7\27\u01d6\n\27\f",
    "\27\16\27\u01d9\13\27\3\27\3\27\3\27\3\27\3\27\3\27\7\27\u01e1\n\27",
    "\f\27\16\27\u01e4\13\27\3\27\3\27\3\27\3\27\5\27\u01ea\n\27\3\27\3\27",
    "\3\27\5\27\u01ef\n\27\7\27\u01f1\n\27\f\27\16\27\u01f4\13\27\3\27\5",
    "\27\u01f7\n\27\3\27\3\27\3\30\3\30\5\30\u01fd\n\30\3\30\3\30\3\31\3",
    "\31\3\31\3\31\3\31\3\31\3\31\3\31\5\31\u0209\n\31\3\32\3\32\3\32\7\32",
    "\u020e\n\32\f\32\16\32\u0211\13\32\3\33\3\33\3\33\3\33\3\34\3\34\5\34",
    "\u0219\n\34\3\34\3\34\3\35\7\35\u021e\n\35\f\35\16\35\u0221\13\35\3",
    "\35\3\35\3\35\5\35\u0226\n\35\3\35\5\35\u0229\n\35\3\35\3\35\3\36\3",
    "\36\3\36\3\36\3\36\5\36\u0232\n\36\3\37\3\37\5\37\u0236\n\37\3\37\5",
    "\37\u0239\n\37\3\37\5\37\u023c\n\37\3 \3 \3 \3 \3 \3 \5 \u0244\n \3",
    " \5 \u0247\n \3 \3 \3 \3 \3 \5 \u024e\n \3 \5 \u0251\n \3 \3 \3 \3 ",
    "\3 \3 \5 \u0259\n \3 \5 \u025c\n \5 \u025e\n \3!\3!\5!\u0262\n!\3!\5",
    "!\u0265\n!\3!\3!\5!\u0269\n!\3\"\3\"\3#\3#\3#\3#\3#\5#\u0272\n#\3#\3",
    "#\3#\3#\3#\5#\u0279\n#\3#\3#\3#\3#\5#\u027f\n#\5#\u0281\n#\3#\3#\3#",
    "\7#\u0286\n#\f#\16#\u0289\13#\3$\3$\3$\3$\3$\5$\u0290\n$\3$\3$\5$\u0294",
    "\n$\5$\u0296\n$\3$\3$\3$\7$\u029b\n$\f$\16$\u029e\13$\3%\3%\3%\5%\u02a3",
    "\n%\3&\3&\3&\3&\5&\u02a9\n&\3&\3&\3&\3&\3&\3&\3&\3&\5&\u02b3\n&\3\'",
    "\3\'\3\'\3\'\3\'\3(\3(\3(\5(\u02bd\n(\3(\3(\3)\3)\5)\u02c3\n)\3*\6*",
    "\u02c6\n*\r*\16*\u02c7\3+\3+\5+\u02cc\n+\3,\5,\u02cf\n,\3,\3,\5,\u02d3",
    "\n,\3,\3,\3,\3-\3-\3-\3-\3-\5-\u02dd\n-\3-\3-\5-\u02e1\n-\5-\u02e3\n",
    "-\3-\3-\3-\7-\u02e8\n-\f-\16-\u02eb\13-\3.\3.\3.\5.\u02f0\n.\3/\3/\3",
    "/\3/\3/\3/\3/\3/\5/\u02fa\n/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60",
    "\u0303\n\60\3\60\5\60\u0306\n\60\3\60\3\60\5\60\u030a\n\60\5\60\u030c",
    "\n\60\3\61\5\61\u030f\n\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\63\3",
    "\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\7\64\u0322\n\64\f\64\16",
    "\64\u0325\13\64\5\64\u0327\n\64\3\64\5\64\u032a\n\64\3\64\5\64\u032d",
    "\n\64\3\65\3\65\3\65\3\65\3\65\7\65\u0334\n\65\f\65\16\65\u0337\13\65",
    "\3\66\3\66\3\66\3\67\3\67\5\67\u033e\n\67\3\67\3\67\3\67\3\67\3\67\3",
    "\67\5\67\u0346\n\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67\5\67\u034f\n",
    "\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67\5\67\u0359\n\67\3\67\3\67",
    "\3\67\3\67\3\67\5\67\u0360\n\67\5\67\u0362\n\67\38\38\38\38\38\38\3",
    "8\38\38\38\38\58\u036f\n8\38\58\u0372\n8\39\39\59\u0376\n9\39\39\39",
    "\39\59\u037c\n9\39\39\39\39\59\u0382\n9\3:\3:\3;\3;\3;\3<\3<\3<\3<\3",
    "<\5<\u038e\n<\3=\3=\3>\3>\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\5?\u039f",
    "\n?\3?\3?\3?\3?\5?\u03a5\n?\3?\3?\3?\3?\5?\u03ab\n?\3?\3?\3?\3?\3?\3",
    "?\5?\u03b3\n?\3?\3?\3?\3?\5?\u03b9\n?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?",
    "\7?\u03c5\n?\f?\16?\u03c8\13?\3@\3@\3@\5@\u03cd\n@\3@\3@\3@\5@\u03d2",
    "\n@\3@\3@\3A\3A\3A\7A\u03d9\nA\fA\16A\u03dc\13A\3A\5A\u03df\nA\3B\3",
    "B\3B\5B\u03e4\nB\3B\3B\3B\3C\5C\u03ea\nC\3C\3C\3C\3C\3C\5C\u03f1\nC",
    "\3D\5D\u03f4\nD\3D\3D\3D\3D\3D\5D\u03fb\nD\3D\3D\3D\3D\3D\3D\5D\u0403",
    "\nD\5D\u0405\nD\3D\3D\3D\3D\5D\u040b\nD\3E\3E\3E\3E\5E\u0411\nE\5E\u0413",
    "\nE\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3J\7J\u0420\nJ\fJ\16J\u0423\13J\3",
    "K\3K\3L\3L\3M\5M\u042a\nM\3M\3M\3N\3N\3O\3O\3P\3P\5P\u0434\nP\3Q\3Q",
    "\3Q\3Q\3Q\3Q\3Q\3Q\5Q\u043e\nQ\3R\3R\3S\3S\3S\3S\3S\3S\3S\3S\3S\3S\3",
    "S\3S\5S\u044e\nS\3S\5S\u0451\nS\3T\3T\3T\3T\3T\3T\3T\5T\u045a\nT\3U",
    "\3U\3V\3V\3W\3W\5W\u0462\nW\3W\5W\u0465\nW\3W\5W\u0468\nW\3W\5W\u046b",
    "\nW\3W\5W\u046e\nW\3W\5W\u0471\nW\3W\5W\u0474\nW\3W\3W\5W\u0478\nW\3",
    "W\5W\u047b\nW\3W\5W\u047e\nW\3W\5W\u0481\nW\3W\5W\u0484\nW\3W\5W\u0487",
    "\nW\3W\3W\5W\u048b\nW\3W\5W\u048e\nW\3W\5W\u0491\nW\3W\5W\u0494\nW\3",
    "W\5W\u0497\nW\3W\3W\5W\u049b\nW\3W\5W\u049e\nW\3W\5W\u04a1\nW\3W\5W",
    "\u04a4\nW\3W\3W\5W\u04a8\nW\3W\5W\u04ab\nW\3W\5W\u04ae\nW\3W\3W\5W\u04b2",
    "\nW\3W\5W\u04b5\nW\3W\3W\5W\u04b9\nW\3W\5W\u04bc\nW\3X\3X\3X\3Y\3Y\3",
    "Y\3Z\3Z\3Z\3[\3[\3[\3\\\3\\\3\\\3]\3]\3]\3^\3^\3^\3_\3_\3_\3`\5`\u04d7",
    "\n`\3`\3`\3a\5a\u04dc\na\3a\3a\3b\5b\u04e1\nb\3b\3b\3c\5c\u04e6\nc\3",
    "c\3c\3d\3d\3e\3e\3e\2\6DFX|f\2\4\6\b\n\f\16\20\22\24\26\30\32\34\36",
    " \"$&(*,.\60\62\64\668:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082",
    "\u0084\u0086\u0088\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a",
    "\u009c\u009e\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2",
    "\u00b4\u00b6\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\2",
    "\b\3\2HJ\3\2\\b\3\2cd\7\2\37 ##%:<=?b\4\2\21\21\23\23\3\2Z[\u0574\2",
    "\u00ca\3\2\2\2\4\u00cd\3\2\2\2\6\u00d3\3\2\2\2\b\u0129\3\2\2\2\n\u012b",
    "\3\2\2\2\f\u0134\3\2\2\2\16\u0148\3\2\2\2\20\u0151\3\2\2\2\22\u0165",
    "\3\2\2\2\24\u016e\3\2\2\2\26\u0186\3\2\2\2\30\u018c\3\2\2\2\32\u0196",
    "\3\2\2\2\34\u0198\3\2\2\2\36\u019a\3\2\2\2 \u019c\3\2\2\2\"\u01a2\3",
    "\2\2\2$\u01ab\3\2\2\2&\u01ad\3\2\2\2(\u01bc\3\2\2\2*\u01d0\3\2\2\2,",
    "\u01d7\3\2\2\2.\u01fa\3\2\2\2\60\u0208\3\2\2\2\62\u020a\3\2\2\2\64\u0212",
    "\3\2\2\2\66\u0216\3\2\2\28\u021f\3\2\2\2:\u0231\3\2\2\2<\u0233\3\2\2",
    "\2>\u025d\3\2\2\2@\u025f\3\2\2\2B\u026a\3\2\2\2D\u0280\3\2\2\2F\u0295",
    "\3\2\2\2H\u02a2\3\2\2\2J\u02b2\3\2\2\2L\u02b4\3\2\2\2N\u02bc\3\2\2\2",
    "P\u02c0\3\2\2\2R\u02c5\3\2\2\2T\u02cb\3\2\2\2V\u02ce\3\2\2\2X\u02e2",
    "\3\2\2\2Z\u02ef\3\2\2\2\\\u02f1\3\2\2\2^\u030b\3\2\2\2`\u030e\3\2\2",
    "\2b\u0314\3\2\2\2d\u0317\3\2\2\2f\u031c\3\2\2\2h\u032e\3\2\2\2j\u0338",
    "\3\2\2\2l\u0361\3\2\2\2n\u0371\3\2\2\2p\u0381\3\2\2\2r\u0383\3\2\2\2",
    "t\u0385\3\2\2\2v\u038d\3\2\2\2x\u038f\3\2\2\2z\u0391\3\2\2\2|\u039e",
    "\3\2\2\2~\u03cc\3\2\2\2\u0080\u03de\3\2\2\2\u0082\u03e3\3\2\2\2\u0084",
    "\u03e9\3\2\2\2\u0086\u040a\3\2\2\2\u0088\u0412\3\2\2\2\u008a\u0414\3",
    "\2\2\2\u008c\u0416\3\2\2\2\u008e\u0418\3\2\2\2\u0090\u041a\3\2\2\2\u0092",
    "\u041c\3\2\2\2\u0094\u0424\3\2\2\2\u0096\u0426\3\2\2\2\u0098\u0429\3",
    "\2\2\2\u009a\u042d\3\2\2\2\u009c\u042f\3\2\2\2\u009e\u0433\3\2\2\2\u00a0",
    "\u043d\3\2\2\2\u00a2\u043f\3\2\2\2\u00a4\u0450\3\2\2\2\u00a6\u0459\3",
    "\2\2\2\u00a8\u045b\3\2\2\2\u00aa\u045d\3\2\2\2\u00ac\u04bb\3\2\2\2\u00ae",
    "\u04bd\3\2\2\2\u00b0\u04c0\3\2\2\2\u00b2\u04c3\3\2\2\2\u00b4\u04c6\3",
    "\2\2\2\u00b6\u04c9\3\2\2\2\u00b8\u04cc\3\2\2\2\u00ba\u04cf\3\2\2\2\u00bc",
    "\u04d2\3\2\2\2\u00be\u04d6\3\2\2\2\u00c0\u04db\3\2\2\2\u00c2\u04e0\3",
    "\2\2\2\u00c4\u04e5\3\2\2\2\u00c6\u04e9\3\2\2\2\u00c8\u04eb\3\2\2\2\u00ca",
    "\u00cb\5\6\4\2\u00cb\u00cc\7\2\2\3\u00cc\3\3\2\2\2\u00cd\u00ce\7i\2",
    "\2\u00ce\5\3\2\2\2\u00cf\u00d2\5(\25\2\u00d0\u00d2\5\4\3\2\u00d1\u00cf",
    "\3\2\2\2\u00d1\u00d0\3\2\2\2\u00d2\u00d5\3\2\2\2\u00d3\u00d1\3\2\2\2",
    "\u00d3\u00d4\3\2\2\2\u00d4\u0125\3\2\2\2\u00d5\u00d3\3\2\2\2\u00d6\u00dd",
    "\5\f\7\2\u00d7\u00dd\5\20\t\2\u00d8\u00dd\5\"\22\2\u00d9\u00dd\5\30",
    "\r\2\u00da\u00dd\5\24\13\2\u00db\u00dd\5\4\3\2\u00dc\u00d6\3\2\2\2\u00dc",
    "\u00d7\3\2\2\2\u00dc\u00d8\3\2\2\2\u00dc\u00d9\3\2\2\2\u00dc\u00da\3",
    "\2\2\2\u00dc\u00db\3\2\2\2\u00dd\u00e9\3\2\2\2\u00de\u00e5\7\b\2\2\u00df",
    "\u00e6\5\f\7\2\u00e0\u00e6\5\20\t\2\u00e1\u00e6\5\"\22\2\u00e2\u00e6",
    "\5\30\r\2\u00e3\u00e6\5\24\13\2\u00e4\u00e6\5\4\3\2\u00e5\u00df\3\2",
    "\2\2\u00e5\u00e0\3\2\2\2\u00e5\u00e1\3\2\2\2\u00e5\u00e2\3\2\2\2\u00e5",
    "\u00e3\3\2\2\2\u00e5\u00e4\3\2\2\2\u00e6\u00e8\3\2\2\2\u00e7\u00de\3",
    "\2\2\2\u00e8\u00eb\3\2\2\2\u00e9\u00e7\3\2\2\2\u00e9\u00ea\3\2\2\2\u00ea",
    "\u00ed\3\2\2\2\u00eb\u00e9\3\2\2\2\u00ec\u00ee\7\b\2\2\u00ed\u00ec\3",
    "\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u0126\3\2\2\2\u00ef\u0126\3\2\2\2\u00f0",
    "\u00f3\5\b\5\2\u00f1\u00f3\5\4\3\2\u00f2\u00f0\3\2\2\2\u00f2\u00f1\3",
    "\2\2\2\u00f3\u00fb\3\2\2\2\u00f4\u00f7\7\b\2\2\u00f5\u00f8\5\b\5\2\u00f6",
    "\u00f8\5\4\3\2\u00f7\u00f5\3\2\2\2\u00f7\u00f6\3\2\2\2\u00f8\u00fa\3",
    "\2\2\2\u00f9\u00f4\3\2\2\2\u00fa\u00fd\3\2\2\2\u00fb\u00f9\3\2\2\2\u00fb",
    "\u00fc\3\2\2\2\u00fc\u00ff\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fe\u0100\7",
    "\b\2\2\u00ff\u00fe\3\2\2\2\u00ff\u0100\3\2\2\2\u0100\u0126\3\2\2\2\u0101",
    "\u0126\3\2\2\2\u0102\u0109\5\f\7\2\u0103\u0109\5\20\t\2\u0104\u0109",
    "\5\"\22\2\u0105\u0109\5\30\r\2\u0106\u0109\5\24\13\2\u0107\u0109\5\4",
    "\3\2\u0108\u0102\3\2\2\2\u0108\u0103\3\2\2\2\u0108\u0104\3\2\2\2\u0108",
    "\u0105\3\2\2\2\u0108\u0106\3\2\2\2\u0108\u0107\3\2\2\2\u0109\u0115\3",
    "\2\2\2\u010a\u0111\7\b\2\2\u010b\u0112\5\f\7\2\u010c\u0112\5\20\t\2",
    "\u010d\u0112\5\"\22\2\u010e\u0112\5\30\r\2\u010f\u0112\5\24\13\2\u0110",
    "\u0112\5\4\3\2\u0111\u010b\3\2\2\2\u0111\u010c\3\2\2\2\u0111\u010d\3",
    "\2\2\2\u0111\u010e\3\2\2\2\u0111\u010f\3\2\2\2\u0111\u0110\3\2\2\2\u0112",
    "\u0114\3\2\2\2\u0113\u010a\3\2\2\2\u0114\u0117\3\2\2\2\u0115\u0113\3",
    "\2\2\2\u0115\u0116\3\2\2\2\u0116\u011f\3\2\2\2\u0117\u0115\3\2\2\2\u0118",
    "\u011b\7\b\2\2\u0119\u011c\5\b\5\2\u011a\u011c\5\4\3\2\u011b\u0119\3",
    "\2\2\2\u011b\u011a\3\2\2\2\u011c\u011e\3\2\2\2\u011d\u0118\3\2\2\2\u011e",
    "\u0121\3\2\2\2\u011f\u011d\3\2\2\2\u011f\u0120\3\2\2\2\u0120\u0123\3",
    "\2\2\2\u0121\u011f\3\2\2\2\u0122\u0124\7\b\2\2\u0123\u0122\3\2\2\2\u0123",
    "\u0124\3\2\2\2\u0124\u0126\3\2\2\2\u0125\u00dc\3\2\2\2\u0125\u00ef\3",
    "\2\2\2\u0125\u00f2\3\2\2\2\u0125\u0101\3\2\2\2\u0125\u0108\3\2\2\2\u0126",
    "\7\3\2\2\2\u0127\u012a\58\35\2\u0128\u012a\5,\27\2\u0129\u0127\3\2\2",
    "\2\u0129\u0128\3\2\2\2\u012a\t\3\2\2\2\u012b\u012d\5\f\7\2\u012c\u012e",
    "\7\b\2\2\u012d\u012c\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u012f\3\2\2\2",
    "\u012f\u0130\7\2\2\3\u0130\13\3\2\2\2\u0131\u0133\5&\24\2\u0132\u0131",
    "\3\2\2\2\u0133\u0136\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135\3\2\2\2",
    "\u0135\u0137\3\2\2\2\u0136\u0134\3\2\2\2\u0137\u0138\7 \2\2\u0138\u0139",
    "\7\37\2\2\u0139\u013a\5\u0098M\2\u013a\u013b\7\n\2\2\u013b\u013c\5\u0094",
    "K\2\u013c\u0143\5\u00a2R\2\u013d\u013e\7\16\2\2\u013e\u013f\5\u0094",
    "K\2\u013f\u0140\5\u00a2R\2\u0140\u0142\3\2\2\2\u0141\u013d\3\2\2\2\u0142",
    "\u0145\3\2\2\2\u0143\u0141\3\2\2\2\u0143\u0144\3\2\2\2\u0144\u0146\3",
    "\2\2\2\u0145\u0143\3\2\2\2\u0146\u0147\7\13\2\2\u0147\r\3\2\2\2\u0148",
    "\u014a\5\20\t\2\u0149\u014b\7\b\2\2\u014a\u0149\3\2\2\2\u014a\u014b",
    "\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014d\7\2\2\3\u014d\17\3\2\2\2\u014e",
    "\u0150\5&\24\2\u014f\u014e\3\2\2\2\u0150\u0153\3\2\2\2\u0151\u014f\3",
    "\2\2\2\u0151\u0152\3\2\2\2\u0152\u0154\3\2\2\2\u0153\u0151\3\2\2\2\u0154",
    "\u0155\7 \2\2\u0155\u0156\7#\2\2\u0156\u0157\5\u0098M\2\u0157\u0158",
    "\7\n\2\2\u0158\u0159\5\u0094K\2\u0159\u0160\5\u00a2R\2\u015a\u015b\7",
    "\16\2\2\u015b\u015c\5\u0094K\2\u015c\u015d\5\u00a2R\2\u015d\u015f\3",
    "\2\2\2\u015e\u015a\3\2\2\2\u015f\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160",
    "\u0161\3\2\2\2\u0161\u0163\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u0164\7",
    "\13\2\2\u0164\21\3\2\2\2\u0165\u0167\5\24\13\2\u0166\u0168\7\b\2\2\u0167",
    "\u0166\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u0169\3\2\2\2\u0169\u016a\7",
    "\2\2\3\u016a\23\3\2\2\2\u016b\u016d\5&\24\2\u016c\u016b\3\2\2\2\u016d",
    "\u0170\3\2\2\2\u016e\u016c\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u0171\3",
    "\2\2\2\u0170\u016e\3\2\2\2\u0171\u0172\7 \2\2\u0172\u0173\7\'\2\2\u0173",
    "\u0174\5\u0098M\2\u0174\u0175\7\n\2\2\u0175\u0176\5\u0094K\2\u0176\u017d",
    "\5\u00a2R\2\u0177\u0178\7\16\2\2\u0178\u0179\5\u0094K\2\u0179\u017a",
    "\5\u00a2R\2\u017a\u017c\3\2\2\2\u017b\u0177\3\2\2\2\u017c\u017f\3\2",
    "\2\2\u017d\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u0180\3\2\2\2\u017f",
    "\u017d\3\2\2\2\u0180\u0181\7\13\2\2\u0181\u0184\5~@\2\u0182\u0183\7",
    "\63\2\2\u0183\u0185\5n8\2\u0184\u0182\3\2\2\2\u0184\u0185\3\2\2\2\u0185",
    "\25\3\2\2\2\u0186\u0188\5\30\r\2\u0187\u0189\7\b\2\2\u0188\u0187\3\2",
    "\2\2\u0188\u0189\3\2\2\2\u0189\u018a\3\2\2\2\u018a\u018b\7\2\2\3\u018b",
    "\27\3\2\2\2\u018c\u018d\7 \2\2\u018d\u018e\7!\2\2\u018e\u018f\5\32\16",
    "\2\u018f\u0190\7\f\2\2\u0190\u0191\5\34\17\2\u0191\u0192\7\r\2\2\u0192",
    "\u0193\7\60\2\2\u0193\u0194\5\u00a2R\2\u0194\u0195\5\36\20\2\u0195\31",
    "\3\2\2\2\u0196\u0197\5\u00a8U\2\u0197\33\3\2\2\2\u0198\u0199\5\u00a8",
    "U\2\u0199\35\3\2\2\2\u019a\u019b\7j\2\2\u019b\37\3\2\2\2\u019c\u019e",
    "\5\"\22\2\u019d\u019f\7\b\2\2\u019e\u019d\3\2\2\2\u019e\u019f\3\2\2",
    "\2\u019f\u01a0\3\2\2\2\u01a0\u01a1\7\2\2\3\u01a1!\3\2\2\2\u01a2\u01a3",
    "\7 \2\2\u01a3\u01a4\7\"\2\2\u01a4\u01a5\5$\23\2\u01a5\u01a9\7;\2\2\u01a6",
    "\u01a7\7G\2\2\u01a7\u01aa\5\u00acW\2\u01a8\u01aa\5\u00c8e\2\u01a9\u01a6",
    "\3\2\2\2\u01a9\u01a8\3\2\2\2\u01aa#\3\2\2\2\u01ab\u01ac\5\u00a8U\2\u01ac",
    "%\3\2\2\2\u01ad\u01ae\7\34\2\2\u01ae\u01ba\5\u009eP\2\u01af\u01b0\7",
    "\n\2\2\u01b0\u01b5\5*\26\2\u01b1\u01b2\7\16\2\2\u01b2\u01b4\5*\26\2",
    "\u01b3\u01b1\3\2\2\2\u01b4\u01b7\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b5\u01b6",
    "\3\2\2\2\u01b6\u01b8\3\2\2\2\u01b7\u01b5\3\2\2\2\u01b8\u01b9\7\13\2",
    "\2\u01b9\u01bb\3\2\2\2\u01ba\u01af\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb",
    "\'\3\2\2\2\u01bc\u01bd\7\34\2\2\u01bd\u01be\7$\2\2\u01be\u01bf\7\7\2",
    "\2\u01bf\u01cb\5\u009eP\2\u01c0\u01c1\7\n\2\2\u01c1\u01c6\5*\26\2\u01c2",
    "\u01c3\7\16\2\2\u01c3\u01c5\5*\26\2\u01c4\u01c2\3\2\2\2\u01c5\u01c8",
    "\3\2\2\2\u01c6\u01c4\3\2\2\2\u01c6\u01c7\3\2\2\2\u01c7\u01c9\3\2\2\2",
    "\u01c8\u01c6\3\2\2\2\u01c9\u01ca\7\13\2\2\u01ca\u01cc\3\2\2\2\u01cb",
    "\u01c0\3\2\2\2\u01cb\u01cc\3\2\2\2\u01cc)\3\2\2\2\u01cd\u01ce\5\u0092",
    "J\2\u01ce\u01cf\7\17\2\2\u01cf\u01d1\3\2\2\2\u01d0\u01cd\3\2\2\2\u01d0",
    "\u01d1\3\2\2\2\u01d1\u01d2\3\2\2\2\u01d2\u01d3\5\u0096L\2\u01d3+\3\2",
    "\2\2\u01d4\u01d6\5&\24\2\u01d5\u01d4\3\2\2\2\u01d6\u01d9\3\2\2\2\u01d7",
    "\u01d5\3\2\2\2\u01d7\u01d8\3\2\2\2\u01d8\u01da\3\2\2\2\u01d9\u01d7\3",
    "\2\2\2\u01da\u01db\7&\2\2\u01db\u01dc\7C\2\2\u01dc\u01dd\7\n\2\2\u01dd",
    "\u01e2\5\60\31\2\u01de\u01df\7\16\2\2\u01df\u01e1\5\60\31\2\u01e0\u01de",
    "\3\2\2\2\u01e1\u01e4\3\2\2\2\u01e2\u01e0\3\2\2\2\u01e2\u01e3\3\2\2\2",
    "\u01e3\u01e5\3\2\2\2\u01e4\u01e2\3\2\2\2\u01e5\u01e6\7\13\2\2\u01e6",
    "\u01e9\7D\2\2\u01e7\u01ea\58\35\2\u01e8\u01ea\5\4\3\2\u01e9\u01e7\3",
    "\2\2\2\u01e9\u01e8\3\2\2\2\u01ea\u01f2\3\2\2\2\u01eb\u01ee\7\b\2\2\u01ec",
    "\u01ef\58\35\2\u01ed\u01ef\5\4\3\2\u01ee\u01ec\3\2\2\2\u01ee\u01ed\3",
    "\2\2\2\u01ef\u01f1\3\2\2\2\u01f0\u01eb\3\2\2\2\u01f1\u01f4\3\2\2\2\u01f2",
    "\u01f0\3\2\2\2\u01f2\u01f3\3\2\2\2\u01f3\u01f6\3\2\2\2\u01f4\u01f2\3",
    "\2\2\2\u01f5\u01f7\7\b\2\2\u01f6\u01f5\3\2\2\2\u01f6\u01f7\3\2\2\2\u01f7",
    "\u01f8\3\2\2\2\u01f8\u01f9\7E\2\2\u01f9-\3\2\2\2\u01fa\u01fc\5,\27\2",
    "\u01fb\u01fd\7\b\2\2\u01fc\u01fb\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd\u01fe",
    "\3\2\2\2\u01fe\u01ff\7\2\2\3\u01ff/\3\2\2\2\u0200\u0201\5x=\2\u0201",
    "\u0202\79\2\2\u0202\u0203\5\u008eH\2\u0203\u0209\3\2\2\2\u0204\u0205",
    "\5\62\32\2\u0205\u0206\79\2\2\u0206\u0207\5\u008eH\2\u0207\u0209\3\2",
    "\2\2\u0208\u0200\3\2\2\2\u0208\u0204\3\2\2\2\u0209\61\3\2\2\2\u020a",
    "\u020f\5\64\33\2\u020b\u020c\7<\2\2\u020c\u020e\5\64\33\2\u020d\u020b",
    "\3\2\2\2\u020e\u0211\3\2\2\2\u020f\u020d\3\2\2\2\u020f\u0210\3\2\2\2",
    "\u0210\63\3\2\2\2\u0211\u020f\3\2\2\2\u0212\u0213\5z>\2\u0213\u0214",
    "\7:\2\2\u0214\u0215\5\u00c8e\2\u0215\65\3\2\2\2\u0216\u0218\58\35\2",
    "\u0217\u0219\7\b\2\2\u0218\u0217\3\2\2\2\u0218\u0219\3\2\2\2\u0219\u021a",
    "\3\2\2\2\u021a\u021b\7\2\2\3\u021b\67\3\2\2\2\u021c\u021e\5&\24\2\u021d",
    "\u021c\3\2\2\2\u021e\u0221\3\2\2\2\u021f\u021d\3\2\2\2\u021f\u0220\3",
    "\2\2\2\u0220\u0222\3\2\2\2\u0221\u021f\3\2\2\2\u0222\u0223\7%\2\2\u0223",
    "\u0225\5:\36\2\u0224\u0226\5f\64\2\u0225\u0224\3\2\2\2\u0225\u0226\3",
    "\2\2\2\u0226\u0228\3\2\2\2\u0227\u0229\5p9\2\u0228\u0227\3\2\2\2\u0228",
    "\u0229\3\2\2\2\u0229\u022a\3\2\2\2\u022a\u022b\5l\67\2\u022b9\3\2\2",
    "\2\u022c\u0232\5<\37\2\u022d\u0232\5> \2\u022e\u0232\5B\"\2\u022f\u0232",
    "\5V,\2\u0230\u0232\5^\60\2\u0231\u022c\3\2\2\2\u0231\u022d\3\2\2\2\u0231",
    "\u022e\3\2\2\2\u0231\u022f\3\2\2\2\u0231\u0230\3\2\2\2\u0232;\3\2\2",
    "\2\u0233\u0235\5\u0098M\2\u0234\u0236\5R*\2\u0235\u0234\3\2\2\2\u0235",
    "\u0236\3\2\2\2\u0236\u0238\3\2\2\2\u0237\u0239\5d\63\2\u0238\u0237\3",
    "\2\2\2\u0238\u0239\3\2\2\2\u0239\u023b\3\2\2\2\u023a\u023c\5R*\2\u023b",
    "\u023a\3\2\2\2\u023b\u023c\3\2\2\2\u023c=\3\2\2\2\u023d\u023e\5@!\2",
    "\u023e\u023f\5\u00a4S\2\u023f\u0240\5@!\2\u0240\u0243\7Q\2\2\u0241\u0242",
    "\7?\2\2\u0242\u0244\5z>\2\u0243\u0241\3\2\2\2\u0243\u0244\3\2\2\2\u0244",
    "\u0246\3\2\2\2\u0245\u0247\5t;\2\u0246\u0245\3\2\2\2\u0246\u0247\3\2",
    "\2\2\u0247\u025e\3\2\2\2\u0248\u0249\5@!\2\u0249\u024a\5\u00a4S\2\u024a",
    "\u024d\5@!\2\u024b\u024c\7?\2\2\u024c\u024e\5z>\2\u024d\u024b\3\2\2",
    "\2\u024d\u024e\3\2\2\2\u024e\u0250\3\2\2\2\u024f\u0251\5t;\2\u0250\u024f",
    "\3\2\2\2\u0250\u0251\3\2\2\2\u0251\u025e\3\2\2\2\u0252\u0253\5@!\2\u0253",
    "\u0254\7Q\2\2\u0254\u0255\5\u00a4S\2\u0255\u0258\5@!\2\u0256\u0257\7",
    "?\2\2\u0257\u0259\5z>\2\u0258\u0256\3\2\2\2\u0258\u0259\3\2\2\2\u0259",
    "\u025b\3\2\2\2\u025a\u025c\5t;\2\u025b\u025a\3\2\2\2\u025b\u025c\3\2",
    "\2\2\u025c\u025e\3\2\2\2\u025d\u023d\3\2\2\2\u025d\u0248\3\2\2\2\u025d",
    "\u0252\3\2\2\2\u025e?\3\2\2\2\u025f\u0261\5\u0098M\2\u0260\u0262\5R",
    "*\2\u0261\u0260\3\2\2\2\u0261\u0262\3\2\2\2\u0262\u0264\3\2\2\2\u0263",
    "\u0265\5d\63\2\u0264\u0263\3\2\2\2\u0264\u0265\3\2\2\2\u0265\u0268\3",
    "\2\2\2\u0266\u0267\7:\2\2\u0267\u0269\5\u0090I\2\u0268\u0266\3\2\2\2",
    "\u0268\u0269\3\2\2\2\u0269A\3\2\2\2\u026a\u026b\5D#\2\u026bC\3\2\2\2",
    "\u026c\u026d\b#\1\2\u026d\u026e\7\n\2\2\u026e\u026f\5D#\2\u026f\u0271",
    "\7\13\2\2\u0270\u0272\5t;\2\u0271\u0270\3\2\2\2\u0271\u0272\3\2\2\2",
    "\u0272\u0281\3\2\2\2\u0273\u0274\7G\2\2\u0274\u0275\7\n\2\2\u0275\u0276",
    "\5F$\2\u0276\u0278\7\13\2\2\u0277\u0279\5t;\2\u0278\u0277\3\2\2\2\u0278",
    "\u0279\3\2\2\2\u0279\u0281\3\2\2\2\u027a\u0281\5F$\2\u027b\u027c\7G",
    "\2\2\u027c\u027e\5H%\2\u027d\u027f\5t;\2\u027e\u027d\3\2\2\2\u027e\u027f",
    "\3\2\2\2\u027f\u0281\3\2\2\2\u0280\u026c\3\2\2\2\u0280\u0273\3\2\2\2",
    "\u0280\u027a\3\2\2\2\u0280\u027b\3\2\2\2\u0281\u0287\3\2\2\2\u0282\u0283",
    "\f\5\2\2\u0283\u0284\7\35\2\2\u0284\u0286\5D#\6\u0285\u0282\3\2\2\2",
    "\u0286\u0289\3\2\2\2\u0287\u0285\3\2\2\2\u0287\u0288\3\2\2\2\u0288E",
    "\3\2\2\2\u0289\u0287\3\2\2\2\u028a\u028b\b$\1\2\u028b\u028c\7\n\2\2",
    "\u028c\u028d\5F$\2\u028d\u028f\7\13\2\2\u028e\u0290\5t;\2\u028f\u028e",
    "\3\2\2\2\u028f\u0290\3\2\2\2\u0290\u0296\3\2\2\2\u0291\u0293\5H%\2\u0292",
    "\u0294\5t;\2\u0293\u0292\3\2\2\2\u0293\u0294\3\2\2\2\u0294\u0296\3\2",
    "\2\2\u0295\u028a\3\2\2\2\u0295\u0291\3\2\2\2\u0296\u029c\3\2\2\2\u0297",
    "\u0298\f\4\2\2\u0298\u0299\7\35\2\2\u0299\u029b\5F$\5\u029a\u0297\3",
    "\2\2\2\u029b\u029e\3\2\2\2\u029c\u029a\3\2\2\2\u029c\u029d\3\2\2\2\u029d",
    "G\3\2\2\2\u029e\u029c\3\2\2\2\u029f\u02a3\5J&\2\u02a0\u02a3\5L\'\2\u02a1",
    "\u02a3\5N(\2\u02a2\u029f\3\2\2\2\u02a2\u02a0\3\2\2\2\u02a2\u02a1\3\2",
    "\2\2\u02a3I\3\2\2\2\u02a4\u02a5\7A\2\2\u02a5\u02a8\5N(\2\u02a6\u02a7",
    "\7=\2\2\u02a7\u02a9\5N(\2\u02a8\u02a6\3\2\2\2\u02a8\u02a9\3\2\2\2\u02a9",
    "\u02b3\3\2\2\2\u02aa\u02ab\5N(\2\u02ab\u02ac\7=\2\2\u02ac\u02ad\5N(",
    "\2\u02ad\u02b3\3\2\2\2\u02ae\u02af\5N(\2\u02af\u02b0\7<\2\2\u02b0\u02b1",
    "\5N(\2\u02b1\u02b3\3\2\2\2\u02b2\u02a4\3\2\2\2\u02b2\u02aa\3\2\2\2\u02b2",
    "\u02ae\3\2\2\2\u02b3K\3\2\2\2\u02b4\u02b5\5N(\2\u02b5\u02b6\7\26\2\2",
    "\u02b6\u02b7\5\u00a0Q\2\u02b7\u02b8\7\30\2\2\u02b8M\3\2\2\2\u02b9\u02ba",
    "\5\u009cO\2\u02ba\u02bb\7\17\2\2\u02bb\u02bd\3\2\2\2\u02bc\u02b9\3\2",
    "\2\2\u02bc\u02bd\3\2\2\2\u02bd\u02be\3\2\2\2\u02be\u02bf\5P)\2\u02bf",
    "O\3\2\2\2\u02c0\u02c2\5\u0098M\2\u02c1\u02c3\5R*\2\u02c2\u02c1\3\2\2",
    "\2\u02c2\u02c3\3\2\2\2\u02c3Q\3\2\2\2\u02c4\u02c6\5T+\2\u02c5\u02c4",
    "\3\2\2\2\u02c6\u02c7\3\2\2\2\u02c7\u02c5\3\2\2\2\u02c7\u02c8\3\2\2\2",
    "\u02c8S\3\2\2\2\u02c9\u02cc\5`\61\2\u02ca\u02cc\5b\62\2\u02cb\u02c9",
    "\3\2\2\2\u02cb\u02ca\3\2\2\2\u02ccU\3\2\2\2\u02cd\u02cf\7G\2\2\u02ce",
    "\u02cd\3\2\2\2\u02ce\u02cf\3\2\2\2\u02cf\u02d0\3\2\2\2\u02d0\u02d2\5",
    "Z.\2\u02d1\u02d3\5t;\2\u02d2\u02d1\3\2\2\2\u02d2\u02d3\3\2\2\2\u02d3",
    "\u02d4\3\2\2\2\u02d4\u02d5\7\16\2\2\u02d5\u02d6\5X-\2\u02d6W\3\2\2\2",
    "\u02d7\u02d8\b-\1\2\u02d8\u02d9\7\n\2\2\u02d9\u02da\5X-\2\u02da\u02dc",
    "\7\13\2\2\u02db\u02dd\5t;\2\u02dc\u02db\3\2\2\2\u02dc\u02dd\3\2\2\2",
    "\u02dd\u02e3\3\2\2\2\u02de\u02e0\5Z.\2\u02df\u02e1\5t;\2\u02e0\u02df",
    "\3\2\2\2\u02e0\u02e1\3\2\2\2\u02e1\u02e3\3\2\2\2\u02e2\u02d7\3\2\2\2",
    "\u02e2\u02de\3\2\2\2\u02e3\u02e9\3\2\2\2\u02e4\u02e5\f\4\2\2\u02e5\u02e6",
    "\7\16\2\2\u02e6\u02e8\5X-\5\u02e7\u02e4\3\2\2\2\u02e8\u02eb\3\2\2\2",
    "\u02e9\u02e7\3\2\2\2\u02e9\u02ea\3\2\2\2\u02eaY\3\2\2\2\u02eb\u02e9",
    "\3\2\2\2\u02ec\u02f0\5J&\2\u02ed\u02f0\5\\/\2\u02ee\u02f0\5N(\2\u02ef",
    "\u02ec\3\2\2\2\u02ef\u02ed\3\2\2\2\u02ef\u02ee\3\2\2\2\u02f0[\3\2\2",
    "\2\u02f1\u02f9\5N(\2\u02f2\u02f3\7\26\2\2\u02f3\u02f4\5\u00a0Q\2\u02f4",
    "\u02f5\7\30\2\2\u02f5\u02fa\3\2\2\2\u02f6\u02fa\7\20\2\2\u02f7\u02fa",
    "\7\22\2\2\u02f8\u02fa\7\21\2\2\u02f9\u02f2\3\2\2\2\u02f9\u02f6\3\2\2",
    "\2\u02f9\u02f7\3\2\2\2\u02f9\u02f8\3\2\2\2\u02fa]\3\2\2\2\u02fb\u02fc",
    "\7\n\2\2\u02fc\u02fd\5^\60\2\u02fd\u02fe\7\13\2\2\u02fe\u030c\3\2\2",
    "\2\u02ff\u0300\7%\2\2\u0300\u0302\5:\36\2\u0301\u0303\5f\64\2\u0302",
    "\u0301\3\2\2\2\u0302\u0303\3\2\2\2\u0303\u0305\3\2\2\2\u0304\u0306\5",
    "p9\2\u0305\u0304\3\2\2\2\u0305\u0306\3\2\2\2\u0306\u0307\3\2\2\2\u0307",
    "\u0309\7\60\2\2\u0308\u030a\5n8\2\u0309\u0308\3\2\2\2\u0309\u030a\3",
    "\2\2\2\u030a\u030c\3\2\2\2\u030b\u02fb\3\2\2\2\u030b\u02ff\3\2\2\2\u030c",
    "_\3\2\2\2\u030d\u030f\7\36\2\2\u030e\u030d\3\2\2\2\u030e\u030f\3\2\2",
    "\2\u030f\u0310\3\2\2\2\u0310\u0311\7\f\2\2\u0311\u0312\5z>\2\u0312\u0313",
    "\7\r\2\2\u0313a\3\2\2\2\u0314\u0315\7\36\2\2\u0315\u0316\5~@\2\u0316",
    "c\3\2\2\2\u0317\u0318\7\36\2\2\u0318\u0319\7\'\2\2\u0319\u031a\7\t\2",
    "\2\u031a\u031b\5~@\2\u031be\3\2\2\2\u031c\u0326\7(\2\2\u031d\u0327\7",
    "\20\2\2\u031e\u0323\5v<\2\u031f\u0320\7\16\2\2\u0320\u0322\5v<\2\u0321",
    "\u031f\3\2\2\2\u0322\u0325\3\2\2\2\u0323\u0321\3\2\2\2\u0323\u0324\3",
    "\2\2\2\u0324\u0327\3\2\2\2\u0325\u0323\3\2\2\2\u0326\u031d\3\2\2\2\u0326",
    "\u031e\3\2\2\2\u0327\u0329\3\2\2\2\u0328\u032a\5h\65\2\u0329\u0328\3",
    "\2\2\2\u0329\u032a\3\2\2\2\u032a\u032c\3\2\2\2\u032b\u032d\5j\66\2\u032c",
    "\u032b\3\2\2\2\u032c\u032d\3\2\2\2\u032dg\3\2\2\2\u032e\u032f\7)\2\2",
    "\u032f\u0330\7*\2\2\u0330\u0335\5\u0086D\2\u0331\u0332\7\16\2\2\u0332",
    "\u0334\5\u0086D\2\u0333\u0331\3\2\2\2\u0334\u0337\3\2\2\2\u0335\u0333",
    "\3\2\2\2\u0335\u0336\3\2\2\2\u0336i\3\2\2\2\u0337\u0335\3\2\2\2\u0338",
    "\u0339\7+\2\2\u0339\u033a\5z>\2\u033ak\3\2\2\2\u033b\u033d\7,\2\2\u033c",
    "\u033e\5n8\2\u033d\u033c\3\2\2\2\u033d\u033e\3\2\2\2\u033e\u033f\3\2",
    "\2\2\u033f\u0340\7\62\2\2\u0340\u0362\5\u009aN\2\u0341\u0342\7.\2\2",
    "\u0342\u0345\5\u009aN\2\u0343\u0344\7\67\2\2\u0344\u0346\5n8\2\u0345",
    "\u0343\3\2\2\2\u0345\u0346\3\2\2\2\u0346\u0347\3\2\2\2\u0347\u0348\7",
    "?\2\2\u0348\u0349\5z>\2\u0349\u0362\3\2\2\2\u034a\u034b\7/\2\2\u034b",
    "\u034e\5\u009aN\2\u034c\u034d\7\67\2\2\u034d\u034f\5n8\2\u034e\u034c",
    "\3\2\2\2\u034e\u034f\3\2\2\2\u034f\u0350\3\2\2\2\u0350\u0351\7?\2\2",
    "\u0351\u0352\5z>\2\u0352\u0362\3\2\2\2\u0353\u0354\7,\2\2\u0354\u0355",
    "\7-\2\2\u0355\u0358\5\u009aN\2\u0356\u0357\7\67\2\2\u0357\u0359\5n8",
    "\2\u0358\u0356\3\2\2\2\u0358\u0359\3\2\2\2\u0359\u035a\3\2\2\2\u035a",
    "\u035b\7?\2\2\u035b\u035c\5z>\2\u035c\u0362\3\2\2\2\u035d\u035f\7\60",
    "\2\2\u035e\u0360\5n8\2\u035f\u035e\3\2\2\2\u035f\u0360\3\2\2\2\u0360",
    "\u0362\3\2\2\2\u0361\u033b\3\2\2\2\u0361\u0341\3\2\2\2\u0361\u034a\3",
    "\2\2\2\u0361\u0353\3\2\2\2\u0361\u035d\3\2\2\2\u0362m\3\2\2\2\u0363",
    "\u0364\7I\2\2\u0364\u0372\7\61\2\2\u0365\u0366\7I\2\2\u0366\u0367\7",
    "8\2\2\u0367\u0372\7\61\2\2\u0368\u0369\7\64\2\2\u0369\u0372\7\61\2\2",
    "\u036a\u036b\7\64\2\2\u036b\u036c\78\2\2\u036c\u0372\7\61\2\2\u036d",
    "\u036f\7\65\2\2\u036e\u036d\3\2\2\2\u036e\u036f\3\2\2\2\u036f\u0370",
    "\3\2\2\2\u0370\u0372\7\61\2\2\u0371\u0363\3\2\2\2\u0371\u0365\3\2\2",
    "\2\u0371\u0368\3\2\2\2\u0371\u036a\3\2\2\2\u0371\u036e\3\2\2\2\u0372",
    "o\3\2\2\2\u0373\u0375\7\63\2\2\u0374\u0376\5r:\2\u0375\u0374\3\2\2\2",
    "\u0375\u0376\3\2\2\2\u0376\u0377\3\2\2\2\u0377\u037b\7G\2\2\u0378\u037c",
    "\5\u00acW\2\u0379\u037a\7\3\2\2\u037a\u037c\7\61\2\2\u037b\u0378\3\2",
    "\2\2\u037b\u0379\3\2\2\2\u037c\u0382\3\2\2\2\u037d\u037e\7\63\2\2\u037e",
    "\u037f\7\66\2\2\u037f\u0380\7G\2\2\u0380\u0382\5\u00acW\2\u0381\u0373",
    "\3\2\2\2\u0381\u037d\3\2\2\2\u0382q\3\2\2\2\u0383\u0384\t\2\2\2\u0384",
    "s\3\2\2\2\u0385\u0386\7B\2\2\u0386\u0387\5\u00acW\2\u0387u\3\2\2\2\u0388",
    "\u0389\5x=\2\u0389\u038a\7:\2\2\u038a\u038b\5\u0094K\2\u038b\u038e\3",
    "\2\2\2\u038c\u038e\5\u0086D\2\u038d\u0388\3\2\2\2\u038d\u038c\3\2\2",
    "\2\u038ew\3\2\2\2\u038f\u0390\5|?\2\u0390y\3\2\2\2\u0391\u0392\5|?\2",
    "\u0392{\3\2\2\2\u0393\u0394\b?\1\2\u0394\u0395\7A\2\2\u0395\u039f\5",
    "|?\r\u0396\u0397\7\n\2\2\u0397\u0398\5|?\2\u0398\u0399\7\13\2\2\u0399",
    "\u039f\3\2\2\2\u039a\u039f\5\u0082B\2\u039b\u039f\5~@\2\u039c\u039f",
    "\5\u00a6T\2\u039d\u039f\5\u0086D\2\u039e\u0393\3\2\2\2\u039e\u0396\3",
    "\2\2\2\u039e\u039a\3\2\2\2\u039e\u039b\3\2\2\2\u039e\u039c\3\2\2\2\u039e",
    "\u039d\3\2\2\2\u039f\u03c6\3\2\2\2\u03a0\u03a4\f\f\2\2\u03a1\u03a5\7",
    "\20\2\2\u03a2\u03a5\7\24\2\2\u03a3\u03a5\7\25\2\2\u03a4\u03a1\3\2\2",
    "\2\u03a4\u03a2\3\2\2\2\u03a4\u03a3\3\2\2\2\u03a5\u03a6\3\2\2\2\u03a6",
    "\u03c5\5|?\r\u03a7\u03aa\f\13\2\2\u03a8\u03ab\7\21\2\2\u03a9\u03ab\7",
    "\23\2\2\u03aa\u03a8\3\2\2\2\u03aa\u03a9\3\2\2\2\u03ab\u03ac\3\2\2\2",
    "\u03ac\u03c5\5|?\f\u03ad\u03b2\f\n\2\2\u03ae\u03b3\7\31\2\2\u03af\u03b3",
    "\7\27\2\2\u03b0\u03b3\7\30\2\2\u03b1\u03b3\7\26\2\2\u03b2\u03ae\3\2",
    "\2\2\u03b2\u03af\3\2\2\2\u03b2\u03b0\3\2\2\2\u03b2\u03b1\3\2\2\2\u03b3",
    "\u03b4\3\2\2\2\u03b4\u03c5\5|?\13\u03b5\u03b8\f\t\2\2\u03b6\u03b9\7",
    "\32\2\2\u03b7\u03b9\7\33\2\2\u03b8\u03b6\3\2\2\2\u03b8\u03b7\3\2\2\2",
    "\u03b9\u03ba\3\2\2\2\u03ba\u03c5\5|?\n\u03bb\u03bc\f\7\2\2\u03bc\u03bd",
    "\7=\2\2\u03bd\u03c5\5|?\b\u03be\u03bf\f\6\2\2\u03bf\u03c0\7<\2\2\u03c0",
    "\u03c5\5|?\7\u03c1\u03c2\f\b\2\2\u03c2\u03c3\7>\2\2\u03c3\u03c5\5\u009e",
    "P\2\u03c4\u03a0\3\2\2\2\u03c4\u03a7\3\2\2\2\u03c4\u03ad\3\2\2\2\u03c4",
    "\u03b5\3\2\2\2\u03c4\u03bb\3\2\2\2\u03c4\u03be\3\2\2\2\u03c4\u03c1\3",
    "\2\2\2\u03c5\u03c8\3\2\2\2\u03c6\u03c4\3\2\2\2\u03c6\u03c7\3\2\2\2\u03c7",
    "}\3\2\2\2\u03c8\u03c6\3\2\2\2\u03c9\u03ca\5\u008cG\2\u03ca\u03cb\7\7",
    "\2\2\u03cb\u03cd\3\2\2\2\u03cc\u03c9\3\2\2\2\u03cc\u03cd\3\2\2\2\u03cd",
    "\u03ce\3\2\2\2\u03ce\u03cf\5\u008aF\2\u03cf\u03d1\7\n\2\2\u03d0\u03d2",
    "\5\u0080A\2\u03d1\u03d0\3\2\2\2\u03d1\u03d2\3\2\2\2\u03d2\u03d3\3\2",
    "\2\2\u03d3\u03d4\7\13\2\2\u03d4\177\3\2\2\2\u03d5\u03da\5x=\2\u03d6",
    "\u03d7\7\16\2\2\u03d7\u03d9\5x=\2\u03d8\u03d6\3\2\2\2\u03d9\u03dc\3",
    "\2\2\2\u03da\u03d8\3\2\2\2\u03da\u03db\3\2\2\2\u03db\u03df\3\2\2\2\u03dc",
    "\u03da\3\2\2\2\u03dd\u03df\7\20\2\2\u03de\u03d5\3\2\2\2\u03de\u03dd",
    "\3\2\2\2\u03df\u0081\3\2\2\2\u03e0\u03e4\5\u0084C\2\u03e1\u03e4\5\u0086",
    "D\2\u03e2\u03e4\5~@\2\u03e3\u03e0\3\2\2\2\u03e3\u03e1\3\2\2\2\u03e3",
    "\u03e2\3\2\2\2\u03e4\u03e5\3\2\2\2\u03e5\u03e6\7@\2\2\u03e6\u03e7\7",
    "F\2\2\u03e7\u0083\3\2\2\2\u03e8\u03ea\7\36\2\2\u03e9\u03e8\3\2\2\2\u03e9",
    "\u03ea\3\2\2\2\u03ea\u03eb\3\2\2\2\u03eb\u03f0\5\u009eP\2\u03ec\u03ed",
    "\7\f\2\2\u03ed\u03ee\5\u0088E\2\u03ee\u03ef\7\r\2\2\u03ef\u03f1\3\2",
    "\2\2\u03f0\u03ec\3\2\2\2\u03f0\u03f1\3\2\2\2\u03f1\u0085\3\2\2\2\u03f2",
    "\u03f4\7\36\2\2\u03f3\u03f2\3\2\2\2\u03f3\u03f4\3\2\2\2\u03f4\u03f5",
    "\3\2\2\2\u03f5\u03fa\5\u009eP\2\u03f6\u03f7\7\f\2\2\u03f7\u03f8\5\u0088",
    "E\2\u03f8\u03f9\7\r\2\2\u03f9\u03fb\3\2\2\2\u03fa\u03f6\3\2\2\2\u03fa",
    "\u03fb\3\2\2\2\u03fb\u0404\3\2\2\2\u03fc\u03fd\7\36\2\2\u03fd\u0402",
    "\5\u009eP\2\u03fe\u03ff\7\f\2\2\u03ff\u0400\5\u0088E\2\u0400\u0401\7",
    "\r\2\2\u0401\u0403\3\2\2\2\u0402\u03fe\3\2\2\2\u0402\u0403\3\2\2\2\u0403",
    "\u0405\3\2\2\2\u0404\u03fc\3\2\2\2\u0404\u0405\3\2\2\2\u0405\u0406\3",
    "\2\2\2\u0406\u0407\7\t\2\2\u0407\u0408\5\u0094K\2\u0408\u040b\3\2\2",
    "\2\u0409\u040b\5\u0094K\2\u040a\u03f3\3\2\2\2\u040a\u0409\3\2\2\2\u040b",
    "\u0087\3\2\2\2\u040c\u0413\7\3\2\2\u040d\u0410\7H\2\2\u040e\u040f\7",
    "\23\2\2\u040f\u0411\7\3\2\2\u0410\u040e\3\2\2\2\u0410\u0411\3\2\2\2",
    "\u0411\u0413\3\2\2\2\u0412\u040c\3\2\2\2\u0412\u040d\3\2\2\2\u0413\u0089",
    "\3\2\2\2\u0414\u0415\5\u009eP\2\u0415\u008b\3\2\2\2\u0416\u0417\5\u009e",
    "P\2\u0417\u008d\3\2\2\2\u0418\u0419\5\u009eP\2\u0419\u008f\3\2\2\2\u041a",
    "\u041b\5\u009eP\2\u041b\u0091\3\2\2\2\u041c\u0421\5\u009eP\2\u041d\u041e",
    "\7\t\2\2\u041e\u0420\5\u009eP\2\u041f\u041d\3\2\2\2\u0420\u0423\3\2",
    "\2\2\u0421\u041f\3\2\2\2\u0421\u0422\3\2\2\2\u0422\u0093\3\2\2\2\u0423",
    "\u0421\3\2\2\2\u0424\u0425\5\u009eP\2\u0425\u0095\3\2\2\2\u0426\u0427",
    "\5\u00c8e\2\u0427\u0097\3\2\2\2\u0428\u042a\7\36\2\2\u0429\u0428\3\2",
    "\2\2\u0429\u042a\3\2\2\2\u042a\u042b\3\2\2\2\u042b\u042c\5\u008eH\2",
    "\u042c\u0099\3\2\2\2\u042d\u042e\5\u0098M\2\u042e\u009b\3\2\2\2\u042f",
    "\u0430\5\u009eP\2\u0430\u009d\3\2\2\2\u0431\u0434\5\u00a8U\2\u0432\u0434",
    "\5\u00aaV\2\u0433\u0431\3\2\2\2\u0433\u0432\3\2\2\2\u0434\u009f\3\2",
    "\2\2\u0435\u0436\7\3\2\2\u0436\u0437\7\7\2\2\u0437\u043e\7\3\2\2\u0438",
    "\u0439\7\3\2\2\u0439\u043e\7\7\2\2\u043a\u043b\7\7\2\2\u043b\u043e\7",
    "\3\2\2\u043c\u043e\7\3\2\2\u043d\u0435\3\2\2\2\u043d\u0438\3\2\2\2\u043d",
    "\u043a\3\2\2\2\u043d\u043c\3\2\2\2\u043e\u00a1\3\2\2\2\u043f\u0440\t",
    "\3\2\2\u0440\u00a3\3\2\2\2\u0441\u0442\7O\2\2\u0442\u0443\7M\2\2\u0443",
    "\u0451\7K\2\2\u0444\u0445\7N\2\2\u0445\u0446\7M\2\2\u0446\u0451\7K\2",
    "\2\u0447\u0448\7P\2\2\u0448\u0449\7M\2\2\u0449\u0451\7K\2\2\u044a\u044b",
    "\7M\2\2\u044b\u0451\7K\2\2\u044c\u044e\7L\2\2\u044d\u044c\3\2\2\2\u044d",
    "\u044e\3\2\2\2\u044e\u044f\3\2\2\2\u044f\u0451\7K\2\2\u0450\u0441\3",
    "\2\2\2\u0450\u0444\3\2\2\2\u0450\u0447\3\2\2\2\u0450\u044a\3\2\2\2\u0450",
    "\u044d\3\2\2\2\u0451\u00a5\3\2\2\2\u0452\u045a\5\u00c6d\2\u0453\u045a",
    "\5\u00be`\2\u0454\u045a\5\u00c2b\2\u0455\u045a\5\u00c0a\2\u0456\u045a",
    "\5\u00c4c\2\u0457\u045a\5\u00acW\2\u0458\u045a\5\u00c8e\2\u0459\u0452",
    "\3\2\2\2\u0459\u0453\3\2\2\2\u0459\u0454\3\2\2\2\u0459\u0455\3\2\2\2",
    "\u0459\u0456\3\2\2\2\u0459\u0457\3\2\2\2\u0459\u0458\3\2\2\2\u045a\u00a7",
    "\3\2\2\2\u045b\u045c\t\4\2\2\u045c\u00a9\3\2\2\2\u045d\u045e\t\5\2\2",
    "\u045e\u00ab\3\2\2\2\u045f\u0461\5\u00aeX\2\u0460\u0462\5\u00b0Y\2\u0461",
    "\u0460\3\2\2\2\u0461\u0462\3\2\2\2\u0462\u0464\3\2\2\2\u0463\u0465\5",
    "\u00b2Z\2\u0464\u0463\3\2\2\2\u0464\u0465\3\2\2\2\u0465\u0467\3\2\2",
    "\2\u0466\u0468\5\u00b4[\2\u0467\u0466\3\2\2\2\u0467\u0468\3\2\2\2\u0468",
    "\u046a\3\2\2\2\u0469\u046b\5\u00b6\\\2\u046a\u0469\3\2\2\2\u046a\u046b",
    "\3\2\2\2\u046b\u046d\3\2\2\2\u046c\u046e\5\u00b8]\2\u046d\u046c\3\2",
    "\2\2\u046d\u046e\3\2\2\2\u046e\u0470\3\2\2\2\u046f\u0471\5\u00ba^\2",
    "\u0470\u046f\3\2\2\2\u0470\u0471\3\2\2\2\u0471\u0473\3\2\2\2\u0472\u0474",
    "\5\u00bc_\2\u0473\u0472\3\2\2\2\u0473\u0474\3\2\2\2\u0474\u04bc\3\2",
    "\2\2\u0475\u0477\5\u00b0Y\2\u0476\u0478\5\u00b2Z\2\u0477\u0476\3\2\2",
    "\2\u0477\u0478\3\2\2\2\u0478\u047a\3\2\2\2\u0479\u047b\5\u00b4[\2\u047a",
    "\u0479\3\2\2\2\u047a\u047b\3\2\2\2\u047b\u047d\3\2\2\2\u047c\u047e\5",
    "\u00b6\\\2\u047d\u047c\3\2\2\2\u047d\u047e\3\2\2\2\u047e\u0480\3\2\2",
    "\2\u047f\u0481\5\u00b8]\2\u0480\u047f\3\2\2\2\u0480\u0481\3\2\2\2\u0481",
    "\u0483\3\2\2\2\u0482\u0484\5\u00ba^\2\u0483\u0482\3\2\2\2\u0483\u0484",
    "\3\2\2\2\u0484\u0486\3\2\2\2\u0485\u0487\5\u00bc_\2\u0486\u0485\3\2",
    "\2\2\u0486\u0487\3\2\2\2\u0487\u04bc\3\2\2\2\u0488\u048a\5\u00b2Z\2",
    "\u0489\u048b\5\u00b4[\2\u048a\u0489\3\2\2\2\u048a\u048b\3\2\2\2\u048b",
    "\u048d\3\2\2\2\u048c\u048e\5\u00b6\\\2\u048d\u048c\3\2\2\2\u048d\u048e",
    "\3\2\2\2\u048e\u0490\3\2\2\2\u048f\u0491\5\u00b8]\2\u0490\u048f\3\2",
    "\2\2\u0490\u0491\3\2\2\2\u0491\u0493\3\2\2\2\u0492\u0494\5\u00ba^\2",
    "\u0493\u0492\3\2\2\2\u0493\u0494\3\2\2\2\u0494\u0496\3\2\2\2\u0495\u0497",
    "\5\u00bc_\2\u0496\u0495\3\2\2\2\u0496\u0497\3\2\2\2\u0497\u04bc\3\2",
    "\2\2\u0498\u049a\5\u00b4[\2\u0499\u049b\5\u00b6\\\2\u049a\u0499\3\2",
    "\2\2\u049a\u049b\3\2\2\2\u049b\u049d\3\2\2\2\u049c\u049e\5\u00b8]\2",
    "\u049d\u049c\3\2\2\2\u049d\u049e\3\2\2\2\u049e\u04a0\3\2\2\2\u049f\u04a1",
    "\5\u00ba^\2\u04a0\u049f\3\2\2\2\u04a0\u04a1\3\2\2\2\u04a1\u04a3\3\2",
    "\2\2\u04a2\u04a4\5\u00bc_\2\u04a3\u04a2\3\2\2\2\u04a3\u04a4\3\2\2\2",
    "\u04a4\u04bc\3\2\2\2\u04a5\u04a7\5\u00b6\\\2\u04a6\u04a8\5\u00b8]\2",
    "\u04a7\u04a6\3\2\2\2\u04a7\u04a8\3\2\2\2\u04a8\u04aa\3\2\2\2\u04a9\u04ab",
    "\5\u00ba^\2\u04aa\u04a9\3\2\2\2\u04aa\u04ab\3\2\2\2\u04ab\u04ad\3\2",
    "\2\2\u04ac\u04ae\5\u00bc_\2\u04ad\u04ac\3\2\2\2\u04ad\u04ae\3\2\2\2",
    "\u04ae\u04bc\3\2\2\2\u04af\u04b1\5\u00b8]\2\u04b0\u04b2\5\u00ba^\2\u04b1",
    "\u04b0\3\2\2\2\u04b1\u04b2\3\2\2\2\u04b2\u04b4\3\2\2\2\u04b3\u04b5\5",
    "\u00bc_\2\u04b4\u04b3\3\2\2\2\u04b4\u04b5\3\2\2\2\u04b5\u04bc\3\2\2",
    "\2\u04b6\u04b8\5\u00ba^\2\u04b7\u04b9\5\u00bc_\2\u04b8\u04b7\3\2\2\2",
    "\u04b8\u04b9\3\2\2\2\u04b9\u04bc\3\2\2\2\u04ba\u04bc\5\u00bc_\2\u04bb",
    "\u045f\3\2\2\2\u04bb\u0475\3\2\2\2\u04bb\u0488\3\2\2\2\u04bb\u0498\3",
    "\2\2\2\u04bb\u04a5\3\2\2\2\u04bb\u04af\3\2\2\2\u04bb\u04b6\3\2\2\2\u04bb",
    "\u04ba\3\2\2\2\u04bc\u00ad\3\2\2\2\u04bd\u04be\7\3\2\2\u04be\u04bf\7",
    "R\2\2\u04bf\u00af\3\2\2\2\u04c0\u04c1\7\3\2\2\u04c1\u04c2\7S\2\2\u04c2",
    "\u00b1\3\2\2\2\u04c3\u04c4\7\3\2\2\u04c4\u04c5\7T\2\2\u04c5\u00b3\3",
    "\2\2\2\u04c6\u04c7\7\3\2\2\u04c7\u04c8\7U\2\2\u04c8\u00b5\3\2\2\2\u04c9",
    "\u04ca\7\3\2\2\u04ca\u04cb\7V\2\2\u04cb\u00b7\3\2\2\2\u04cc\u04cd\7",
    "\3\2\2\u04cd\u04ce\7W\2\2\u04ce\u00b9\3\2\2\2\u04cf\u04d0\7\3\2\2\u04d0",
    "\u04d1\7X\2\2\u04d1\u00bb\3\2\2\2\u04d2\u04d3\7\3\2\2\u04d3\u04d4\7",
    "Y\2\2\u04d4\u00bd\3\2\2\2\u04d5\u04d7\t\6\2\2\u04d6\u04d5\3\2\2\2\u04d6",
    "\u04d7\3\2\2\2\u04d7\u04d8\3\2\2\2\u04d8\u04d9\7\6\2\2\u04d9\u00bf\3",
    "\2\2\2\u04da\u04dc\t\6\2\2\u04db\u04da\3\2\2\2\u04db\u04dc\3\2\2\2\u04dc",
    "\u04dd\3\2\2\2\u04dd\u04de\7\4\2\2\u04de\u00c1\3\2\2\2\u04df\u04e1\t",
    "\6\2\2\u04e0\u04df\3\2\2\2\u04e0\u04e1\3\2\2\2\u04e1\u04e2\3\2\2\2\u04e2",
    "\u04e3\7\5\2\2\u04e3\u00c3\3\2\2\2\u04e4\u04e6\t\6\2\2\u04e5\u04e4\3",
    "\2\2\2\u04e5\u04e6\3\2\2\2\u04e6\u04e7\3\2\2\2\u04e7\u04e8\7\3\2\2\u04e8",
    "\u00c5\3\2\2\2\u04e9\u04ea\t\7\2\2\u04ea\u00c7\3\2\2\2\u04eb\u04ec\7",
    "e\2\2\u04ec\u00c9\3\2\2\2\u00ac\u00d1\u00d3\u00dc\u00e5\u00e9\u00ed",
    "\u00f2\u00f7\u00fb\u00ff\u0108\u0111\u0115\u011b\u011f\u0123\u0125\u0129",
    "\u012d\u0134\u0143\u014a\u0151\u0160\u0167\u016e\u017d\u0184\u0188\u019e",
    "\u01a9\u01b5\u01ba\u01c6\u01cb\u01d0\u01d7\u01e2\u01e9\u01ee\u01f2\u01f6",
    "\u01fc\u0208\u020f\u0218\u021f\u0225\u0228\u0231\u0235\u0238\u023b\u0243",
    "\u0246\u024d\u0250\u0258\u025b\u025d\u0261\u0264\u0268\u0271\u0278\u027e",
    "\u0280\u0287\u028f\u0293\u0295\u029c\u02a2\u02a8\u02b2\u02bc\u02c2\u02c7",
    "\u02cb\u02ce\u02d2\u02dc\u02e0\u02e2\u02e9\u02ef\u02f9\u0302\u0305\u0309",
    "\u030b\u030e\u0323\u0326\u0329\u032c\u0335\u033d\u0345\u034e\u0358\u035f",
    "\u0361\u036e\u0371\u0375\u037b\u0381\u038d\u039e\u03a4\u03aa\u03b2\u03b8",
    "\u03c4\u03c6\u03cc\u03d1\u03da\u03de\u03e3\u03e9\u03f0\u03f3\u03fa\u0402",
    "\u0404\u040a\u0410\u0412\u0421\u0429\u0433\u043d\u044d\u0450\u0459\u0461",
    "\u0464\u0467\u046a\u046d\u0470\u0473\u0477\u047a\u047d\u0480\u0483\u0486",
    "\u048a\u048d\u0490\u0493\u0496\u049a\u049d\u04a0\u04a3\u04a7\u04aa\u04ad",
    "\u04b1\u04b4\u04b8\u04bb\u04d6\u04db\u04e0\u04e5"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ 'null', 'null', 'null', 'null', 'null', "':'", "';'", 
                     "'.'", "'('", "')'", "'['", "']'", "','", "'='", "'*'", 
                     "'+'", "'?'", "'-'", "'/'", "'%'", "'<'", "'<='", "'>'", 
                     "'>='", "'=='", "'!='", "'@'", "'->'", "'#'" ];

var symbolicNames = [ 'null', "INT_LITERAL", "LONG_LITERAL", "FLOAT_LITERAL", 
                      "DOUBLE_LITERAL", "COL", "SCOL", "DOT", "OPEN_PAR", 
                      "CLOSE_PAR", "OPEN_SQARE_BRACKETS", "CLOASE_SQARE_BRACKETS", 
                      "COMMA", "ASSIGN", "STAR", "PLUS", "QUESTION", "MINUS", 
                      "DIV", "MOD", "LT", "LT_EQ", "GT", "GT_EQ", "EQ", 
                      "NOT_EQ", "AT_SYMBOL", "FOLLOWED_BY", "HASH", "STREAM", 
                      "DEFINE", "FUNCTION", "TRIGGER", "TABLE", "PLAN", 
                      "FROM", "PARTITION", "WINDOW", "SELECT", "GROUP", 
                      "BY", "HAVING", "INSERT", "OVERWRITE", "DELETE", "UPDATE", 
                      "RETURN", "EVENTS", "INTO", "OUTPUT", "EXPIRED", "CURRENT", 
                      "SNAPSHOT", "FOR", "RAW", "OF", "AS", "AT", "OR", 
                      "AND", "IN", "ON", "IS", "NOT", "WITHIN", "WITH", 
                      "BEGIN", "END", "NULL", "EVERY", "LAST", "ALL", "FIRST", 
                      "JOIN", "INNER", "OUTER", "RIGHT", "LEFT", "FULL", 
                      "UNIDIRECTIONAL", "YEARS", "MONTHS", "WEEKS", "DAYS", 
                      "HOURS", "MINUTES", "SECONDS", "MILLISECONDS", "FALSE", 
                      "TRUE", "STRING", "INT", "LONG", "FLOAT", "DOUBLE", 
                      "BOOL", "OBJECT", "ID_QUOTES", "ID", "STRING_LITERAL", 
                      "SINGLE_LINE_COMMENT", "MULTILINE_COMMENT", "SPACES", 
                      "UNEXPECTED_CHAR", "SCRIPT" ];

var ruleNames =  [ "parse", "error", "execution_plan", "execution_element", 
                   "definition_stream_final", "definition_stream", "definition_table_final", 
                   "definition_table", "definition_window_final", "definition_window", 
                   "definition_function_final", "definition_function", "function_name", 
                   "language_name", "function_body", "definition_trigger_final", 
                   "definition_trigger", "trigger_name", "annotation", "plan_annotation", 
                   "annotation_element", "partition", "partition_final", 
                   "partition_with_stream", "condition_ranges", "condition_range", 
                   "query_final", "query", "query_input", "standard_stream", 
                   "join_stream", "join_source", "pattern_stream", "every_pattern_source_chain", 
                   "pattern_source_chain", "pattern_source", "logical_stateful_source", 
                   "pattern_collection_stateful_source", "standard_stateful_source", 
                   "basic_source", "basic_source_stream_handlers", "basic_source_stream_handler", 
                   "sequence_stream", "sequence_source_chain", "sequence_source", 
                   "sequence_collection_stateful_source", "anonymous_stream", 
                   "filter", "stream_function", "window", "query_section", 
                   "group_by", "having", "query_output", "output_event_type", 
                   "output_rate", "output_rate_type", "within_time", "output_attribute", 
                   "attribute", "expression", "math_operation", "function_operation", 
                   "attribute_list", "null_check", "stream_reference", "attribute_reference", 
                   "attribute_index", "function_id", "function_namespace", 
                   "stream_id", "stream_alias", "property_name", "attribute_name", 
                   "property_value", "source", "target", "event", "name", 
                   "collect", "attribute_type", "join", "constant_value", 
                   "id", "keyword", "time_value", "year_value", "month_value", 
                   "week_value", "day_value", "hour_value", "minute_value", 
                   "second_value", "millisecond_value", "signed_double_value", 
                   "signed_long_value", "signed_float_value", "signed_int_value", 
                   "bool_value", "string_value" ];

function SiddhiQLParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

SiddhiQLParser.prototype = Object.create(antlr4.Parser.prototype);
SiddhiQLParser.prototype.constructor = SiddhiQLParser;

Object.defineProperty(SiddhiQLParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

SiddhiQLParser.EOF = antlr4.Token.EOF;
SiddhiQLParser.INT_LITERAL = 1;
SiddhiQLParser.LONG_LITERAL = 2;
SiddhiQLParser.FLOAT_LITERAL = 3;
SiddhiQLParser.DOUBLE_LITERAL = 4;
SiddhiQLParser.COL = 5;
SiddhiQLParser.SCOL = 6;
SiddhiQLParser.DOT = 7;
SiddhiQLParser.OPEN_PAR = 8;
SiddhiQLParser.CLOSE_PAR = 9;
SiddhiQLParser.OPEN_SQARE_BRACKETS = 10;
SiddhiQLParser.CLOASE_SQARE_BRACKETS = 11;
SiddhiQLParser.COMMA = 12;
SiddhiQLParser.ASSIGN = 13;
SiddhiQLParser.STAR = 14;
SiddhiQLParser.PLUS = 15;
SiddhiQLParser.QUESTION = 16;
SiddhiQLParser.MINUS = 17;
SiddhiQLParser.DIV = 18;
SiddhiQLParser.MOD = 19;
SiddhiQLParser.LT = 20;
SiddhiQLParser.LT_EQ = 21;
SiddhiQLParser.GT = 22;
SiddhiQLParser.GT_EQ = 23;
SiddhiQLParser.EQ = 24;
SiddhiQLParser.NOT_EQ = 25;
SiddhiQLParser.AT_SYMBOL = 26;
SiddhiQLParser.FOLLOWED_BY = 27;
SiddhiQLParser.HASH = 28;
SiddhiQLParser.STREAM = 29;
SiddhiQLParser.DEFINE = 30;
SiddhiQLParser.FUNCTION = 31;
SiddhiQLParser.TRIGGER = 32;
SiddhiQLParser.TABLE = 33;
SiddhiQLParser.PLAN = 34;
SiddhiQLParser.FROM = 35;
SiddhiQLParser.PARTITION = 36;
SiddhiQLParser.WINDOW = 37;
SiddhiQLParser.SELECT = 38;
SiddhiQLParser.GROUP = 39;
SiddhiQLParser.BY = 40;
SiddhiQLParser.HAVING = 41;
SiddhiQLParser.INSERT = 42;
SiddhiQLParser.OVERWRITE = 43;
SiddhiQLParser.DELETE = 44;
SiddhiQLParser.UPDATE = 45;
SiddhiQLParser.RETURN = 46;
SiddhiQLParser.EVENTS = 47;
SiddhiQLParser.INTO = 48;
SiddhiQLParser.OUTPUT = 49;
SiddhiQLParser.EXPIRED = 50;
SiddhiQLParser.CURRENT = 51;
SiddhiQLParser.SNAPSHOT = 52;
SiddhiQLParser.FOR = 53;
SiddhiQLParser.RAW = 54;
SiddhiQLParser.OF = 55;
SiddhiQLParser.AS = 56;
SiddhiQLParser.AT = 57;
SiddhiQLParser.OR = 58;
SiddhiQLParser.AND = 59;
SiddhiQLParser.IN = 60;
SiddhiQLParser.ON = 61;
SiddhiQLParser.IS = 62;
SiddhiQLParser.NOT = 63;
SiddhiQLParser.WITHIN = 64;
SiddhiQLParser.WITH = 65;
SiddhiQLParser.BEGIN = 66;
SiddhiQLParser.END = 67;
SiddhiQLParser.NULL = 68;
SiddhiQLParser.EVERY = 69;
SiddhiQLParser.LAST = 70;
SiddhiQLParser.ALL = 71;
SiddhiQLParser.FIRST = 72;
SiddhiQLParser.JOIN = 73;
SiddhiQLParser.INNER = 74;
SiddhiQLParser.OUTER = 75;
SiddhiQLParser.RIGHT = 76;
SiddhiQLParser.LEFT = 77;
SiddhiQLParser.FULL = 78;
SiddhiQLParser.UNIDIRECTIONAL = 79;
SiddhiQLParser.YEARS = 80;
SiddhiQLParser.MONTHS = 81;
SiddhiQLParser.WEEKS = 82;
SiddhiQLParser.DAYS = 83;
SiddhiQLParser.HOURS = 84;
SiddhiQLParser.MINUTES = 85;
SiddhiQLParser.SECONDS = 86;
SiddhiQLParser.MILLISECONDS = 87;
SiddhiQLParser.FALSE = 88;
SiddhiQLParser.TRUE = 89;
SiddhiQLParser.STRING = 90;
SiddhiQLParser.INT = 91;
SiddhiQLParser.LONG = 92;
SiddhiQLParser.FLOAT = 93;
SiddhiQLParser.DOUBLE = 94;
SiddhiQLParser.BOOL = 95;
SiddhiQLParser.OBJECT = 96;
SiddhiQLParser.ID_QUOTES = 97;
SiddhiQLParser.ID = 98;
SiddhiQLParser.STRING_LITERAL = 99;
SiddhiQLParser.SINGLE_LINE_COMMENT = 100;
SiddhiQLParser.MULTILINE_COMMENT = 101;
SiddhiQLParser.SPACES = 102;
SiddhiQLParser.UNEXPECTED_CHAR = 103;
SiddhiQLParser.SCRIPT = 104;

SiddhiQLParser.RULE_parse = 0;
SiddhiQLParser.RULE_error = 1;
SiddhiQLParser.RULE_execution_plan = 2;
SiddhiQLParser.RULE_execution_element = 3;
SiddhiQLParser.RULE_definition_stream_final = 4;
SiddhiQLParser.RULE_definition_stream = 5;
SiddhiQLParser.RULE_definition_table_final = 6;
SiddhiQLParser.RULE_definition_table = 7;
SiddhiQLParser.RULE_definition_window_final = 8;
SiddhiQLParser.RULE_definition_window = 9;
SiddhiQLParser.RULE_definition_function_final = 10;
SiddhiQLParser.RULE_definition_function = 11;
SiddhiQLParser.RULE_function_name = 12;
SiddhiQLParser.RULE_language_name = 13;
SiddhiQLParser.RULE_function_body = 14;
SiddhiQLParser.RULE_definition_trigger_final = 15;
SiddhiQLParser.RULE_definition_trigger = 16;
SiddhiQLParser.RULE_trigger_name = 17;
SiddhiQLParser.RULE_annotation = 18;
SiddhiQLParser.RULE_plan_annotation = 19;
SiddhiQLParser.RULE_annotation_element = 20;
SiddhiQLParser.RULE_partition = 21;
SiddhiQLParser.RULE_partition_final = 22;
SiddhiQLParser.RULE_partition_with_stream = 23;
SiddhiQLParser.RULE_condition_ranges = 24;
SiddhiQLParser.RULE_condition_range = 25;
SiddhiQLParser.RULE_query_final = 26;
SiddhiQLParser.RULE_query = 27;
SiddhiQLParser.RULE_query_input = 28;
SiddhiQLParser.RULE_standard_stream = 29;
SiddhiQLParser.RULE_join_stream = 30;
SiddhiQLParser.RULE_join_source = 31;
SiddhiQLParser.RULE_pattern_stream = 32;
SiddhiQLParser.RULE_every_pattern_source_chain = 33;
SiddhiQLParser.RULE_pattern_source_chain = 34;
SiddhiQLParser.RULE_pattern_source = 35;
SiddhiQLParser.RULE_logical_stateful_source = 36;
SiddhiQLParser.RULE_pattern_collection_stateful_source = 37;
SiddhiQLParser.RULE_standard_stateful_source = 38;
SiddhiQLParser.RULE_basic_source = 39;
SiddhiQLParser.RULE_basic_source_stream_handlers = 40;
SiddhiQLParser.RULE_basic_source_stream_handler = 41;
SiddhiQLParser.RULE_sequence_stream = 42;
SiddhiQLParser.RULE_sequence_source_chain = 43;
SiddhiQLParser.RULE_sequence_source = 44;
SiddhiQLParser.RULE_sequence_collection_stateful_source = 45;
SiddhiQLParser.RULE_anonymous_stream = 46;
SiddhiQLParser.RULE_filter = 47;
SiddhiQLParser.RULE_stream_function = 48;
SiddhiQLParser.RULE_window = 49;
SiddhiQLParser.RULE_query_section = 50;
SiddhiQLParser.RULE_group_by = 51;
SiddhiQLParser.RULE_having = 52;
SiddhiQLParser.RULE_query_output = 53;
SiddhiQLParser.RULE_output_event_type = 54;
SiddhiQLParser.RULE_output_rate = 55;
SiddhiQLParser.RULE_output_rate_type = 56;
SiddhiQLParser.RULE_within_time = 57;
SiddhiQLParser.RULE_output_attribute = 58;
SiddhiQLParser.RULE_attribute = 59;
SiddhiQLParser.RULE_expression = 60;
SiddhiQLParser.RULE_math_operation = 61;
SiddhiQLParser.RULE_function_operation = 62;
SiddhiQLParser.RULE_attribute_list = 63;
SiddhiQLParser.RULE_null_check = 64;
SiddhiQLParser.RULE_stream_reference = 65;
SiddhiQLParser.RULE_attribute_reference = 66;
SiddhiQLParser.RULE_attribute_index = 67;
SiddhiQLParser.RULE_function_id = 68;
SiddhiQLParser.RULE_function_namespace = 69;
SiddhiQLParser.RULE_stream_id = 70;
SiddhiQLParser.RULE_stream_alias = 71;
SiddhiQLParser.RULE_property_name = 72;
SiddhiQLParser.RULE_attribute_name = 73;
SiddhiQLParser.RULE_property_value = 74;
SiddhiQLParser.RULE_source = 75;
SiddhiQLParser.RULE_target = 76;
SiddhiQLParser.RULE_event = 77;
SiddhiQLParser.RULE_name = 78;
SiddhiQLParser.RULE_collect = 79;
SiddhiQLParser.RULE_attribute_type = 80;
SiddhiQLParser.RULE_join = 81;
SiddhiQLParser.RULE_constant_value = 82;
SiddhiQLParser.RULE_id = 83;
SiddhiQLParser.RULE_keyword = 84;
SiddhiQLParser.RULE_time_value = 85;
SiddhiQLParser.RULE_year_value = 86;
SiddhiQLParser.RULE_month_value = 87;
SiddhiQLParser.RULE_week_value = 88;
SiddhiQLParser.RULE_day_value = 89;
SiddhiQLParser.RULE_hour_value = 90;
SiddhiQLParser.RULE_minute_value = 91;
SiddhiQLParser.RULE_second_value = 92;
SiddhiQLParser.RULE_millisecond_value = 93;
SiddhiQLParser.RULE_signed_double_value = 94;
SiddhiQLParser.RULE_signed_long_value = 95;
SiddhiQLParser.RULE_signed_float_value = 96;
SiddhiQLParser.RULE_signed_int_value = 97;
SiddhiQLParser.RULE_bool_value = 98;
SiddhiQLParser.RULE_string_value = 99;

function ParseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_parse;
    return this;
}

ParseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParseContext.prototype.constructor = ParseContext;

ParseContext.prototype.execution_plan = function() {
    return this.getTypedRuleContext(Execution_planContext,0);
};

ParseContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

ParseContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterParse(this);
	}
};

ParseContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitParse(this);
	}
};




SiddhiQLParser.ParseContext = ParseContext;

SiddhiQLParser.prototype.parse = function() {

    var localctx = new ParseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, SiddhiQLParser.RULE_parse);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 200;
        this.execution_plan();
        this.state = 201;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ErrorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_error;
    return this;
}

ErrorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ErrorContext.prototype.constructor = ErrorContext;

ErrorContext.prototype.UNEXPECTED_CHAR = function() {
    return this.getToken(SiddhiQLParser.UNEXPECTED_CHAR, 0);
};

ErrorContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterError(this);
	}
};

ErrorContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitError(this);
	}
};




SiddhiQLParser.ErrorContext = ErrorContext;

SiddhiQLParser.prototype.error = function() {

    var localctx = new ErrorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, SiddhiQLParser.RULE_error);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 203;
        this.match(SiddhiQLParser.UNEXPECTED_CHAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Execution_planContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_execution_plan;
    return this;
}

Execution_planContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Execution_planContext.prototype.constructor = Execution_planContext;

Execution_planContext.prototype.plan_annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Plan_annotationContext);
    } else {
        return this.getTypedRuleContext(Plan_annotationContext,i);
    }
};

Execution_planContext.prototype.error = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext,i);
    }
};

Execution_planContext.prototype.definition_stream = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_streamContext);
    } else {
        return this.getTypedRuleContext(Definition_streamContext,i);
    }
};

Execution_planContext.prototype.definition_table = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_tableContext);
    } else {
        return this.getTypedRuleContext(Definition_tableContext,i);
    }
};

Execution_planContext.prototype.definition_trigger = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_triggerContext);
    } else {
        return this.getTypedRuleContext(Definition_triggerContext,i);
    }
};

Execution_planContext.prototype.definition_function = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_functionContext);
    } else {
        return this.getTypedRuleContext(Definition_functionContext,i);
    }
};

Execution_planContext.prototype.definition_window = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_windowContext);
    } else {
        return this.getTypedRuleContext(Definition_windowContext,i);
    }
};

Execution_planContext.prototype.execution_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Execution_elementContext);
    } else {
        return this.getTypedRuleContext(Execution_elementContext,i);
    }
};

Execution_planContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExecution_plan(this);
	}
};

Execution_planContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExecution_plan(this);
	}
};




SiddhiQLParser.Execution_planContext = Execution_planContext;

SiddhiQLParser.prototype.execution_plan = function() {

    var localctx = new Execution_planContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, SiddhiQLParser.RULE_execution_plan);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 209;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,1,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 207;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT_SYMBOL:
                    this.state = 205;
                    this.plan_annotation();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 206;
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 211;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,1,this._ctx);
        }

        this.state = 291;
        var la_ = this._interp.adaptivePredict(this._input,16,this._ctx);
        switch(la_) {
        case 1:
            this.state = 218;
            var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);
            switch(la_) {
            case 1:
                this.state = 212;
                this.definition_stream();
                break;

            case 2:
                this.state = 213;
                this.definition_table();
                break;

            case 3:
                this.state = 214;
                this.definition_trigger();
                break;

            case 4:
                this.state = 215;
                this.definition_function();
                break;

            case 5:
                this.state = 216;
                this.definition_window();
                break;

            case 6:
                this.state = 217;
                this.error();
                break;

            }
            this.state = 231;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,4,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 220;
                    this.match(SiddhiQLParser.SCOL);
                    this.state = 227;
                    var la_ = this._interp.adaptivePredict(this._input,3,this._ctx);
                    switch(la_) {
                    case 1:
                        this.state = 221;
                        this.definition_stream();
                        break;

                    case 2:
                        this.state = 222;
                        this.definition_table();
                        break;

                    case 3:
                        this.state = 223;
                        this.definition_trigger();
                        break;

                    case 4:
                        this.state = 224;
                        this.definition_function();
                        break;

                    case 5:
                        this.state = 225;
                        this.definition_window();
                        break;

                    case 6:
                        this.state = 226;
                        this.error();
                        break;

                    } 
                }
                this.state = 233;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,4,this._ctx);
            }

            this.state = 235;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SCOL) {
                this.state = 234;
                this.match(SiddhiQLParser.SCOL);
            }

            break;

        case 2:
            break;

        case 3:
            this.state = 240;
            switch(this._input.LA(1)) {
            case SiddhiQLParser.AT_SYMBOL:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
                this.state = 238;
                this.execution_element();
                break;
            case SiddhiQLParser.UNEXPECTED_CHAR:
                this.state = 239;
                this.error();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 249;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,8,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 242;
                    this.match(SiddhiQLParser.SCOL);
                    this.state = 245;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.AT_SYMBOL:
                    case SiddhiQLParser.FROM:
                    case SiddhiQLParser.PARTITION:
                        this.state = 243;
                        this.execution_element();
                        break;
                    case SiddhiQLParser.UNEXPECTED_CHAR:
                        this.state = 244;
                        this.error();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    } 
                }
                this.state = 251;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,8,this._ctx);
            }

            this.state = 253;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SCOL) {
                this.state = 252;
                this.match(SiddhiQLParser.SCOL);
            }

            break;

        case 4:
            break;

        case 5:
            this.state = 262;
            var la_ = this._interp.adaptivePredict(this._input,10,this._ctx);
            switch(la_) {
            case 1:
                this.state = 256;
                this.definition_stream();
                break;

            case 2:
                this.state = 257;
                this.definition_table();
                break;

            case 3:
                this.state = 258;
                this.definition_trigger();
                break;

            case 4:
                this.state = 259;
                this.definition_function();
                break;

            case 5:
                this.state = 260;
                this.definition_window();
                break;

            case 6:
                this.state = 261;
                this.error();
                break;

            }
            this.state = 275;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,12,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 264;
                    this.match(SiddhiQLParser.SCOL);
                    this.state = 271;
                    var la_ = this._interp.adaptivePredict(this._input,11,this._ctx);
                    switch(la_) {
                    case 1:
                        this.state = 265;
                        this.definition_stream();
                        break;

                    case 2:
                        this.state = 266;
                        this.definition_table();
                        break;

                    case 3:
                        this.state = 267;
                        this.definition_trigger();
                        break;

                    case 4:
                        this.state = 268;
                        this.definition_function();
                        break;

                    case 5:
                        this.state = 269;
                        this.definition_window();
                        break;

                    case 6:
                        this.state = 270;
                        this.error();
                        break;

                    } 
                }
                this.state = 277;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,12,this._ctx);
            }

            this.state = 285;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,14,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 278;
                    this.match(SiddhiQLParser.SCOL);
                    this.state = 281;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.AT_SYMBOL:
                    case SiddhiQLParser.FROM:
                    case SiddhiQLParser.PARTITION:
                        this.state = 279;
                        this.execution_element();
                        break;
                    case SiddhiQLParser.UNEXPECTED_CHAR:
                        this.state = 280;
                        this.error();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    } 
                }
                this.state = 287;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,14,this._ctx);
            }

            this.state = 289;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SCOL) {
                this.state = 288;
                this.match(SiddhiQLParser.SCOL);
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Execution_elementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_execution_element;
    return this;
}

Execution_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Execution_elementContext.prototype.constructor = Execution_elementContext;

Execution_elementContext.prototype.query = function() {
    return this.getTypedRuleContext(QueryContext,0);
};

Execution_elementContext.prototype.partition = function() {
    return this.getTypedRuleContext(PartitionContext,0);
};

Execution_elementContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExecution_element(this);
	}
};

Execution_elementContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExecution_element(this);
	}
};




SiddhiQLParser.Execution_elementContext = Execution_elementContext;

SiddhiQLParser.prototype.execution_element = function() {

    var localctx = new Execution_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, SiddhiQLParser.RULE_execution_element);
    try {
        this.state = 295;
        var la_ = this._interp.adaptivePredict(this._input,17,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 293;
            this.query();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 294;
            this.partition();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_stream_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream_final;
    return this;
}

Definition_stream_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_stream_finalContext.prototype.constructor = Definition_stream_finalContext;

Definition_stream_finalContext.prototype.definition_stream = function() {
    return this.getTypedRuleContext(Definition_streamContext,0);
};

Definition_stream_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_stream_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_stream_final(this);
	}
};

Definition_stream_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_stream_final(this);
	}
};




SiddhiQLParser.Definition_stream_finalContext = Definition_stream_finalContext;

SiddhiQLParser.prototype.definition_stream_final = function() {

    var localctx = new Definition_stream_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, SiddhiQLParser.RULE_definition_stream_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 297;
        this.definition_stream();
        this.state = 299;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 298;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 301;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream;
    return this;
}

Definition_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_streamContext.prototype.constructor = Definition_streamContext;

Definition_streamContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_streamContext.prototype.STREAM = function() {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

Definition_streamContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_streamContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_streamContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_streamContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_stream(this);
	}
};

Definition_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_stream(this);
	}
};




SiddhiQLParser.Definition_streamContext = Definition_streamContext;

SiddhiQLParser.prototype.definition_stream = function() {

    var localctx = new Definition_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, SiddhiQLParser.RULE_definition_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 306;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 303;
            this.annotation();
            this.state = 308;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 309;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 310;
        this.match(SiddhiQLParser.STREAM);
        this.state = 311;
        this.source();
        this.state = 312;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 313;
        this.attribute_name();
        this.state = 314;
        this.attribute_type();
        this.state = 321;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 315;
            this.match(SiddhiQLParser.COMMA);
            this.state = 316;
            this.attribute_name();
            this.state = 317;
            this.attribute_type();
            this.state = 323;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 324;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_table_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table_final;
    return this;
}

Definition_table_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_table_finalContext.prototype.constructor = Definition_table_finalContext;

Definition_table_finalContext.prototype.definition_table = function() {
    return this.getTypedRuleContext(Definition_tableContext,0);
};

Definition_table_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_table_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_table_final(this);
	}
};

Definition_table_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_table_final(this);
	}
};




SiddhiQLParser.Definition_table_finalContext = Definition_table_finalContext;

SiddhiQLParser.prototype.definition_table_final = function() {

    var localctx = new Definition_table_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, SiddhiQLParser.RULE_definition_table_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 326;
        this.definition_table();
        this.state = 328;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 327;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 330;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_tableContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table;
    return this;
}

Definition_tableContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_tableContext.prototype.constructor = Definition_tableContext;

Definition_tableContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_tableContext.prototype.TABLE = function() {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

Definition_tableContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_tableContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_tableContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_tableContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_tableContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_table(this);
	}
};

Definition_tableContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_table(this);
	}
};




SiddhiQLParser.Definition_tableContext = Definition_tableContext;

SiddhiQLParser.prototype.definition_table = function() {

    var localctx = new Definition_tableContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, SiddhiQLParser.RULE_definition_table);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 335;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 332;
            this.annotation();
            this.state = 337;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 338;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 339;
        this.match(SiddhiQLParser.TABLE);
        this.state = 340;
        this.source();
        this.state = 341;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 342;
        this.attribute_name();
        this.state = 343;
        this.attribute_type();
        this.state = 350;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 344;
            this.match(SiddhiQLParser.COMMA);
            this.state = 345;
            this.attribute_name();
            this.state = 346;
            this.attribute_type();
            this.state = 352;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 353;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_window_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_window_final;
    return this;
}

Definition_window_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_window_finalContext.prototype.constructor = Definition_window_finalContext;

Definition_window_finalContext.prototype.definition_window = function() {
    return this.getTypedRuleContext(Definition_windowContext,0);
};

Definition_window_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_window_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_window_final(this);
	}
};

Definition_window_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_window_final(this);
	}
};




SiddhiQLParser.Definition_window_finalContext = Definition_window_finalContext;

SiddhiQLParser.prototype.definition_window_final = function() {

    var localctx = new Definition_window_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, SiddhiQLParser.RULE_definition_window_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 355;
        this.definition_window();
        this.state = 357;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 356;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 359;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_windowContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_window;
    return this;
}

Definition_windowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_windowContext.prototype.constructor = Definition_windowContext;

Definition_windowContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_windowContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

Definition_windowContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_windowContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_windowContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_windowContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Definition_windowContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_windowContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Definition_windowContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Definition_windowContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_window(this);
	}
};

Definition_windowContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_window(this);
	}
};




SiddhiQLParser.Definition_windowContext = Definition_windowContext;

SiddhiQLParser.prototype.definition_window = function() {

    var localctx = new Definition_windowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, SiddhiQLParser.RULE_definition_window);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 364;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 361;
            this.annotation();
            this.state = 366;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 367;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 368;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 369;
        this.source();
        this.state = 370;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 371;
        this.attribute_name();
        this.state = 372;
        this.attribute_type();
        this.state = 379;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 373;
            this.match(SiddhiQLParser.COMMA);
            this.state = 374;
            this.attribute_name();
            this.state = 375;
            this.attribute_type();
            this.state = 381;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 382;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 383;
        this.function_operation();
        this.state = 386;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OUTPUT) {
            this.state = 384;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 385;
            this.output_event_type();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_function_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function_final;
    return this;
}

Definition_function_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_function_finalContext.prototype.constructor = Definition_function_finalContext;

Definition_function_finalContext.prototype.definition_function = function() {
    return this.getTypedRuleContext(Definition_functionContext,0);
};

Definition_function_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_function_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_function_final(this);
	}
};

Definition_function_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_function_final(this);
	}
};




SiddhiQLParser.Definition_function_finalContext = Definition_function_finalContext;

SiddhiQLParser.prototype.definition_function_final = function() {

    var localctx = new Definition_function_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, SiddhiQLParser.RULE_definition_function_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 388;
        this.definition_function();
        this.state = 390;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 389;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 392;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function;
    return this;
}

Definition_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_functionContext.prototype.constructor = Definition_functionContext;

Definition_functionContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_functionContext.prototype.FUNCTION = function() {
    return this.getToken(SiddhiQLParser.FUNCTION, 0);
};

Definition_functionContext.prototype.function_name = function() {
    return this.getTypedRuleContext(Function_nameContext,0);
};

Definition_functionContext.prototype.language_name = function() {
    return this.getTypedRuleContext(Language_nameContext,0);
};

Definition_functionContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Definition_functionContext.prototype.attribute_type = function() {
    return this.getTypedRuleContext(Attribute_typeContext,0);
};

Definition_functionContext.prototype.function_body = function() {
    return this.getTypedRuleContext(Function_bodyContext,0);
};

Definition_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_function(this);
	}
};

Definition_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_function(this);
	}
};




SiddhiQLParser.Definition_functionContext = Definition_functionContext;

SiddhiQLParser.prototype.definition_function = function() {

    var localctx = new Definition_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, SiddhiQLParser.RULE_definition_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 394;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 395;
        this.match(SiddhiQLParser.FUNCTION);
        this.state = 396;
        this.function_name();
        this.state = 397;
        this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
        this.state = 398;
        this.language_name();
        this.state = 399;
        this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
        this.state = 400;
        this.match(SiddhiQLParser.RETURN);
        this.state = 401;
        this.attribute_type();
        this.state = 402;
        this.function_body();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_name;
    return this;
}

Function_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_nameContext.prototype.constructor = Function_nameContext;

Function_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Function_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_name(this);
	}
};

Function_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_name(this);
	}
};




SiddhiQLParser.Function_nameContext = Function_nameContext;

SiddhiQLParser.prototype.function_name = function() {

    var localctx = new Function_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, SiddhiQLParser.RULE_function_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 404;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Language_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_language_name;
    return this;
}

Language_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Language_nameContext.prototype.constructor = Language_nameContext;

Language_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Language_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLanguage_name(this);
	}
};

Language_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLanguage_name(this);
	}
};




SiddhiQLParser.Language_nameContext = Language_nameContext;

SiddhiQLParser.prototype.language_name = function() {

    var localctx = new Language_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, SiddhiQLParser.RULE_language_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 406;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_bodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_body;
    return this;
}

Function_bodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_bodyContext.prototype.constructor = Function_bodyContext;

Function_bodyContext.prototype.SCRIPT = function() {
    return this.getToken(SiddhiQLParser.SCRIPT, 0);
};

Function_bodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_body(this);
	}
};

Function_bodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_body(this);
	}
};




SiddhiQLParser.Function_bodyContext = Function_bodyContext;

SiddhiQLParser.prototype.function_body = function() {

    var localctx = new Function_bodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, SiddhiQLParser.RULE_function_body);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 408;
        this.match(SiddhiQLParser.SCRIPT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_trigger_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_trigger_final;
    return this;
}

Definition_trigger_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_trigger_finalContext.prototype.constructor = Definition_trigger_finalContext;

Definition_trigger_finalContext.prototype.definition_trigger = function() {
    return this.getTypedRuleContext(Definition_triggerContext,0);
};

Definition_trigger_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_trigger_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_trigger_final(this);
	}
};

Definition_trigger_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_trigger_final(this);
	}
};




SiddhiQLParser.Definition_trigger_finalContext = Definition_trigger_finalContext;

SiddhiQLParser.prototype.definition_trigger_final = function() {

    var localctx = new Definition_trigger_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, SiddhiQLParser.RULE_definition_trigger_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 410;
        this.definition_trigger();
        this.state = 412;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 411;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 414;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_triggerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_trigger;
    return this;
}

Definition_triggerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_triggerContext.prototype.constructor = Definition_triggerContext;

Definition_triggerContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_triggerContext.prototype.TRIGGER = function() {
    return this.getToken(SiddhiQLParser.TRIGGER, 0);
};

Definition_triggerContext.prototype.trigger_name = function() {
    return this.getTypedRuleContext(Trigger_nameContext,0);
};

Definition_triggerContext.prototype.AT = function() {
    return this.getToken(SiddhiQLParser.AT, 0);
};

Definition_triggerContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Definition_triggerContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Definition_triggerContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Definition_triggerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_trigger(this);
	}
};

Definition_triggerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_trigger(this);
	}
};




SiddhiQLParser.Definition_triggerContext = Definition_triggerContext;

SiddhiQLParser.prototype.definition_trigger = function() {

    var localctx = new Definition_triggerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, SiddhiQLParser.RULE_definition_trigger);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 416;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 417;
        this.match(SiddhiQLParser.TRIGGER);
        this.state = 418;
        this.trigger_name();
        this.state = 419;
        this.match(SiddhiQLParser.AT);
        this.state = 423;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.EVERY:
            this.state = 420;
            this.match(SiddhiQLParser.EVERY);
            this.state = 421;
            this.time_value();
            break;
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 422;
            this.string_value();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Trigger_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_trigger_name;
    return this;
}

Trigger_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Trigger_nameContext.prototype.constructor = Trigger_nameContext;

Trigger_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Trigger_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTrigger_name(this);
	}
};

Trigger_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTrigger_name(this);
	}
};




SiddhiQLParser.Trigger_nameContext = Trigger_nameContext;

SiddhiQLParser.prototype.trigger_name = function() {

    var localctx = new Trigger_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, SiddhiQLParser.RULE_trigger_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 425;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation;
    return this;
}

AnnotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationContext.prototype.constructor = AnnotationContext;

AnnotationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

AnnotationContext.prototype.annotation_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext,i);
    }
};

AnnotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnnotation(this);
	}
};

AnnotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnnotation(this);
	}
};




SiddhiQLParser.AnnotationContext = AnnotationContext;

SiddhiQLParser.prototype.annotation = function() {

    var localctx = new AnnotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, SiddhiQLParser.RULE_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 427;
        this.match(SiddhiQLParser.AT_SYMBOL);
        this.state = 428;
        this.name();
        this.state = 440;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_PAR) {
            this.state = 429;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 430;
            this.annotation_element();
            this.state = 435;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 431;
                this.match(SiddhiQLParser.COMMA);
                this.state = 432;
                this.annotation_element();
                this.state = 437;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 438;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Plan_annotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_plan_annotation;
    return this;
}

Plan_annotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Plan_annotationContext.prototype.constructor = Plan_annotationContext;

Plan_annotationContext.prototype.PLAN = function() {
    return this.getToken(SiddhiQLParser.PLAN, 0);
};

Plan_annotationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Plan_annotationContext.prototype.annotation_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext,i);
    }
};

Plan_annotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPlan_annotation(this);
	}
};

Plan_annotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPlan_annotation(this);
	}
};




SiddhiQLParser.Plan_annotationContext = Plan_annotationContext;

SiddhiQLParser.prototype.plan_annotation = function() {

    var localctx = new Plan_annotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, SiddhiQLParser.RULE_plan_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 442;
        this.match(SiddhiQLParser.AT_SYMBOL);
        this.state = 443;
        this.match(SiddhiQLParser.PLAN);
        this.state = 444;
        this.match(SiddhiQLParser.COL);
        this.state = 445;
        this.name();
        this.state = 457;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_PAR) {
            this.state = 446;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 447;
            this.annotation_element();
            this.state = 452;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 448;
                this.match(SiddhiQLParser.COMMA);
                this.state = 449;
                this.annotation_element();
                this.state = 454;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 455;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Annotation_elementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation_element;
    return this;
}

Annotation_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Annotation_elementContext.prototype.constructor = Annotation_elementContext;

Annotation_elementContext.prototype.property_value = function() {
    return this.getTypedRuleContext(Property_valueContext,0);
};

Annotation_elementContext.prototype.property_name = function() {
    return this.getTypedRuleContext(Property_nameContext,0);
};

Annotation_elementContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnnotation_element(this);
	}
};

Annotation_elementContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnnotation_element(this);
	}
};




SiddhiQLParser.Annotation_elementContext = Annotation_elementContext;

SiddhiQLParser.prototype.annotation_element = function() {

    var localctx = new Annotation_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, SiddhiQLParser.RULE_annotation_element);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 462;
        _la = this._input.LA(1);
        if(((((_la - 29)) & ~0x1f) == 0 && ((1 << (_la - 29)) & ((1 << (SiddhiQLParser.STREAM - 29)) | (1 << (SiddhiQLParser.DEFINE - 29)) | (1 << (SiddhiQLParser.TABLE - 29)) | (1 << (SiddhiQLParser.FROM - 29)) | (1 << (SiddhiQLParser.PARTITION - 29)) | (1 << (SiddhiQLParser.WINDOW - 29)) | (1 << (SiddhiQLParser.SELECT - 29)) | (1 << (SiddhiQLParser.GROUP - 29)) | (1 << (SiddhiQLParser.BY - 29)) | (1 << (SiddhiQLParser.HAVING - 29)) | (1 << (SiddhiQLParser.INSERT - 29)) | (1 << (SiddhiQLParser.OVERWRITE - 29)) | (1 << (SiddhiQLParser.DELETE - 29)) | (1 << (SiddhiQLParser.UPDATE - 29)) | (1 << (SiddhiQLParser.RETURN - 29)) | (1 << (SiddhiQLParser.EVENTS - 29)) | (1 << (SiddhiQLParser.INTO - 29)) | (1 << (SiddhiQLParser.OUTPUT - 29)) | (1 << (SiddhiQLParser.EXPIRED - 29)) | (1 << (SiddhiQLParser.CURRENT - 29)) | (1 << (SiddhiQLParser.SNAPSHOT - 29)) | (1 << (SiddhiQLParser.FOR - 29)) | (1 << (SiddhiQLParser.RAW - 29)) | (1 << (SiddhiQLParser.OF - 29)) | (1 << (SiddhiQLParser.AS - 29)) | (1 << (SiddhiQLParser.OR - 29)) | (1 << (SiddhiQLParser.AND - 29)))) !== 0) || ((((_la - 61)) & ~0x1f) == 0 && ((1 << (_la - 61)) & ((1 << (SiddhiQLParser.ON - 61)) | (1 << (SiddhiQLParser.IS - 61)) | (1 << (SiddhiQLParser.NOT - 61)) | (1 << (SiddhiQLParser.WITHIN - 61)) | (1 << (SiddhiQLParser.WITH - 61)) | (1 << (SiddhiQLParser.BEGIN - 61)) | (1 << (SiddhiQLParser.END - 61)) | (1 << (SiddhiQLParser.NULL - 61)) | (1 << (SiddhiQLParser.EVERY - 61)) | (1 << (SiddhiQLParser.LAST - 61)) | (1 << (SiddhiQLParser.ALL - 61)) | (1 << (SiddhiQLParser.FIRST - 61)) | (1 << (SiddhiQLParser.JOIN - 61)) | (1 << (SiddhiQLParser.INNER - 61)) | (1 << (SiddhiQLParser.OUTER - 61)) | (1 << (SiddhiQLParser.RIGHT - 61)) | (1 << (SiddhiQLParser.LEFT - 61)) | (1 << (SiddhiQLParser.FULL - 61)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 61)) | (1 << (SiddhiQLParser.YEARS - 61)) | (1 << (SiddhiQLParser.MONTHS - 61)) | (1 << (SiddhiQLParser.WEEKS - 61)) | (1 << (SiddhiQLParser.DAYS - 61)) | (1 << (SiddhiQLParser.HOURS - 61)) | (1 << (SiddhiQLParser.MINUTES - 61)) | (1 << (SiddhiQLParser.SECONDS - 61)) | (1 << (SiddhiQLParser.MILLISECONDS - 61)) | (1 << (SiddhiQLParser.FALSE - 61)) | (1 << (SiddhiQLParser.TRUE - 61)) | (1 << (SiddhiQLParser.STRING - 61)) | (1 << (SiddhiQLParser.INT - 61)) | (1 << (SiddhiQLParser.LONG - 61)))) !== 0) || ((((_la - 93)) & ~0x1f) == 0 && ((1 << (_la - 93)) & ((1 << (SiddhiQLParser.FLOAT - 93)) | (1 << (SiddhiQLParser.DOUBLE - 93)) | (1 << (SiddhiQLParser.BOOL - 93)) | (1 << (SiddhiQLParser.OBJECT - 93)) | (1 << (SiddhiQLParser.ID_QUOTES - 93)) | (1 << (SiddhiQLParser.ID - 93)))) !== 0)) {
            this.state = 459;
            this.property_name();
            this.state = 460;
            this.match(SiddhiQLParser.ASSIGN);
        }

        this.state = 464;
        this.property_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PartitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition;
    return this;
}

PartitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PartitionContext.prototype.constructor = PartitionContext;

PartitionContext.prototype.PARTITION = function() {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

PartitionContext.prototype.WITH = function() {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

PartitionContext.prototype.partition_with_stream = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Partition_with_streamContext);
    } else {
        return this.getTypedRuleContext(Partition_with_streamContext,i);
    }
};

PartitionContext.prototype.BEGIN = function() {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

PartitionContext.prototype.END = function() {
    return this.getToken(SiddhiQLParser.END, 0);
};

PartitionContext.prototype.query = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(QueryContext);
    } else {
        return this.getTypedRuleContext(QueryContext,i);
    }
};

PartitionContext.prototype.error = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext,i);
    }
};

PartitionContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

PartitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition(this);
	}
};

PartitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition(this);
	}
};




SiddhiQLParser.PartitionContext = PartitionContext;

SiddhiQLParser.prototype.partition = function() {

    var localctx = new PartitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, SiddhiQLParser.RULE_partition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 469;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 466;
            this.annotation();
            this.state = 471;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 472;
        this.match(SiddhiQLParser.PARTITION);
        this.state = 473;
        this.match(SiddhiQLParser.WITH);
        this.state = 474;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 475;
        this.partition_with_stream();
        this.state = 480;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 476;
            this.match(SiddhiQLParser.COMMA);
            this.state = 477;
            this.partition_with_stream();
            this.state = 482;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 483;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 484;
        this.match(SiddhiQLParser.BEGIN);
        this.state = 487;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.AT_SYMBOL:
        case SiddhiQLParser.FROM:
            this.state = 485;
            this.query();
            break;
        case SiddhiQLParser.UNEXPECTED_CHAR:
            this.state = 486;
            this.error();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 496;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,40,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 489;
                this.match(SiddhiQLParser.SCOL);
                this.state = 492;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT_SYMBOL:
                case SiddhiQLParser.FROM:
                    this.state = 490;
                    this.query();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 491;
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 498;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,40,this._ctx);
        }

        this.state = 500;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 499;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 502;
        this.match(SiddhiQLParser.END);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_final;
    return this;
}

Partition_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_finalContext.prototype.constructor = Partition_finalContext;

Partition_finalContext.prototype.partition = function() {
    return this.getTypedRuleContext(PartitionContext,0);
};

Partition_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Partition_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition_final(this);
	}
};

Partition_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition_final(this);
	}
};




SiddhiQLParser.Partition_finalContext = Partition_finalContext;

SiddhiQLParser.prototype.partition_final = function() {

    var localctx = new Partition_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, SiddhiQLParser.RULE_partition_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 504;
        this.partition();
        this.state = 506;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 505;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 508;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_with_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_with_stream;
    return this;
}

Partition_with_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_with_streamContext.prototype.constructor = Partition_with_streamContext;

Partition_with_streamContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Partition_with_streamContext.prototype.OF = function() {
    return this.getToken(SiddhiQLParser.OF, 0);
};

Partition_with_streamContext.prototype.stream_id = function() {
    return this.getTypedRuleContext(Stream_idContext,0);
};

Partition_with_streamContext.prototype.condition_ranges = function() {
    return this.getTypedRuleContext(Condition_rangesContext,0);
};

Partition_with_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition_with_stream(this);
	}
};

Partition_with_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition_with_stream(this);
	}
};




SiddhiQLParser.Partition_with_streamContext = Partition_with_streamContext;

SiddhiQLParser.prototype.partition_with_stream = function() {

    var localctx = new Partition_with_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, SiddhiQLParser.RULE_partition_with_stream);
    try {
        this.state = 518;
        var la_ = this._interp.adaptivePredict(this._input,43,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 510;
            this.attribute();
            this.state = 511;
            this.match(SiddhiQLParser.OF);
            this.state = 512;
            this.stream_id();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 514;
            this.condition_ranges();
            this.state = 515;
            this.match(SiddhiQLParser.OF);
            this.state = 516;
            this.stream_id();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_ranges;
    return this;
}

Condition_rangesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangesContext.prototype.constructor = Condition_rangesContext;

Condition_rangesContext.prototype.condition_range = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Condition_rangeContext);
    } else {
        return this.getTypedRuleContext(Condition_rangeContext,i);
    }
};

Condition_rangesContext.prototype.OR = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.OR);
    } else {
        return this.getToken(SiddhiQLParser.OR, i);
    }
};


Condition_rangesContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCondition_ranges(this);
	}
};

Condition_rangesContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCondition_ranges(this);
	}
};




SiddhiQLParser.Condition_rangesContext = Condition_rangesContext;

SiddhiQLParser.prototype.condition_ranges = function() {

    var localctx = new Condition_rangesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, SiddhiQLParser.RULE_condition_ranges);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 520;
        this.condition_range();
        this.state = 525;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.OR) {
            this.state = 521;
            this.match(SiddhiQLParser.OR);
            this.state = 522;
            this.condition_range();
            this.state = 527;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_range;
    return this;
}

Condition_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangeContext.prototype.constructor = Condition_rangeContext;

Condition_rangeContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Condition_rangeContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Condition_rangeContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Condition_rangeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCondition_range(this);
	}
};

Condition_rangeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCondition_range(this);
	}
};




SiddhiQLParser.Condition_rangeContext = Condition_rangeContext;

SiddhiQLParser.prototype.condition_range = function() {

    var localctx = new Condition_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, SiddhiQLParser.RULE_condition_range);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 528;
        this.expression();
        this.state = 529;
        this.match(SiddhiQLParser.AS);
        this.state = 530;
        this.string_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_final;
    return this;
}

Query_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_finalContext.prototype.constructor = Query_finalContext;

Query_finalContext.prototype.query = function() {
    return this.getTypedRuleContext(QueryContext,0);
};

Query_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Query_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_final(this);
	}
};

Query_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_final(this);
	}
};




SiddhiQLParser.Query_finalContext = Query_finalContext;

SiddhiQLParser.prototype.query_final = function() {

    var localctx = new Query_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, SiddhiQLParser.RULE_query_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 532;
        this.query();
        this.state = 534;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 533;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 536;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QueryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query;
    return this;
}

QueryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QueryContext.prototype.constructor = QueryContext;

QueryContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

QueryContext.prototype.query_input = function() {
    return this.getTypedRuleContext(Query_inputContext,0);
};

QueryContext.prototype.query_output = function() {
    return this.getTypedRuleContext(Query_outputContext,0);
};

QueryContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

QueryContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

QueryContext.prototype.output_rate = function() {
    return this.getTypedRuleContext(Output_rateContext,0);
};

QueryContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery(this);
	}
};

QueryContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery(this);
	}
};




SiddhiQLParser.QueryContext = QueryContext;

SiddhiQLParser.prototype.query = function() {

    var localctx = new QueryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, SiddhiQLParser.RULE_query);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 541;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 538;
            this.annotation();
            this.state = 543;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 544;
        this.match(SiddhiQLParser.FROM);
        this.state = 545;
        this.query_input();
        this.state = 547;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SELECT) {
            this.state = 546;
            this.query_section();
        }

        this.state = 550;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OUTPUT) {
            this.state = 549;
            this.output_rate();
        }

        this.state = 552;
        this.query_output();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_inputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_input;
    return this;
}

Query_inputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_inputContext.prototype.constructor = Query_inputContext;

Query_inputContext.prototype.standard_stream = function() {
    return this.getTypedRuleContext(Standard_streamContext,0);
};

Query_inputContext.prototype.join_stream = function() {
    return this.getTypedRuleContext(Join_streamContext,0);
};

Query_inputContext.prototype.pattern_stream = function() {
    return this.getTypedRuleContext(Pattern_streamContext,0);
};

Query_inputContext.prototype.sequence_stream = function() {
    return this.getTypedRuleContext(Sequence_streamContext,0);
};

Query_inputContext.prototype.anonymous_stream = function() {
    return this.getTypedRuleContext(Anonymous_streamContext,0);
};

Query_inputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_input(this);
	}
};

Query_inputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_input(this);
	}
};




SiddhiQLParser.Query_inputContext = Query_inputContext;

SiddhiQLParser.prototype.query_input = function() {

    var localctx = new Query_inputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, SiddhiQLParser.RULE_query_input);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 559;
        var la_ = this._interp.adaptivePredict(this._input,49,this._ctx);
        switch(la_) {
        case 1:
            this.state = 554;
            this.standard_stream();
            break;

        case 2:
            this.state = 555;
            this.join_stream();
            break;

        case 3:
            this.state = 556;
            this.pattern_stream();
            break;

        case 4:
            this.state = 557;
            this.sequence_stream();
            break;

        case 5:
            this.state = 558;
            this.anonymous_stream();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stream;
    this.pre_window_handlers = null; // Basic_source_stream_handlersContext
    this.post_window_handlers = null; // Basic_source_stream_handlersContext
    return this;
}

Standard_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_streamContext.prototype.constructor = Standard_streamContext;

Standard_streamContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Standard_streamContext.prototype.window = function() {
    return this.getTypedRuleContext(WindowContext,0);
};

Standard_streamContext.prototype.basic_source_stream_handlers = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlersContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlersContext,i);
    }
};

Standard_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStandard_stream(this);
	}
};

Standard_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStandard_stream(this);
	}
};




SiddhiQLParser.Standard_streamContext = Standard_streamContext;

SiddhiQLParser.prototype.standard_stream = function() {

    var localctx = new Standard_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, SiddhiQLParser.RULE_standard_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 561;
        this.source();
        this.state = 563;
        var la_ = this._interp.adaptivePredict(this._input,50,this._ctx);
        if(la_===1) {
            this.state = 562;
            localctx.pre_window_handlers = this.basic_source_stream_handlers();

        }
        this.state = 566;
        var la_ = this._interp.adaptivePredict(this._input,51,this._ctx);
        if(la_===1) {
            this.state = 565;
            this.window();

        }
        this.state = 569;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_SQARE_BRACKETS || _la===SiddhiQLParser.HASH) {
            this.state = 568;
            localctx.post_window_handlers = this.basic_source_stream_handlers();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_stream;
    this.left_source = null; // Join_sourceContext
    this.right_source = null; // Join_sourceContext
    this.right_unidirectional = null; // Token
    this.left_unidirectional = null; // Token
    return this;
}

Join_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_streamContext.prototype.constructor = Join_streamContext;

Join_streamContext.prototype.join = function() {
    return this.getTypedRuleContext(JoinContext,0);
};

Join_streamContext.prototype.join_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Join_sourceContext);
    } else {
        return this.getTypedRuleContext(Join_sourceContext,i);
    }
};

Join_streamContext.prototype.UNIDIRECTIONAL = function() {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

Join_streamContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Join_streamContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Join_streamContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Join_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin_stream(this);
	}
};

Join_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin_stream(this);
	}
};




SiddhiQLParser.Join_streamContext = Join_streamContext;

SiddhiQLParser.prototype.join_stream = function() {

    var localctx = new Join_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, SiddhiQLParser.RULE_join_stream);
    var _la = 0; // Token type
    try {
        this.state = 603;
        var la_ = this._interp.adaptivePredict(this._input,59,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 571;
            localctx.left_source = this.join_source();
            this.state = 572;
            this.join();
            this.state = 573;
            localctx.right_source = this.join_source();
            this.state = 574;
            localctx.right_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
            this.state = 577;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.ON) {
                this.state = 575;
                this.match(SiddhiQLParser.ON);
                this.state = 576;
                this.expression();
            }

            this.state = 580;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 579;
                this.within_time();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 582;
            localctx.left_source = this.join_source();
            this.state = 583;
            this.join();
            this.state = 584;
            localctx.right_source = this.join_source();
            this.state = 587;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.ON) {
                this.state = 585;
                this.match(SiddhiQLParser.ON);
                this.state = 586;
                this.expression();
            }

            this.state = 590;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 589;
                this.within_time();
            }

            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 592;
            localctx.left_source = this.join_source();
            this.state = 593;
            localctx.left_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
            this.state = 594;
            this.join();
            this.state = 595;
            localctx.right_source = this.join_source();
            this.state = 598;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.ON) {
                this.state = 596;
                this.match(SiddhiQLParser.ON);
                this.state = 597;
                this.expression();
            }

            this.state = 601;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 600;
                this.within_time();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_source;
    return this;
}

Join_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_sourceContext.prototype.constructor = Join_sourceContext;

Join_sourceContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Join_sourceContext.prototype.basic_source_stream_handlers = function() {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext,0);
};

Join_sourceContext.prototype.window = function() {
    return this.getTypedRuleContext(WindowContext,0);
};

Join_sourceContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Join_sourceContext.prototype.stream_alias = function() {
    return this.getTypedRuleContext(Stream_aliasContext,0);
};

Join_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin_source(this);
	}
};

Join_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin_source(this);
	}
};




SiddhiQLParser.Join_sourceContext = Join_sourceContext;

SiddhiQLParser.prototype.join_source = function() {

    var localctx = new Join_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, SiddhiQLParser.RULE_join_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 605;
        this.source();
        this.state = 607;
        var la_ = this._interp.adaptivePredict(this._input,60,this._ctx);
        if(la_===1) {
            this.state = 606;
            this.basic_source_stream_handlers();

        }
        this.state = 610;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 609;
            this.window();
        }

        this.state = 614;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.AS) {
            this.state = 612;
            this.match(SiddhiQLParser.AS);
            this.state = 613;
            this.stream_alias();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_stream;
    return this;
}

Pattern_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_streamContext.prototype.constructor = Pattern_streamContext;

Pattern_streamContext.prototype.every_pattern_source_chain = function() {
    return this.getTypedRuleContext(Every_pattern_source_chainContext,0);
};

Pattern_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_stream(this);
	}
};

Pattern_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_stream(this);
	}
};




SiddhiQLParser.Pattern_streamContext = Pattern_streamContext;

SiddhiQLParser.prototype.pattern_stream = function() {

    var localctx = new Pattern_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, SiddhiQLParser.RULE_pattern_stream);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 616;
        this.every_pattern_source_chain(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_pattern_source_chain;
    return this;
}

Every_pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_pattern_source_chainContext.prototype.constructor = Every_pattern_source_chainContext;

Every_pattern_source_chainContext.prototype.every_pattern_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Every_pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Every_pattern_source_chainContext,i);
    }
};

Every_pattern_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Every_pattern_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_pattern_source_chainContext.prototype.pattern_source_chain = function() {
    return this.getTypedRuleContext(Pattern_source_chainContext,0);
};

Every_pattern_source_chainContext.prototype.pattern_source = function() {
    return this.getTypedRuleContext(Pattern_sourceContext,0);
};

Every_pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_pattern_source_chain(this);
	}
};

Every_pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_pattern_source_chain(this);
	}
};



SiddhiQLParser.prototype.every_pattern_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Every_pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 66;
    this.enterRecursionRule(localctx, 66, SiddhiQLParser.RULE_every_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 638;
        var la_ = this._interp.adaptivePredict(this._input,66,this._ctx);
        switch(la_) {
        case 1:
            this.state = 619;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 620;
            this.every_pattern_source_chain(0);
            this.state = 621;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 623;
            var la_ = this._interp.adaptivePredict(this._input,63,this._ctx);
            if(la_===1) {
                this.state = 622;
                this.within_time();

            }
            break;

        case 2:
            this.state = 625;
            this.match(SiddhiQLParser.EVERY);
            this.state = 626;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 627;
            this.pattern_source_chain(0);
            this.state = 628;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 630;
            var la_ = this._interp.adaptivePredict(this._input,64,this._ctx);
            if(la_===1) {
                this.state = 629;
                this.within_time();

            }
            break;

        case 3:
            this.state = 632;
            this.pattern_source_chain(0);
            break;

        case 4:
            this.state = 633;
            this.match(SiddhiQLParser.EVERY);
            this.state = 634;
            this.pattern_source();
            this.state = 636;
            var la_ = this._interp.adaptivePredict(this._input,65,this._ctx);
            if(la_===1) {
                this.state = 635;
                this.within_time();

            }
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 645;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,67,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Every_pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_every_pattern_source_chain);
                this.state = 640;
                if (!( this.precpred(this._ctx, 3))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                }
                this.state = 641;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 642;
                this.every_pattern_source_chain(4); 
            }
            this.state = 647;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,67,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source_chain;
    return this;
}

Pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_source_chainContext.prototype.constructor = Pattern_source_chainContext;

Pattern_source_chainContext.prototype.pattern_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Pattern_source_chainContext,i);
    }
};

Pattern_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Pattern_source_chainContext.prototype.pattern_source = function() {
    return this.getTypedRuleContext(Pattern_sourceContext,0);
};

Pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_source_chain(this);
	}
};

Pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_source_chain(this);
	}
};



SiddhiQLParser.prototype.pattern_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 68;
    this.enterRecursionRule(localctx, 68, SiddhiQLParser.RULE_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 659;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.OPEN_PAR:
            this.state = 649;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 650;
            this.pattern_source_chain(0);
            this.state = 651;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 653;
            var la_ = this._interp.adaptivePredict(this._input,68,this._ctx);
            if(la_===1) {
                this.state = 652;
                this.within_time();

            }
            break;
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.OVERWRITE:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.state = 655;
            this.pattern_source();
            this.state = 657;
            var la_ = this._interp.adaptivePredict(this._input,69,this._ctx);
            if(la_===1) {
                this.state = 656;
                this.within_time();

            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 666;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,71,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_pattern_source_chain);
                this.state = 661;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 662;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 663;
                this.pattern_source_chain(3); 
            }
            this.state = 668;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,71,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source;
    return this;
}

Pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_sourceContext.prototype.constructor = Pattern_sourceContext;

Pattern_sourceContext.prototype.logical_stateful_source = function() {
    return this.getTypedRuleContext(Logical_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.pattern_collection_stateful_source = function() {
    return this.getTypedRuleContext(Pattern_collection_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_source(this);
	}
};

Pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_source(this);
	}
};




SiddhiQLParser.Pattern_sourceContext = Pattern_sourceContext;

SiddhiQLParser.prototype.pattern_source = function() {

    var localctx = new Pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, SiddhiQLParser.RULE_pattern_source);
    try {
        this.state = 672;
        var la_ = this._interp.adaptivePredict(this._input,72,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 669;
            this.logical_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 670;
            this.pattern_collection_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 671;
            this.standard_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logical_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_logical_stateful_source;
    return this;
}

Logical_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logical_stateful_sourceContext.prototype.constructor = Logical_stateful_sourceContext;

Logical_stateful_sourceContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Logical_stateful_sourceContext.prototype.standard_stateful_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Standard_stateful_sourceContext);
    } else {
        return this.getTypedRuleContext(Standard_stateful_sourceContext,i);
    }
};

Logical_stateful_sourceContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

Logical_stateful_sourceContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Logical_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLogical_stateful_source(this);
	}
};

Logical_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLogical_stateful_source(this);
	}
};




SiddhiQLParser.Logical_stateful_sourceContext = Logical_stateful_sourceContext;

SiddhiQLParser.prototype.logical_stateful_source = function() {

    var localctx = new Logical_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, SiddhiQLParser.RULE_logical_stateful_source);
    try {
        this.state = 688;
        var la_ = this._interp.adaptivePredict(this._input,74,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 674;
            this.match(SiddhiQLParser.NOT);
            this.state = 675;
            this.standard_stateful_source();
            this.state = 678;
            var la_ = this._interp.adaptivePredict(this._input,73,this._ctx);
            if(la_===1) {
                this.state = 676;
                this.match(SiddhiQLParser.AND);
                this.state = 677;
                this.standard_stateful_source();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 680;
            this.standard_stateful_source();
            this.state = 681;
            this.match(SiddhiQLParser.AND);
            this.state = 682;
            this.standard_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 684;
            this.standard_stateful_source();
            this.state = 685;
            this.match(SiddhiQLParser.OR);
            this.state = 686;
            this.standard_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_collection_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_collection_stateful_source;
    return this;
}

Pattern_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_collection_stateful_sourceContext.prototype.constructor = Pattern_collection_stateful_sourceContext;

Pattern_collection_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Pattern_collection_stateful_sourceContext.prototype.collect = function() {
    return this.getTypedRuleContext(CollectContext,0);
};

Pattern_collection_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_collection_stateful_source(this);
	}
};

Pattern_collection_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_collection_stateful_source(this);
	}
};




SiddhiQLParser.Pattern_collection_stateful_sourceContext = Pattern_collection_stateful_sourceContext;

SiddhiQLParser.prototype.pattern_collection_stateful_source = function() {

    var localctx = new Pattern_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, SiddhiQLParser.RULE_pattern_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 690;
        this.standard_stateful_source();
        this.state = 691;
        this.match(SiddhiQLParser.LT);
        this.state = 692;
        this.collect();
        this.state = 693;
        this.match(SiddhiQLParser.GT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stateful_source;
    return this;
}

Standard_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_stateful_sourceContext.prototype.constructor = Standard_stateful_sourceContext;

Standard_stateful_sourceContext.prototype.basic_source = function() {
    return this.getTypedRuleContext(Basic_sourceContext,0);
};

Standard_stateful_sourceContext.prototype.event = function() {
    return this.getTypedRuleContext(EventContext,0);
};

Standard_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStandard_stateful_source(this);
	}
};

Standard_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStandard_stateful_source(this);
	}
};




SiddhiQLParser.Standard_stateful_sourceContext = Standard_stateful_sourceContext;

SiddhiQLParser.prototype.standard_stateful_source = function() {

    var localctx = new Standard_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 76, SiddhiQLParser.RULE_standard_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 698;
        var la_ = this._interp.adaptivePredict(this._input,75,this._ctx);
        if(la_===1) {
            this.state = 695;
            this.event();
            this.state = 696;
            this.match(SiddhiQLParser.ASSIGN);

        }
        this.state = 700;
        this.basic_source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source;
    return this;
}

Basic_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_sourceContext.prototype.constructor = Basic_sourceContext;

Basic_sourceContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Basic_sourceContext.prototype.basic_source_stream_handlers = function() {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext,0);
};

Basic_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source(this);
	}
};

Basic_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source(this);
	}
};




SiddhiQLParser.Basic_sourceContext = Basic_sourceContext;

SiddhiQLParser.prototype.basic_source = function() {

    var localctx = new Basic_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, SiddhiQLParser.RULE_basic_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 702;
        this.source();
        this.state = 704;
        var la_ = this._interp.adaptivePredict(this._input,76,this._ctx);
        if(la_===1) {
            this.state = 703;
            this.basic_source_stream_handlers();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handlers;
    return this;
}

Basic_source_stream_handlersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlersContext.prototype.constructor = Basic_source_stream_handlersContext;

Basic_source_stream_handlersContext.prototype.basic_source_stream_handler = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlerContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlerContext,i);
    }
};

Basic_source_stream_handlersContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source_stream_handlers(this);
	}
};

Basic_source_stream_handlersContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source_stream_handlers(this);
	}
};




SiddhiQLParser.Basic_source_stream_handlersContext = Basic_source_stream_handlersContext;

SiddhiQLParser.prototype.basic_source_stream_handlers = function() {

    var localctx = new Basic_source_stream_handlersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, SiddhiQLParser.RULE_basic_source_stream_handlers);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 707; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 706;
        		this.basic_source_stream_handler();
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 709; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,77, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handler;
    return this;
}

Basic_source_stream_handlerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlerContext.prototype.constructor = Basic_source_stream_handlerContext;

Basic_source_stream_handlerContext.prototype.filter = function() {
    return this.getTypedRuleContext(FilterContext,0);
};

Basic_source_stream_handlerContext.prototype.stream_function = function() {
    return this.getTypedRuleContext(Stream_functionContext,0);
};

Basic_source_stream_handlerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source_stream_handler(this);
	}
};

Basic_source_stream_handlerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source_stream_handler(this);
	}
};




SiddhiQLParser.Basic_source_stream_handlerContext = Basic_source_stream_handlerContext;

SiddhiQLParser.prototype.basic_source_stream_handler = function() {

    var localctx = new Basic_source_stream_handlerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, SiddhiQLParser.RULE_basic_source_stream_handler);
    try {
        this.state = 713;
        var la_ = this._interp.adaptivePredict(this._input,78,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 711;
            this.filter();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 712;
            this.stream_function();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_stream;
    return this;
}

Sequence_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_streamContext.prototype.constructor = Sequence_streamContext;

Sequence_streamContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Sequence_streamContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Sequence_streamContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Sequence_streamContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Sequence_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_stream(this);
	}
};

Sequence_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_stream(this);
	}
};




SiddhiQLParser.Sequence_streamContext = Sequence_streamContext;

SiddhiQLParser.prototype.sequence_stream = function() {

    var localctx = new Sequence_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, SiddhiQLParser.RULE_sequence_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 716;
        var la_ = this._interp.adaptivePredict(this._input,79,this._ctx);
        if(la_===1) {
            this.state = 715;
            this.match(SiddhiQLParser.EVERY);

        }
        this.state = 718;
        this.sequence_source();
        this.state = 720;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.WITHIN) {
            this.state = 719;
            this.within_time();
        }

        this.state = 722;
        this.match(SiddhiQLParser.COMMA);
        this.state = 723;
        this.sequence_source_chain(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source_chain;
    return this;
}

Sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_source_chainContext.prototype.constructor = Sequence_source_chainContext;

Sequence_source_chainContext.prototype.sequence_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Sequence_source_chainContext);
    } else {
        return this.getTypedRuleContext(Sequence_source_chainContext,i);
    }
};

Sequence_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Sequence_source_chainContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_source_chain(this);
	}
};

Sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_source_chain(this);
	}
};



SiddhiQLParser.prototype.sequence_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Sequence_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 86;
    this.enterRecursionRule(localctx, 86, SiddhiQLParser.RULE_sequence_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 736;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.OPEN_PAR:
            this.state = 726;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 727;
            this.sequence_source_chain(0);
            this.state = 728;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 730;
            var la_ = this._interp.adaptivePredict(this._input,81,this._ctx);
            if(la_===1) {
                this.state = 729;
                this.within_time();

            }
            break;
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.OVERWRITE:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.state = 732;
            this.sequence_source();
            this.state = 734;
            var la_ = this._interp.adaptivePredict(this._input,82,this._ctx);
            if(la_===1) {
                this.state = 733;
                this.within_time();

            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 743;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,84,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Sequence_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_sequence_source_chain);
                this.state = 738;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 739;
                this.match(SiddhiQLParser.COMMA);
                this.state = 740;
                this.sequence_source_chain(3); 
            }
            this.state = 745;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,84,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Sequence_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source;
    return this;
}

Sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_sourceContext.prototype.constructor = Sequence_sourceContext;

Sequence_sourceContext.prototype.logical_stateful_source = function() {
    return this.getTypedRuleContext(Logical_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.sequence_collection_stateful_source = function() {
    return this.getTypedRuleContext(Sequence_collection_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_source(this);
	}
};

Sequence_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_source(this);
	}
};




SiddhiQLParser.Sequence_sourceContext = Sequence_sourceContext;

SiddhiQLParser.prototype.sequence_source = function() {

    var localctx = new Sequence_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, SiddhiQLParser.RULE_sequence_source);
    try {
        this.state = 749;
        var la_ = this._interp.adaptivePredict(this._input,85,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 746;
            this.logical_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 747;
            this.sequence_collection_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 748;
            this.standard_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_collection_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_collection_stateful_source;
    this.zero_or_more = null; // Token
    this.zero_or_one = null; // Token
    this.one_or_more = null; // Token
    return this;
}

Sequence_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_collection_stateful_sourceContext.prototype.constructor = Sequence_collection_stateful_sourceContext;

Sequence_collection_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Sequence_collection_stateful_sourceContext.prototype.collect = function() {
    return this.getTypedRuleContext(CollectContext,0);
};

Sequence_collection_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_collection_stateful_source(this);
	}
};

Sequence_collection_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_collection_stateful_source(this);
	}
};




SiddhiQLParser.Sequence_collection_stateful_sourceContext = Sequence_collection_stateful_sourceContext;

SiddhiQLParser.prototype.sequence_collection_stateful_source = function() {

    var localctx = new Sequence_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, SiddhiQLParser.RULE_sequence_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 751;
        this.standard_stateful_source();
        this.state = 759;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.LT:
            this.state = 752;
            this.match(SiddhiQLParser.LT);
            this.state = 753;
            this.collect();
            this.state = 754;
            this.match(SiddhiQLParser.GT);
            break;
        case SiddhiQLParser.STAR:
            this.state = 756;
            localctx.zero_or_more = this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.QUESTION:
            this.state = 757;
            localctx.zero_or_one = this.match(SiddhiQLParser.QUESTION);
            break;
        case SiddhiQLParser.PLUS:
            this.state = 758;
            localctx.one_or_more = this.match(SiddhiQLParser.PLUS);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Anonymous_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_anonymous_stream;
    return this;
}

Anonymous_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Anonymous_streamContext.prototype.constructor = Anonymous_streamContext;

Anonymous_streamContext.prototype.anonymous_stream = function() {
    return this.getTypedRuleContext(Anonymous_streamContext,0);
};

Anonymous_streamContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Anonymous_streamContext.prototype.query_input = function() {
    return this.getTypedRuleContext(Query_inputContext,0);
};

Anonymous_streamContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Anonymous_streamContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

Anonymous_streamContext.prototype.output_rate = function() {
    return this.getTypedRuleContext(Output_rateContext,0);
};

Anonymous_streamContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Anonymous_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnonymous_stream(this);
	}
};

Anonymous_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnonymous_stream(this);
	}
};




SiddhiQLParser.Anonymous_streamContext = Anonymous_streamContext;

SiddhiQLParser.prototype.anonymous_stream = function() {

    var localctx = new Anonymous_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, SiddhiQLParser.RULE_anonymous_stream);
    var _la = 0; // Token type
    try {
        this.state = 777;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.OPEN_PAR:
            this.enterOuterAlt(localctx, 1);
            this.state = 761;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 762;
            this.anonymous_stream();
            this.state = 763;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;
        case SiddhiQLParser.FROM:
            this.enterOuterAlt(localctx, 2);
            this.state = 765;
            this.match(SiddhiQLParser.FROM);
            this.state = 766;
            this.query_input();
            this.state = 768;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SELECT) {
                this.state = 767;
                this.query_section();
            }

            this.state = 771;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.OUTPUT) {
                this.state = 770;
                this.output_rate();
            }

            this.state = 773;
            this.match(SiddhiQLParser.RETURN);
            this.state = 775;
            _la = this._input.LA(1);
            if(((((_la - 47)) & ~0x1f) == 0 && ((1 << (_la - 47)) & ((1 << (SiddhiQLParser.EVENTS - 47)) | (1 << (SiddhiQLParser.EXPIRED - 47)) | (1 << (SiddhiQLParser.CURRENT - 47)) | (1 << (SiddhiQLParser.ALL - 47)))) !== 0)) {
                this.state = 774;
                this.output_event_type();
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FilterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_filter;
    return this;
}

FilterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FilterContext.prototype.constructor = FilterContext;

FilterContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

FilterContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFilter(this);
	}
};

FilterContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFilter(this);
	}
};




SiddhiQLParser.FilterContext = FilterContext;

SiddhiQLParser.prototype.filter = function() {

    var localctx = new FilterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, SiddhiQLParser.RULE_filter);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 780;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 779;
            this.match(SiddhiQLParser.HASH);
        }

        this.state = 782;
        this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
        this.state = 783;
        this.expression();
        this.state = 784;
        this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_function;
    return this;
}

Stream_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_functionContext.prototype.constructor = Stream_functionContext;

Stream_functionContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Stream_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_function(this);
	}
};

Stream_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_function(this);
	}
};




SiddhiQLParser.Stream_functionContext = Stream_functionContext;

SiddhiQLParser.prototype.stream_function = function() {

    var localctx = new Stream_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, SiddhiQLParser.RULE_stream_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 786;
        this.match(SiddhiQLParser.HASH);
        this.state = 787;
        this.function_operation();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WindowContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_window;
    return this;
}

WindowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WindowContext.prototype.constructor = WindowContext;

WindowContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

WindowContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

WindowContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWindow(this);
	}
};

WindowContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWindow(this);
	}
};




SiddhiQLParser.WindowContext = WindowContext;

SiddhiQLParser.prototype.window = function() {

    var localctx = new WindowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, SiddhiQLParser.RULE_window);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 789;
        this.match(SiddhiQLParser.HASH);
        this.state = 790;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 791;
        this.match(SiddhiQLParser.DOT);
        this.state = 792;
        this.function_operation();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_sectionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_section;
    return this;
}

Query_sectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_sectionContext.prototype.constructor = Query_sectionContext;

Query_sectionContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

Query_sectionContext.prototype.group_by = function() {
    return this.getTypedRuleContext(Group_byContext,0);
};

Query_sectionContext.prototype.having = function() {
    return this.getTypedRuleContext(HavingContext,0);
};

Query_sectionContext.prototype.output_attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Output_attributeContext);
    } else {
        return this.getTypedRuleContext(Output_attributeContext,i);
    }
};

Query_sectionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_section(this);
	}
};

Query_sectionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_section(this);
	}
};




SiddhiQLParser.Query_sectionContext = Query_sectionContext;

SiddhiQLParser.prototype.query_section = function() {

    var localctx = new Query_sectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, SiddhiQLParser.RULE_query_section);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 794;
        this.match(SiddhiQLParser.SELECT);
        this.state = 804;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.STAR:
            this.state = 795;
            this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.OVERWRITE:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 796;
            this.output_attribute();
            this.state = 801;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 797;
                this.match(SiddhiQLParser.COMMA);
                this.state = 798;
                this.output_attribute();
                this.state = 803;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 807;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.GROUP) {
            this.state = 806;
            this.group_by();
        }

        this.state = 810;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HAVING) {
            this.state = 809;
            this.having();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Group_byContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_group_by;
    return this;
}

Group_byContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Group_byContext.prototype.constructor = Group_byContext;

Group_byContext.prototype.GROUP = function() {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

Group_byContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Group_byContext.prototype.attribute_reference = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_referenceContext);
    } else {
        return this.getTypedRuleContext(Attribute_referenceContext,i);
    }
};

Group_byContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGroup_by(this);
	}
};

Group_byContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGroup_by(this);
	}
};




SiddhiQLParser.Group_byContext = Group_byContext;

SiddhiQLParser.prototype.group_by = function() {

    var localctx = new Group_byContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, SiddhiQLParser.RULE_group_by);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 812;
        this.match(SiddhiQLParser.GROUP);
        this.state = 813;
        this.match(SiddhiQLParser.BY);
        this.state = 814;
        this.attribute_reference();
        this.state = 819;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 815;
            this.match(SiddhiQLParser.COMMA);
            this.state = 816;
            this.attribute_reference();
            this.state = 821;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function HavingContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_having;
    return this;
}

HavingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
HavingContext.prototype.constructor = HavingContext;

HavingContext.prototype.HAVING = function() {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

HavingContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

HavingContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterHaving(this);
	}
};

HavingContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitHaving(this);
	}
};




SiddhiQLParser.HavingContext = HavingContext;

SiddhiQLParser.prototype.having = function() {

    var localctx = new HavingContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, SiddhiQLParser.RULE_having);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 822;
        this.match(SiddhiQLParser.HAVING);
        this.state = 823;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_outputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_output;
    return this;
}

Query_outputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_outputContext.prototype.constructor = Query_outputContext;

Query_outputContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

Query_outputContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

Query_outputContext.prototype.target = function() {
    return this.getTypedRuleContext(TargetContext,0);
};

Query_outputContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Query_outputContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

Query_outputContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Query_outputContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Query_outputContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

Query_outputContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

Query_outputContext.prototype.OVERWRITE = function() {
    return this.getToken(SiddhiQLParser.OVERWRITE, 0);
};

Query_outputContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Query_outputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_output(this);
	}
};

Query_outputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_output(this);
	}
};




SiddhiQLParser.Query_outputContext = Query_outputContext;

SiddhiQLParser.prototype.query_output = function() {

    var localctx = new Query_outputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, SiddhiQLParser.RULE_query_output);
    var _la = 0; // Token type
    try {
        this.state = 863;
        var la_ = this._interp.adaptivePredict(this._input,102,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 825;
            this.match(SiddhiQLParser.INSERT);
            this.state = 827;
            _la = this._input.LA(1);
            if(((((_la - 47)) & ~0x1f) == 0 && ((1 << (_la - 47)) & ((1 << (SiddhiQLParser.EVENTS - 47)) | (1 << (SiddhiQLParser.EXPIRED - 47)) | (1 << (SiddhiQLParser.CURRENT - 47)) | (1 << (SiddhiQLParser.ALL - 47)))) !== 0)) {
                this.state = 826;
                this.output_event_type();
            }

            this.state = 829;
            this.match(SiddhiQLParser.INTO);
            this.state = 830;
            this.target();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 831;
            this.match(SiddhiQLParser.DELETE);
            this.state = 832;
            this.target();
            this.state = 835;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 833;
                this.match(SiddhiQLParser.FOR);
                this.state = 834;
                this.output_event_type();
            }

            this.state = 837;
            this.match(SiddhiQLParser.ON);
            this.state = 838;
            this.expression();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 840;
            this.match(SiddhiQLParser.UPDATE);
            this.state = 841;
            this.target();
            this.state = 844;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 842;
                this.match(SiddhiQLParser.FOR);
                this.state = 843;
                this.output_event_type();
            }

            this.state = 846;
            this.match(SiddhiQLParser.ON);
            this.state = 847;
            this.expression();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 849;
            this.match(SiddhiQLParser.INSERT);
            this.state = 850;
            this.match(SiddhiQLParser.OVERWRITE);
            this.state = 851;
            this.target();
            this.state = 854;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 852;
                this.match(SiddhiQLParser.FOR);
                this.state = 853;
                this.output_event_type();
            }

            this.state = 856;
            this.match(SiddhiQLParser.ON);
            this.state = 857;
            this.expression();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 859;
            this.match(SiddhiQLParser.RETURN);
            this.state = 861;
            _la = this._input.LA(1);
            if(((((_la - 47)) & ~0x1f) == 0 && ((1 << (_la - 47)) & ((1 << (SiddhiQLParser.EVENTS - 47)) | (1 << (SiddhiQLParser.EXPIRED - 47)) | (1 << (SiddhiQLParser.CURRENT - 47)) | (1 << (SiddhiQLParser.ALL - 47)))) !== 0)) {
                this.state = 860;
                this.output_event_type();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_event_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_event_type;
    return this;
}

Output_event_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_event_typeContext.prototype.constructor = Output_event_typeContext;

Output_event_typeContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_event_typeContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_event_typeContext.prototype.RAW = function() {
    return this.getToken(SiddhiQLParser.RAW, 0);
};

Output_event_typeContext.prototype.EXPIRED = function() {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

Output_event_typeContext.prototype.CURRENT = function() {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

Output_event_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_event_type(this);
	}
};

Output_event_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_event_type(this);
	}
};




SiddhiQLParser.Output_event_typeContext = Output_event_typeContext;

SiddhiQLParser.prototype.output_event_type = function() {

    var localctx = new Output_event_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, SiddhiQLParser.RULE_output_event_type);
    var _la = 0; // Token type
    try {
        this.state = 879;
        var la_ = this._interp.adaptivePredict(this._input,104,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 865;
            this.match(SiddhiQLParser.ALL);
            this.state = 866;
            this.match(SiddhiQLParser.EVENTS);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 867;
            this.match(SiddhiQLParser.ALL);
            this.state = 868;
            this.match(SiddhiQLParser.RAW);
            this.state = 869;
            this.match(SiddhiQLParser.EVENTS);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 870;
            this.match(SiddhiQLParser.EXPIRED);
            this.state = 871;
            this.match(SiddhiQLParser.EVENTS);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 872;
            this.match(SiddhiQLParser.EXPIRED);
            this.state = 873;
            this.match(SiddhiQLParser.RAW);
            this.state = 874;
            this.match(SiddhiQLParser.EVENTS);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 876;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.CURRENT) {
                this.state = 875;
                this.match(SiddhiQLParser.CURRENT);
            }

            this.state = 878;
            this.match(SiddhiQLParser.EVENTS);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rateContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate;
    return this;
}

Output_rateContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rateContext.prototype.constructor = Output_rateContext;

Output_rateContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Output_rateContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Output_rateContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Output_rateContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Output_rateContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_rateContext.prototype.output_rate_type = function() {
    return this.getTypedRuleContext(Output_rate_typeContext,0);
};

Output_rateContext.prototype.SNAPSHOT = function() {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

Output_rateContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_rate(this);
	}
};

Output_rateContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_rate(this);
	}
};




SiddhiQLParser.Output_rateContext = Output_rateContext;

SiddhiQLParser.prototype.output_rate = function() {

    var localctx = new Output_rateContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, SiddhiQLParser.RULE_output_rate);
    var _la = 0; // Token type
    try {
        this.state = 895;
        var la_ = this._interp.adaptivePredict(this._input,107,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 881;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 883;
            _la = this._input.LA(1);
            if(((((_la - 70)) & ~0x1f) == 0 && ((1 << (_la - 70)) & ((1 << (SiddhiQLParser.LAST - 70)) | (1 << (SiddhiQLParser.ALL - 70)) | (1 << (SiddhiQLParser.FIRST - 70)))) !== 0)) {
                this.state = 882;
                this.output_rate_type();
            }

            this.state = 885;
            this.match(SiddhiQLParser.EVERY);
            this.state = 889;
            var la_ = this._interp.adaptivePredict(this._input,106,this._ctx);
            switch(la_) {
            case 1:
                this.state = 886;
                this.time_value();
                break;

            case 2:
                this.state = 887;
                this.match(SiddhiQLParser.INT_LITERAL);
                this.state = 888;
                this.match(SiddhiQLParser.EVENTS);
                break;

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 891;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 892;
            this.match(SiddhiQLParser.SNAPSHOT);
            this.state = 893;
            this.match(SiddhiQLParser.EVERY);
            this.state = 894;
            this.time_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rate_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate_type;
    return this;
}

Output_rate_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rate_typeContext.prototype.constructor = Output_rate_typeContext;

Output_rate_typeContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_rate_typeContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Output_rate_typeContext.prototype.FIRST = function() {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

Output_rate_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_rate_type(this);
	}
};

Output_rate_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_rate_type(this);
	}
};




SiddhiQLParser.Output_rate_typeContext = Output_rate_typeContext;

SiddhiQLParser.prototype.output_rate_type = function() {

    var localctx = new Output_rate_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, SiddhiQLParser.RULE_output_rate_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 897;
        _la = this._input.LA(1);
        if(!(((((_la - 70)) & ~0x1f) == 0 && ((1 << (_la - 70)) & ((1 << (SiddhiQLParser.LAST - 70)) | (1 << (SiddhiQLParser.ALL - 70)) | (1 << (SiddhiQLParser.FIRST - 70)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Within_timeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_within_time;
    return this;
}

Within_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Within_timeContext.prototype.constructor = Within_timeContext;

Within_timeContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

Within_timeContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Within_timeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWithin_time(this);
	}
};

Within_timeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWithin_time(this);
	}
};




SiddhiQLParser.Within_timeContext = Within_timeContext;

SiddhiQLParser.prototype.within_time = function() {

    var localctx = new Within_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, SiddhiQLParser.RULE_within_time);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 899;
        this.match(SiddhiQLParser.WITHIN);
        this.state = 900;
        this.time_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_attributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_attribute;
    return this;
}

Output_attributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_attributeContext.prototype.constructor = Output_attributeContext;

Output_attributeContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Output_attributeContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Output_attributeContext.prototype.attribute_name = function() {
    return this.getTypedRuleContext(Attribute_nameContext,0);
};

Output_attributeContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Output_attributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_attribute(this);
	}
};

Output_attributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_attribute(this);
	}
};




SiddhiQLParser.Output_attributeContext = Output_attributeContext;

SiddhiQLParser.prototype.output_attribute = function() {

    var localctx = new Output_attributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, SiddhiQLParser.RULE_output_attribute);
    try {
        this.state = 907;
        var la_ = this._interp.adaptivePredict(this._input,108,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 902;
            this.attribute();
            this.state = 903;
            this.match(SiddhiQLParser.AS);
            this.state = 904;
            this.attribute_name();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 906;
            this.attribute_reference();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute;
    return this;
}

AttributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributeContext.prototype.constructor = AttributeContext;

AttributeContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

AttributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute(this);
	}
};

AttributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute(this);
	}
};




SiddhiQLParser.AttributeContext = AttributeContext;

SiddhiQLParser.prototype.attribute = function() {

    var localctx = new AttributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, SiddhiQLParser.RULE_attribute);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 909;
        this.math_operation(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_expression;
    return this;
}

ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionContext.prototype.constructor = ExpressionContext;

ExpressionContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

ExpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExpression(this);
	}
};

ExpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExpression(this);
	}
};




SiddhiQLParser.ExpressionContext = ExpressionContext;

SiddhiQLParser.prototype.expression = function() {

    var localctx = new ExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, SiddhiQLParser.RULE_expression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 911;
        this.math_operation(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Math_operationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_math_operation;
    return this;
}

Math_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Math_operationContext.prototype.constructor = Math_operationContext;


 
Math_operationContext.prototype.copyFrom = function(ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};

function Multiplication_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.multiply = null; // Token;
    this.devide = null; // Token;
    this.mod = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Multiplication_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Multiplication_math_operationContext.prototype.constructor = Multiplication_math_operationContext;

SiddhiQLParser.Multiplication_math_operationContext = Multiplication_math_operationContext;

Multiplication_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Multiplication_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMultiplication_math_operation(this);
	}
};

Multiplication_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMultiplication_math_operation(this);
	}
};


function Greaterthan_lessthan_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.gt_eq = null; // Token;
    this.lt_eq = null; // Token;
    this.gt = null; // Token;
    this.lt = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Greaterthan_lessthan_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Greaterthan_lessthan_math_operationContext.prototype.constructor = Greaterthan_lessthan_math_operationContext;

SiddhiQLParser.Greaterthan_lessthan_math_operationContext = Greaterthan_lessthan_math_operationContext;

Greaterthan_lessthan_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Greaterthan_lessthan_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGreaterthan_lessthan_math_operation(this);
	}
};

Greaterthan_lessthan_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGreaterthan_lessthan_math_operation(this);
	}
};


function Basic_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Basic_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Basic_math_operationContext.prototype.constructor = Basic_math_operationContext;

SiddhiQLParser.Basic_math_operationContext = Basic_math_operationContext;

Basic_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

Basic_math_operationContext.prototype.null_check = function() {
    return this.getTypedRuleContext(Null_checkContext,0);
};

Basic_math_operationContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Basic_math_operationContext.prototype.constant_value = function() {
    return this.getTypedRuleContext(Constant_valueContext,0);
};

Basic_math_operationContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};
Basic_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_math_operation(this);
	}
};

Basic_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_math_operation(this);
	}
};


function In_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

In_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
In_math_operationContext.prototype.constructor = In_math_operationContext;

SiddhiQLParser.In_math_operationContext = In_math_operationContext;

In_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

In_math_operationContext.prototype.IN = function() {
    return this.getToken(SiddhiQLParser.IN, 0);
};

In_math_operationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};
In_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterIn_math_operation(this);
	}
};

In_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitIn_math_operation(this);
	}
};


function Addition_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.add = null; // Token;
    this.substract = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Addition_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Addition_math_operationContext.prototype.constructor = Addition_math_operationContext;

SiddhiQLParser.Addition_math_operationContext = Addition_math_operationContext;

Addition_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Addition_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAddition_math_operation(this);
	}
};

Addition_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAddition_math_operation(this);
	}
};


function And_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

And_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
And_math_operationContext.prototype.constructor = And_math_operationContext;

SiddhiQLParser.And_math_operationContext = And_math_operationContext;

And_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};

And_math_operationContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};
And_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnd_math_operation(this);
	}
};

And_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnd_math_operation(this);
	}
};


function Or_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Or_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Or_math_operationContext.prototype.constructor = Or_math_operationContext;

SiddhiQLParser.Or_math_operationContext = Or_math_operationContext;

Or_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};

Or_math_operationContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};
Or_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOr_math_operation(this);
	}
};

Or_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOr_math_operation(this);
	}
};


function Equality_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.eq = null; // Token;
    this.not_eq = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Equality_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Equality_math_operationContext.prototype.constructor = Equality_math_operationContext;

SiddhiQLParser.Equality_math_operationContext = Equality_math_operationContext;

Equality_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Equality_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEquality_math_operation(this);
	}
};

Equality_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEquality_math_operation(this);
	}
};


function Not_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Not_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Not_math_operationContext.prototype.constructor = Not_math_operationContext;

SiddhiQLParser.Not_math_operationContext = Not_math_operationContext;

Not_math_operationContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Not_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};
Not_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterNot_math_operation(this);
	}
};

Not_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitNot_math_operation(this);
	}
};



SiddhiQLParser.prototype.math_operation = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Math_operationContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 122;
    this.enterRecursionRule(localctx, 122, SiddhiQLParser.RULE_math_operation, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 924;
        var la_ = this._interp.adaptivePredict(this._input,109,this._ctx);
        switch(la_) {
        case 1:
            localctx = new Not_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;

            this.state = 914;
            this.match(SiddhiQLParser.NOT);
            this.state = 915;
            this.math_operation(11);
            break;

        case 2:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 916;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 917;
            this.math_operation(0);
            this.state = 918;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 920;
            this.null_check();
            break;

        case 4:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 921;
            this.function_operation();
            break;

        case 5:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 922;
            this.constant_value();
            break;

        case 6:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 923;
            this.attribute_reference();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 964;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,115,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 962;
                var la_ = this._interp.adaptivePredict(this._input,114,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Multiplication_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 926;
                    if (!( this.precpred(this._ctx, 10))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                    }
                    this.state = 930;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.STAR:
                        this.state = 927;
                        localctx.multiply = this.match(SiddhiQLParser.STAR);
                        break;
                    case SiddhiQLParser.DIV:
                        this.state = 928;
                        localctx.devide = this.match(SiddhiQLParser.DIV);
                        break;
                    case SiddhiQLParser.MOD:
                        this.state = 929;
                        localctx.mod = this.match(SiddhiQLParser.MOD);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 932;
                    this.math_operation(11);
                    break;

                case 2:
                    localctx = new Addition_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 933;
                    if (!( this.precpred(this._ctx, 9))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                    }
                    this.state = 936;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.PLUS:
                        this.state = 934;
                        localctx.add = this.match(SiddhiQLParser.PLUS);
                        break;
                    case SiddhiQLParser.MINUS:
                        this.state = 935;
                        localctx.substract = this.match(SiddhiQLParser.MINUS);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 938;
                    this.math_operation(10);
                    break;

                case 3:
                    localctx = new Greaterthan_lessthan_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 939;
                    if (!( this.precpred(this._ctx, 8))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                    }
                    this.state = 944;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.GT_EQ:
                        this.state = 940;
                        localctx.gt_eq = this.match(SiddhiQLParser.GT_EQ);
                        break;
                    case SiddhiQLParser.LT_EQ:
                        this.state = 941;
                        localctx.lt_eq = this.match(SiddhiQLParser.LT_EQ);
                        break;
                    case SiddhiQLParser.GT:
                        this.state = 942;
                        localctx.gt = this.match(SiddhiQLParser.GT);
                        break;
                    case SiddhiQLParser.LT:
                        this.state = 943;
                        localctx.lt = this.match(SiddhiQLParser.LT);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 946;
                    this.math_operation(9);
                    break;

                case 4:
                    localctx = new Equality_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 947;
                    if (!( this.precpred(this._ctx, 7))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                    }
                    this.state = 950;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.EQ:
                        this.state = 948;
                        localctx.eq = this.match(SiddhiQLParser.EQ);
                        break;
                    case SiddhiQLParser.NOT_EQ:
                        this.state = 949;
                        localctx.not_eq = this.match(SiddhiQLParser.NOT_EQ);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 952;
                    this.math_operation(8);
                    break;

                case 5:
                    localctx = new And_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 953;
                    if (!( this.precpred(this._ctx, 5))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                    }
                    this.state = 954;
                    this.match(SiddhiQLParser.AND);
                    this.state = 955;
                    this.math_operation(6);
                    break;

                case 6:
                    localctx = new Or_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 956;
                    if (!( this.precpred(this._ctx, 4))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
                    }
                    this.state = 957;
                    this.match(SiddhiQLParser.OR);
                    this.state = 958;
                    this.math_operation(5);
                    break;

                case 7:
                    localctx = new In_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 959;
                    if (!( this.precpred(this._ctx, 6))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                    }
                    this.state = 960;
                    this.match(SiddhiQLParser.IN);
                    this.state = 961;
                    this.name();
                    break;

                } 
            }
            this.state = 966;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,115,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Function_operationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_operation;
    return this;
}

Function_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_operationContext.prototype.constructor = Function_operationContext;

Function_operationContext.prototype.function_id = function() {
    return this.getTypedRuleContext(Function_idContext,0);
};

Function_operationContext.prototype.function_namespace = function() {
    return this.getTypedRuleContext(Function_namespaceContext,0);
};

Function_operationContext.prototype.attribute_list = function() {
    return this.getTypedRuleContext(Attribute_listContext,0);
};

Function_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_operation(this);
	}
};

Function_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_operation(this);
	}
};




SiddhiQLParser.Function_operationContext = Function_operationContext;

SiddhiQLParser.prototype.function_operation = function() {

    var localctx = new Function_operationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 124, SiddhiQLParser.RULE_function_operation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 970;
        var la_ = this._interp.adaptivePredict(this._input,116,this._ctx);
        if(la_===1) {
            this.state = 967;
            this.function_namespace();
            this.state = 968;
            this.match(SiddhiQLParser.COL);

        }
        this.state = 972;
        this.function_id();
        this.state = 973;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 975;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.INT_LITERAL) | (1 << SiddhiQLParser.LONG_LITERAL) | (1 << SiddhiQLParser.FLOAT_LITERAL) | (1 << SiddhiQLParser.DOUBLE_LITERAL) | (1 << SiddhiQLParser.OPEN_PAR) | (1 << SiddhiQLParser.STAR) | (1 << SiddhiQLParser.PLUS) | (1 << SiddhiQLParser.MINUS) | (1 << SiddhiQLParser.HASH) | (1 << SiddhiQLParser.STREAM) | (1 << SiddhiQLParser.DEFINE))) !== 0) || ((((_la - 33)) & ~0x1f) == 0 && ((1 << (_la - 33)) & ((1 << (SiddhiQLParser.TABLE - 33)) | (1 << (SiddhiQLParser.FROM - 33)) | (1 << (SiddhiQLParser.PARTITION - 33)) | (1 << (SiddhiQLParser.WINDOW - 33)) | (1 << (SiddhiQLParser.SELECT - 33)) | (1 << (SiddhiQLParser.GROUP - 33)) | (1 << (SiddhiQLParser.BY - 33)) | (1 << (SiddhiQLParser.HAVING - 33)) | (1 << (SiddhiQLParser.INSERT - 33)) | (1 << (SiddhiQLParser.OVERWRITE - 33)) | (1 << (SiddhiQLParser.DELETE - 33)) | (1 << (SiddhiQLParser.UPDATE - 33)) | (1 << (SiddhiQLParser.RETURN - 33)) | (1 << (SiddhiQLParser.EVENTS - 33)) | (1 << (SiddhiQLParser.INTO - 33)) | (1 << (SiddhiQLParser.OUTPUT - 33)) | (1 << (SiddhiQLParser.EXPIRED - 33)) | (1 << (SiddhiQLParser.CURRENT - 33)) | (1 << (SiddhiQLParser.SNAPSHOT - 33)) | (1 << (SiddhiQLParser.FOR - 33)) | (1 << (SiddhiQLParser.RAW - 33)) | (1 << (SiddhiQLParser.OF - 33)) | (1 << (SiddhiQLParser.AS - 33)) | (1 << (SiddhiQLParser.OR - 33)) | (1 << (SiddhiQLParser.AND - 33)) | (1 << (SiddhiQLParser.ON - 33)) | (1 << (SiddhiQLParser.IS - 33)) | (1 << (SiddhiQLParser.NOT - 33)) | (1 << (SiddhiQLParser.WITHIN - 33)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (SiddhiQLParser.WITH - 65)) | (1 << (SiddhiQLParser.BEGIN - 65)) | (1 << (SiddhiQLParser.END - 65)) | (1 << (SiddhiQLParser.NULL - 65)) | (1 << (SiddhiQLParser.EVERY - 65)) | (1 << (SiddhiQLParser.LAST - 65)) | (1 << (SiddhiQLParser.ALL - 65)) | (1 << (SiddhiQLParser.FIRST - 65)) | (1 << (SiddhiQLParser.JOIN - 65)) | (1 << (SiddhiQLParser.INNER - 65)) | (1 << (SiddhiQLParser.OUTER - 65)) | (1 << (SiddhiQLParser.RIGHT - 65)) | (1 << (SiddhiQLParser.LEFT - 65)) | (1 << (SiddhiQLParser.FULL - 65)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 65)) | (1 << (SiddhiQLParser.YEARS - 65)) | (1 << (SiddhiQLParser.MONTHS - 65)) | (1 << (SiddhiQLParser.WEEKS - 65)) | (1 << (SiddhiQLParser.DAYS - 65)) | (1 << (SiddhiQLParser.HOURS - 65)) | (1 << (SiddhiQLParser.MINUTES - 65)) | (1 << (SiddhiQLParser.SECONDS - 65)) | (1 << (SiddhiQLParser.MILLISECONDS - 65)) | (1 << (SiddhiQLParser.FALSE - 65)) | (1 << (SiddhiQLParser.TRUE - 65)) | (1 << (SiddhiQLParser.STRING - 65)) | (1 << (SiddhiQLParser.INT - 65)) | (1 << (SiddhiQLParser.LONG - 65)) | (1 << (SiddhiQLParser.FLOAT - 65)) | (1 << (SiddhiQLParser.DOUBLE - 65)) | (1 << (SiddhiQLParser.BOOL - 65)) | (1 << (SiddhiQLParser.OBJECT - 65)))) !== 0) || ((((_la - 97)) & ~0x1f) == 0 && ((1 << (_la - 97)) & ((1 << (SiddhiQLParser.ID_QUOTES - 97)) | (1 << (SiddhiQLParser.ID - 97)) | (1 << (SiddhiQLParser.STRING_LITERAL - 97)))) !== 0)) {
            this.state = 974;
            this.attribute_list();
        }

        this.state = 977;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_list;
    return this;
}

Attribute_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_listContext.prototype.constructor = Attribute_listContext;

Attribute_listContext.prototype.attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AttributeContext);
    } else {
        return this.getTypedRuleContext(AttributeContext,i);
    }
};

Attribute_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_list(this);
	}
};

Attribute_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_list(this);
	}
};




SiddhiQLParser.Attribute_listContext = Attribute_listContext;

SiddhiQLParser.prototype.attribute_list = function() {

    var localctx = new Attribute_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 126, SiddhiQLParser.RULE_attribute_list);
    var _la = 0; // Token type
    try {
        this.state = 988;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.OVERWRITE:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 979;
            this.attribute();
            this.state = 984;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 980;
                this.match(SiddhiQLParser.COMMA);
                this.state = 981;
                this.attribute();
                this.state = 986;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        case SiddhiQLParser.STAR:
            this.enterOuterAlt(localctx, 2);
            this.state = 987;
            this.match(SiddhiQLParser.STAR);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Null_checkContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_null_check;
    return this;
}

Null_checkContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Null_checkContext.prototype.constructor = Null_checkContext;

Null_checkContext.prototype.IS = function() {
    return this.getToken(SiddhiQLParser.IS, 0);
};

Null_checkContext.prototype.NULL = function() {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

Null_checkContext.prototype.stream_reference = function() {
    return this.getTypedRuleContext(Stream_referenceContext,0);
};

Null_checkContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Null_checkContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Null_checkContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterNull_check(this);
	}
};

Null_checkContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitNull_check(this);
	}
};




SiddhiQLParser.Null_checkContext = Null_checkContext;

SiddhiQLParser.prototype.null_check = function() {

    var localctx = new Null_checkContext(this, this._ctx, this.state);
    this.enterRule(localctx, 128, SiddhiQLParser.RULE_null_check);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 993;
        var la_ = this._interp.adaptivePredict(this._input,120,this._ctx);
        switch(la_) {
        case 1:
            this.state = 990;
            this.stream_reference();
            break;

        case 2:
            this.state = 991;
            this.attribute_reference();
            break;

        case 3:
            this.state = 992;
            this.function_operation();
            break;

        }
        this.state = 995;
        this.match(SiddhiQLParser.IS);
        this.state = 996;
        this.match(SiddhiQLParser.NULL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_reference;
    this.hash = null; // Token
    return this;
}

Stream_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_referenceContext.prototype.constructor = Stream_referenceContext;

Stream_referenceContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_referenceContext.prototype.attribute_index = function() {
    return this.getTypedRuleContext(Attribute_indexContext,0);
};

Stream_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_reference(this);
	}
};

Stream_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_reference(this);
	}
};




SiddhiQLParser.Stream_referenceContext = Stream_referenceContext;

SiddhiQLParser.prototype.stream_reference = function() {

    var localctx = new Stream_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, SiddhiQLParser.RULE_stream_reference);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 999;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 998;
            localctx.hash = this.match(SiddhiQLParser.HASH);
        }

        this.state = 1001;
        this.name();
        this.state = 1006;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_SQARE_BRACKETS) {
            this.state = 1002;
            this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
            this.state = 1003;
            this.attribute_index();
            this.state = 1004;
            this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_reference;
    this.hash1 = null; // Token
    this.name1 = null; // NameContext
    this.attribute_index1 = null; // Attribute_indexContext
    this.hash2 = null; // Token
    this.name2 = null; // NameContext
    this.attribute_index2 = null; // Attribute_indexContext
    return this;
}

Attribute_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_referenceContext.prototype.constructor = Attribute_referenceContext;

Attribute_referenceContext.prototype.attribute_name = function() {
    return this.getTypedRuleContext(Attribute_nameContext,0);
};

Attribute_referenceContext.prototype.name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext,i);
    }
};

Attribute_referenceContext.prototype.attribute_index = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_indexContext);
    } else {
        return this.getTypedRuleContext(Attribute_indexContext,i);
    }
};

Attribute_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_reference(this);
	}
};

Attribute_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_reference(this);
	}
};




SiddhiQLParser.Attribute_referenceContext = Attribute_referenceContext;

SiddhiQLParser.prototype.attribute_reference = function() {

    var localctx = new Attribute_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, SiddhiQLParser.RULE_attribute_reference);
    var _la = 0; // Token type
    try {
        this.state = 1032;
        var la_ = this._interp.adaptivePredict(this._input,127,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1009;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.HASH) {
                this.state = 1008;
                localctx.hash1 = this.match(SiddhiQLParser.HASH);
            }

            this.state = 1011;
            localctx.name1 = this.name();
            this.state = 1016;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.OPEN_SQARE_BRACKETS) {
                this.state = 1012;
                this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
                this.state = 1013;
                localctx.attribute_index1 = this.attribute_index();
                this.state = 1014;
                this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
            }

            this.state = 1026;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.HASH) {
                this.state = 1018;
                localctx.hash2 = this.match(SiddhiQLParser.HASH);
                this.state = 1019;
                localctx.name2 = this.name();
                this.state = 1024;
                _la = this._input.LA(1);
                if(_la===SiddhiQLParser.OPEN_SQARE_BRACKETS) {
                    this.state = 1020;
                    this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
                    this.state = 1021;
                    localctx.attribute_index2 = this.attribute_index();
                    this.state = 1022;
                    this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
                }

            }

            this.state = 1028;
            this.match(SiddhiQLParser.DOT);
            this.state = 1029;
            this.attribute_name();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1031;
            this.attribute_name();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_indexContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_index;
    return this;
}

Attribute_indexContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_indexContext.prototype.constructor = Attribute_indexContext;

Attribute_indexContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Attribute_indexContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Attribute_indexContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_index(this);
	}
};

Attribute_indexContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_index(this);
	}
};




SiddhiQLParser.Attribute_indexContext = Attribute_indexContext;

SiddhiQLParser.prototype.attribute_index = function() {

    var localctx = new Attribute_indexContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, SiddhiQLParser.RULE_attribute_index);
    var _la = 0; // Token type
    try {
        this.state = 1040;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.INT_LITERAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 1034;
            this.match(SiddhiQLParser.INT_LITERAL);
            break;
        case SiddhiQLParser.LAST:
            this.enterOuterAlt(localctx, 2);
            this.state = 1035;
            this.match(SiddhiQLParser.LAST);
            this.state = 1038;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.MINUS) {
                this.state = 1036;
                this.match(SiddhiQLParser.MINUS);
                this.state = 1037;
                this.match(SiddhiQLParser.INT_LITERAL);
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_id;
    return this;
}

Function_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_idContext.prototype.constructor = Function_idContext;

Function_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Function_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_id(this);
	}
};

Function_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_id(this);
	}
};




SiddhiQLParser.Function_idContext = Function_idContext;

SiddhiQLParser.prototype.function_id = function() {

    var localctx = new Function_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, SiddhiQLParser.RULE_function_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1042;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_namespaceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_namespace;
    return this;
}

Function_namespaceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_namespaceContext.prototype.constructor = Function_namespaceContext;

Function_namespaceContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Function_namespaceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_namespace(this);
	}
};

Function_namespaceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_namespace(this);
	}
};




SiddhiQLParser.Function_namespaceContext = Function_namespaceContext;

SiddhiQLParser.prototype.function_namespace = function() {

    var localctx = new Function_namespaceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, SiddhiQLParser.RULE_function_namespace);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1044;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_id;
    return this;
}

Stream_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_idContext.prototype.constructor = Stream_idContext;

Stream_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_id(this);
	}
};

Stream_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_id(this);
	}
};




SiddhiQLParser.Stream_idContext = Stream_idContext;

SiddhiQLParser.prototype.stream_id = function() {

    var localctx = new Stream_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, SiddhiQLParser.RULE_stream_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1046;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_aliasContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_alias;
    return this;
}

Stream_aliasContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_aliasContext.prototype.constructor = Stream_aliasContext;

Stream_aliasContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_aliasContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_alias(this);
	}
};

Stream_aliasContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_alias(this);
	}
};




SiddhiQLParser.Stream_aliasContext = Stream_aliasContext;

SiddhiQLParser.prototype.stream_alias = function() {

    var localctx = new Stream_aliasContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, SiddhiQLParser.RULE_stream_alias);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1048;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_name;
    return this;
}

Property_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_nameContext.prototype.constructor = Property_nameContext;

Property_nameContext.prototype.name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext,i);
    }
};

Property_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_name(this);
	}
};

Property_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_name(this);
	}
};




SiddhiQLParser.Property_nameContext = Property_nameContext;

SiddhiQLParser.prototype.property_name = function() {

    var localctx = new Property_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, SiddhiQLParser.RULE_property_name);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1050;
        this.name();
        this.state = 1055;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.DOT) {
            this.state = 1051;
            this.match(SiddhiQLParser.DOT);
            this.state = 1052;
            this.name();
            this.state = 1057;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_name;
    return this;
}

Attribute_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_nameContext.prototype.constructor = Attribute_nameContext;

Attribute_nameContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Attribute_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_name(this);
	}
};

Attribute_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_name(this);
	}
};




SiddhiQLParser.Attribute_nameContext = Attribute_nameContext;

SiddhiQLParser.prototype.attribute_name = function() {

    var localctx = new Attribute_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, SiddhiQLParser.RULE_attribute_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1058;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_value;
    return this;
}

Property_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_valueContext.prototype.constructor = Property_valueContext;

Property_valueContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Property_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_value(this);
	}
};

Property_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_value(this);
	}
};




SiddhiQLParser.Property_valueContext = Property_valueContext;

SiddhiQLParser.prototype.property_value = function() {

    var localctx = new Property_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, SiddhiQLParser.RULE_property_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1060;
        this.string_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_source;
    this.inner = null; // Token
    return this;
}

SourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SourceContext.prototype.constructor = SourceContext;

SourceContext.prototype.stream_id = function() {
    return this.getTypedRuleContext(Stream_idContext,0);
};

SourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSource(this);
	}
};

SourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSource(this);
	}
};




SiddhiQLParser.SourceContext = SourceContext;

SiddhiQLParser.prototype.source = function() {

    var localctx = new SourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, SiddhiQLParser.RULE_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1063;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 1062;
            localctx.inner = this.match(SiddhiQLParser.HASH);
        }

        this.state = 1065;
        this.stream_id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TargetContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_target;
    return this;
}

TargetContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TargetContext.prototype.constructor = TargetContext;

TargetContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

TargetContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTarget(this);
	}
};

TargetContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTarget(this);
	}
};




SiddhiQLParser.TargetContext = TargetContext;

SiddhiQLParser.prototype.target = function() {

    var localctx = new TargetContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, SiddhiQLParser.RULE_target);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1067;
        this.source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EventContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_event;
    return this;
}

EventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EventContext.prototype.constructor = EventContext;

EventContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

EventContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvent(this);
	}
};

EventContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvent(this);
	}
};




SiddhiQLParser.EventContext = EventContext;

SiddhiQLParser.prototype.event = function() {

    var localctx = new EventContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, SiddhiQLParser.RULE_event);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1069;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_name;
    return this;
}

NameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NameContext.prototype.constructor = NameContext;

NameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

NameContext.prototype.keyword = function() {
    return this.getTypedRuleContext(KeywordContext,0);
};

NameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterName(this);
	}
};

NameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitName(this);
	}
};




SiddhiQLParser.NameContext = NameContext;

SiddhiQLParser.prototype.name = function() {

    var localctx = new NameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, SiddhiQLParser.RULE_name);
    try {
        this.state = 1073;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.enterOuterAlt(localctx, 1);
            this.state = 1071;
            this.id();
            break;
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.OVERWRITE:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1072;
            this.keyword();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CollectContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_collect;
    this.start = null; // Token
    this.end = null; // Token
    return this;
}

CollectContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CollectContext.prototype.constructor = CollectContext;

CollectContext.prototype.INT_LITERAL = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.INT_LITERAL);
    } else {
        return this.getToken(SiddhiQLParser.INT_LITERAL, i);
    }
};


CollectContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCollect(this);
	}
};

CollectContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCollect(this);
	}
};




SiddhiQLParser.CollectContext = CollectContext;

SiddhiQLParser.prototype.collect = function() {

    var localctx = new CollectContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, SiddhiQLParser.RULE_collect);
    try {
        this.state = 1083;
        var la_ = this._interp.adaptivePredict(this._input,133,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1075;
            localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
            this.state = 1076;
            this.match(SiddhiQLParser.COL);
            this.state = 1077;
            localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1078;
            localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
            this.state = 1079;
            this.match(SiddhiQLParser.COL);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1080;
            this.match(SiddhiQLParser.COL);
            this.state = 1081;
            localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1082;
            this.match(SiddhiQLParser.INT_LITERAL);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_type;
    return this;
}

Attribute_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_typeContext.prototype.constructor = Attribute_typeContext;

Attribute_typeContext.prototype.STRING = function() {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

Attribute_typeContext.prototype.INT = function() {
    return this.getToken(SiddhiQLParser.INT, 0);
};

Attribute_typeContext.prototype.LONG = function() {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

Attribute_typeContext.prototype.FLOAT = function() {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

Attribute_typeContext.prototype.DOUBLE = function() {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

Attribute_typeContext.prototype.BOOL = function() {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

Attribute_typeContext.prototype.OBJECT = function() {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

Attribute_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_type(this);
	}
};

Attribute_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_type(this);
	}
};




SiddhiQLParser.Attribute_typeContext = Attribute_typeContext;

SiddhiQLParser.prototype.attribute_type = function() {

    var localctx = new Attribute_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, SiddhiQLParser.RULE_attribute_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1085;
        _la = this._input.LA(1);
        if(!(((((_la - 90)) & ~0x1f) == 0 && ((1 << (_la - 90)) & ((1 << (SiddhiQLParser.STRING - 90)) | (1 << (SiddhiQLParser.INT - 90)) | (1 << (SiddhiQLParser.LONG - 90)) | (1 << (SiddhiQLParser.FLOAT - 90)) | (1 << (SiddhiQLParser.DOUBLE - 90)) | (1 << (SiddhiQLParser.BOOL - 90)) | (1 << (SiddhiQLParser.OBJECT - 90)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function JoinContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join;
    return this;
}

JoinContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
JoinContext.prototype.constructor = JoinContext;

JoinContext.prototype.LEFT = function() {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

JoinContext.prototype.OUTER = function() {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

JoinContext.prototype.JOIN = function() {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

JoinContext.prototype.RIGHT = function() {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

JoinContext.prototype.FULL = function() {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

JoinContext.prototype.INNER = function() {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

JoinContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin(this);
	}
};

JoinContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin(this);
	}
};




SiddhiQLParser.JoinContext = JoinContext;

SiddhiQLParser.prototype.join = function() {

    var localctx = new JoinContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, SiddhiQLParser.RULE_join);
    var _la = 0; // Token type
    try {
        this.state = 1102;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.LEFT:
            this.enterOuterAlt(localctx, 1);
            this.state = 1087;
            this.match(SiddhiQLParser.LEFT);
            this.state = 1088;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1089;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.RIGHT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1090;
            this.match(SiddhiQLParser.RIGHT);
            this.state = 1091;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1092;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.FULL:
            this.enterOuterAlt(localctx, 3);
            this.state = 1093;
            this.match(SiddhiQLParser.FULL);
            this.state = 1094;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1095;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.OUTER:
            this.enterOuterAlt(localctx, 4);
            this.state = 1096;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1097;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
            this.enterOuterAlt(localctx, 5);
            this.state = 1099;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.INNER) {
                this.state = 1098;
                this.match(SiddhiQLParser.INNER);
            }

            this.state = 1101;
            this.match(SiddhiQLParser.JOIN);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Constant_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_constant_value;
    return this;
}

Constant_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Constant_valueContext.prototype.constructor = Constant_valueContext;

Constant_valueContext.prototype.bool_value = function() {
    return this.getTypedRuleContext(Bool_valueContext,0);
};

Constant_valueContext.prototype.signed_double_value = function() {
    return this.getTypedRuleContext(Signed_double_valueContext,0);
};

Constant_valueContext.prototype.signed_float_value = function() {
    return this.getTypedRuleContext(Signed_float_valueContext,0);
};

Constant_valueContext.prototype.signed_long_value = function() {
    return this.getTypedRuleContext(Signed_long_valueContext,0);
};

Constant_valueContext.prototype.signed_int_value = function() {
    return this.getTypedRuleContext(Signed_int_valueContext,0);
};

Constant_valueContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Constant_valueContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Constant_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterConstant_value(this);
	}
};

Constant_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitConstant_value(this);
	}
};




SiddhiQLParser.Constant_valueContext = Constant_valueContext;

SiddhiQLParser.prototype.constant_value = function() {

    var localctx = new Constant_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, SiddhiQLParser.RULE_constant_value);
    try {
        this.state = 1111;
        var la_ = this._interp.adaptivePredict(this._input,136,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1104;
            this.bool_value();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1105;
            this.signed_double_value();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1106;
            this.signed_float_value();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1107;
            this.signed_long_value();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1108;
            this.signed_int_value();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1109;
            this.time_value();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1110;
            this.string_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IdContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_id;
    return this;
}

IdContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IdContext.prototype.constructor = IdContext;

IdContext.prototype.ID_QUOTES = function() {
    return this.getToken(SiddhiQLParser.ID_QUOTES, 0);
};

IdContext.prototype.ID = function() {
    return this.getToken(SiddhiQLParser.ID, 0);
};

IdContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterId(this);
	}
};

IdContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitId(this);
	}
};




SiddhiQLParser.IdContext = IdContext;

SiddhiQLParser.prototype.id = function() {

    var localctx = new IdContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, SiddhiQLParser.RULE_id);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1113;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.ID_QUOTES || _la===SiddhiQLParser.ID)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function KeywordContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_keyword;
    return this;
}

KeywordContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
KeywordContext.prototype.constructor = KeywordContext;

KeywordContext.prototype.STREAM = function() {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

KeywordContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

KeywordContext.prototype.TABLE = function() {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

KeywordContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

KeywordContext.prototype.PARTITION = function() {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

KeywordContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

KeywordContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

KeywordContext.prototype.GROUP = function() {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

KeywordContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

KeywordContext.prototype.HAVING = function() {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

KeywordContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

KeywordContext.prototype.OVERWRITE = function() {
    return this.getToken(SiddhiQLParser.OVERWRITE, 0);
};

KeywordContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

KeywordContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

KeywordContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

KeywordContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

KeywordContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

KeywordContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

KeywordContext.prototype.EXPIRED = function() {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

KeywordContext.prototype.CURRENT = function() {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

KeywordContext.prototype.SNAPSHOT = function() {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

KeywordContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

KeywordContext.prototype.RAW = function() {
    return this.getToken(SiddhiQLParser.RAW, 0);
};

KeywordContext.prototype.OF = function() {
    return this.getToken(SiddhiQLParser.OF, 0);
};

KeywordContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

KeywordContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

KeywordContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

KeywordContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

KeywordContext.prototype.IS = function() {
    return this.getToken(SiddhiQLParser.IS, 0);
};

KeywordContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

KeywordContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

KeywordContext.prototype.WITH = function() {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

KeywordContext.prototype.BEGIN = function() {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

KeywordContext.prototype.END = function() {
    return this.getToken(SiddhiQLParser.END, 0);
};

KeywordContext.prototype.NULL = function() {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

KeywordContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

KeywordContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

KeywordContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

KeywordContext.prototype.FIRST = function() {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

KeywordContext.prototype.JOIN = function() {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

KeywordContext.prototype.INNER = function() {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

KeywordContext.prototype.OUTER = function() {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

KeywordContext.prototype.RIGHT = function() {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

KeywordContext.prototype.LEFT = function() {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

KeywordContext.prototype.FULL = function() {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

KeywordContext.prototype.UNIDIRECTIONAL = function() {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

KeywordContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

KeywordContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

KeywordContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

KeywordContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

KeywordContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

KeywordContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

KeywordContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

KeywordContext.prototype.MILLISECONDS = function() {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

KeywordContext.prototype.FALSE = function() {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

KeywordContext.prototype.TRUE = function() {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

KeywordContext.prototype.STRING = function() {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

KeywordContext.prototype.INT = function() {
    return this.getToken(SiddhiQLParser.INT, 0);
};

KeywordContext.prototype.LONG = function() {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

KeywordContext.prototype.FLOAT = function() {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

KeywordContext.prototype.DOUBLE = function() {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

KeywordContext.prototype.BOOL = function() {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

KeywordContext.prototype.OBJECT = function() {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

KeywordContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterKeyword(this);
	}
};

KeywordContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitKeyword(this);
	}
};




SiddhiQLParser.KeywordContext = KeywordContext;

SiddhiQLParser.prototype.keyword = function() {

    var localctx = new KeywordContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, SiddhiQLParser.RULE_keyword);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1115;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.STREAM || _la===SiddhiQLParser.DEFINE || ((((_la - 33)) & ~0x1f) == 0 && ((1 << (_la - 33)) & ((1 << (SiddhiQLParser.TABLE - 33)) | (1 << (SiddhiQLParser.FROM - 33)) | (1 << (SiddhiQLParser.PARTITION - 33)) | (1 << (SiddhiQLParser.WINDOW - 33)) | (1 << (SiddhiQLParser.SELECT - 33)) | (1 << (SiddhiQLParser.GROUP - 33)) | (1 << (SiddhiQLParser.BY - 33)) | (1 << (SiddhiQLParser.HAVING - 33)) | (1 << (SiddhiQLParser.INSERT - 33)) | (1 << (SiddhiQLParser.OVERWRITE - 33)) | (1 << (SiddhiQLParser.DELETE - 33)) | (1 << (SiddhiQLParser.UPDATE - 33)) | (1 << (SiddhiQLParser.RETURN - 33)) | (1 << (SiddhiQLParser.EVENTS - 33)) | (1 << (SiddhiQLParser.INTO - 33)) | (1 << (SiddhiQLParser.OUTPUT - 33)) | (1 << (SiddhiQLParser.EXPIRED - 33)) | (1 << (SiddhiQLParser.CURRENT - 33)) | (1 << (SiddhiQLParser.SNAPSHOT - 33)) | (1 << (SiddhiQLParser.FOR - 33)) | (1 << (SiddhiQLParser.RAW - 33)) | (1 << (SiddhiQLParser.OF - 33)) | (1 << (SiddhiQLParser.AS - 33)) | (1 << (SiddhiQLParser.OR - 33)) | (1 << (SiddhiQLParser.AND - 33)) | (1 << (SiddhiQLParser.ON - 33)) | (1 << (SiddhiQLParser.IS - 33)) | (1 << (SiddhiQLParser.NOT - 33)) | (1 << (SiddhiQLParser.WITHIN - 33)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (SiddhiQLParser.WITH - 65)) | (1 << (SiddhiQLParser.BEGIN - 65)) | (1 << (SiddhiQLParser.END - 65)) | (1 << (SiddhiQLParser.NULL - 65)) | (1 << (SiddhiQLParser.EVERY - 65)) | (1 << (SiddhiQLParser.LAST - 65)) | (1 << (SiddhiQLParser.ALL - 65)) | (1 << (SiddhiQLParser.FIRST - 65)) | (1 << (SiddhiQLParser.JOIN - 65)) | (1 << (SiddhiQLParser.INNER - 65)) | (1 << (SiddhiQLParser.OUTER - 65)) | (1 << (SiddhiQLParser.RIGHT - 65)) | (1 << (SiddhiQLParser.LEFT - 65)) | (1 << (SiddhiQLParser.FULL - 65)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 65)) | (1 << (SiddhiQLParser.YEARS - 65)) | (1 << (SiddhiQLParser.MONTHS - 65)) | (1 << (SiddhiQLParser.WEEKS - 65)) | (1 << (SiddhiQLParser.DAYS - 65)) | (1 << (SiddhiQLParser.HOURS - 65)) | (1 << (SiddhiQLParser.MINUTES - 65)) | (1 << (SiddhiQLParser.SECONDS - 65)) | (1 << (SiddhiQLParser.MILLISECONDS - 65)) | (1 << (SiddhiQLParser.FALSE - 65)) | (1 << (SiddhiQLParser.TRUE - 65)) | (1 << (SiddhiQLParser.STRING - 65)) | (1 << (SiddhiQLParser.INT - 65)) | (1 << (SiddhiQLParser.LONG - 65)) | (1 << (SiddhiQLParser.FLOAT - 65)) | (1 << (SiddhiQLParser.DOUBLE - 65)) | (1 << (SiddhiQLParser.BOOL - 65)) | (1 << (SiddhiQLParser.OBJECT - 65)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Time_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_time_value;
    return this;
}

Time_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Time_valueContext.prototype.constructor = Time_valueContext;

Time_valueContext.prototype.year_value = function() {
    return this.getTypedRuleContext(Year_valueContext,0);
};

Time_valueContext.prototype.month_value = function() {
    return this.getTypedRuleContext(Month_valueContext,0);
};

Time_valueContext.prototype.week_value = function() {
    return this.getTypedRuleContext(Week_valueContext,0);
};

Time_valueContext.prototype.day_value = function() {
    return this.getTypedRuleContext(Day_valueContext,0);
};

Time_valueContext.prototype.hour_value = function() {
    return this.getTypedRuleContext(Hour_valueContext,0);
};

Time_valueContext.prototype.minute_value = function() {
    return this.getTypedRuleContext(Minute_valueContext,0);
};

Time_valueContext.prototype.second_value = function() {
    return this.getTypedRuleContext(Second_valueContext,0);
};

Time_valueContext.prototype.millisecond_value = function() {
    return this.getTypedRuleContext(Millisecond_valueContext,0);
};

Time_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTime_value(this);
	}
};

Time_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTime_value(this);
	}
};




SiddhiQLParser.Time_valueContext = Time_valueContext;

SiddhiQLParser.prototype.time_value = function() {

    var localctx = new Time_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, SiddhiQLParser.RULE_time_value);
    try {
        this.state = 1209;
        var la_ = this._interp.adaptivePredict(this._input,165,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1117;
            this.year_value();
            this.state = 1119;
            var la_ = this._interp.adaptivePredict(this._input,137,this._ctx);
            if(la_===1) {
                this.state = 1118;
                this.month_value();

            }
            this.state = 1122;
            var la_ = this._interp.adaptivePredict(this._input,138,this._ctx);
            if(la_===1) {
                this.state = 1121;
                this.week_value();

            }
            this.state = 1125;
            var la_ = this._interp.adaptivePredict(this._input,139,this._ctx);
            if(la_===1) {
                this.state = 1124;
                this.day_value();

            }
            this.state = 1128;
            var la_ = this._interp.adaptivePredict(this._input,140,this._ctx);
            if(la_===1) {
                this.state = 1127;
                this.hour_value();

            }
            this.state = 1131;
            var la_ = this._interp.adaptivePredict(this._input,141,this._ctx);
            if(la_===1) {
                this.state = 1130;
                this.minute_value();

            }
            this.state = 1134;
            var la_ = this._interp.adaptivePredict(this._input,142,this._ctx);
            if(la_===1) {
                this.state = 1133;
                this.second_value();

            }
            this.state = 1137;
            var la_ = this._interp.adaptivePredict(this._input,143,this._ctx);
            if(la_===1) {
                this.state = 1136;
                this.millisecond_value();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1139;
            this.month_value();
            this.state = 1141;
            var la_ = this._interp.adaptivePredict(this._input,144,this._ctx);
            if(la_===1) {
                this.state = 1140;
                this.week_value();

            }
            this.state = 1144;
            var la_ = this._interp.adaptivePredict(this._input,145,this._ctx);
            if(la_===1) {
                this.state = 1143;
                this.day_value();

            }
            this.state = 1147;
            var la_ = this._interp.adaptivePredict(this._input,146,this._ctx);
            if(la_===1) {
                this.state = 1146;
                this.hour_value();

            }
            this.state = 1150;
            var la_ = this._interp.adaptivePredict(this._input,147,this._ctx);
            if(la_===1) {
                this.state = 1149;
                this.minute_value();

            }
            this.state = 1153;
            var la_ = this._interp.adaptivePredict(this._input,148,this._ctx);
            if(la_===1) {
                this.state = 1152;
                this.second_value();

            }
            this.state = 1156;
            var la_ = this._interp.adaptivePredict(this._input,149,this._ctx);
            if(la_===1) {
                this.state = 1155;
                this.millisecond_value();

            }
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1158;
            this.week_value();
            this.state = 1160;
            var la_ = this._interp.adaptivePredict(this._input,150,this._ctx);
            if(la_===1) {
                this.state = 1159;
                this.day_value();

            }
            this.state = 1163;
            var la_ = this._interp.adaptivePredict(this._input,151,this._ctx);
            if(la_===1) {
                this.state = 1162;
                this.hour_value();

            }
            this.state = 1166;
            var la_ = this._interp.adaptivePredict(this._input,152,this._ctx);
            if(la_===1) {
                this.state = 1165;
                this.minute_value();

            }
            this.state = 1169;
            var la_ = this._interp.adaptivePredict(this._input,153,this._ctx);
            if(la_===1) {
                this.state = 1168;
                this.second_value();

            }
            this.state = 1172;
            var la_ = this._interp.adaptivePredict(this._input,154,this._ctx);
            if(la_===1) {
                this.state = 1171;
                this.millisecond_value();

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1174;
            this.day_value();
            this.state = 1176;
            var la_ = this._interp.adaptivePredict(this._input,155,this._ctx);
            if(la_===1) {
                this.state = 1175;
                this.hour_value();

            }
            this.state = 1179;
            var la_ = this._interp.adaptivePredict(this._input,156,this._ctx);
            if(la_===1) {
                this.state = 1178;
                this.minute_value();

            }
            this.state = 1182;
            var la_ = this._interp.adaptivePredict(this._input,157,this._ctx);
            if(la_===1) {
                this.state = 1181;
                this.second_value();

            }
            this.state = 1185;
            var la_ = this._interp.adaptivePredict(this._input,158,this._ctx);
            if(la_===1) {
                this.state = 1184;
                this.millisecond_value();

            }
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1187;
            this.hour_value();
            this.state = 1189;
            var la_ = this._interp.adaptivePredict(this._input,159,this._ctx);
            if(la_===1) {
                this.state = 1188;
                this.minute_value();

            }
            this.state = 1192;
            var la_ = this._interp.adaptivePredict(this._input,160,this._ctx);
            if(la_===1) {
                this.state = 1191;
                this.second_value();

            }
            this.state = 1195;
            var la_ = this._interp.adaptivePredict(this._input,161,this._ctx);
            if(la_===1) {
                this.state = 1194;
                this.millisecond_value();

            }
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1197;
            this.minute_value();
            this.state = 1199;
            var la_ = this._interp.adaptivePredict(this._input,162,this._ctx);
            if(la_===1) {
                this.state = 1198;
                this.second_value();

            }
            this.state = 1202;
            var la_ = this._interp.adaptivePredict(this._input,163,this._ctx);
            if(la_===1) {
                this.state = 1201;
                this.millisecond_value();

            }
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1204;
            this.second_value();
            this.state = 1206;
            var la_ = this._interp.adaptivePredict(this._input,164,this._ctx);
            if(la_===1) {
                this.state = 1205;
                this.millisecond_value();

            }
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1208;
            this.millisecond_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Year_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_year_value;
    return this;
}

Year_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Year_valueContext.prototype.constructor = Year_valueContext;

Year_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Year_valueContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

Year_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterYear_value(this);
	}
};

Year_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitYear_value(this);
	}
};




SiddhiQLParser.Year_valueContext = Year_valueContext;

SiddhiQLParser.prototype.year_value = function() {

    var localctx = new Year_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, SiddhiQLParser.RULE_year_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1211;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1212;
        this.match(SiddhiQLParser.YEARS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Month_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_month_value;
    return this;
}

Month_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Month_valueContext.prototype.constructor = Month_valueContext;

Month_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Month_valueContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

Month_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMonth_value(this);
	}
};

Month_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMonth_value(this);
	}
};




SiddhiQLParser.Month_valueContext = Month_valueContext;

SiddhiQLParser.prototype.month_value = function() {

    var localctx = new Month_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, SiddhiQLParser.RULE_month_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1214;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1215;
        this.match(SiddhiQLParser.MONTHS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Week_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_week_value;
    return this;
}

Week_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Week_valueContext.prototype.constructor = Week_valueContext;

Week_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Week_valueContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

Week_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWeek_value(this);
	}
};

Week_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWeek_value(this);
	}
};




SiddhiQLParser.Week_valueContext = Week_valueContext;

SiddhiQLParser.prototype.week_value = function() {

    var localctx = new Week_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, SiddhiQLParser.RULE_week_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1217;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1218;
        this.match(SiddhiQLParser.WEEKS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Day_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_day_value;
    return this;
}

Day_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Day_valueContext.prototype.constructor = Day_valueContext;

Day_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Day_valueContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

Day_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDay_value(this);
	}
};

Day_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDay_value(this);
	}
};




SiddhiQLParser.Day_valueContext = Day_valueContext;

SiddhiQLParser.prototype.day_value = function() {

    var localctx = new Day_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, SiddhiQLParser.RULE_day_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1220;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1221;
        this.match(SiddhiQLParser.DAYS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Hour_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_hour_value;
    return this;
}

Hour_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hour_valueContext.prototype.constructor = Hour_valueContext;

Hour_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Hour_valueContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

Hour_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterHour_value(this);
	}
};

Hour_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitHour_value(this);
	}
};




SiddhiQLParser.Hour_valueContext = Hour_valueContext;

SiddhiQLParser.prototype.hour_value = function() {

    var localctx = new Hour_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, SiddhiQLParser.RULE_hour_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1223;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1224;
        this.match(SiddhiQLParser.HOURS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Minute_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_minute_value;
    return this;
}

Minute_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Minute_valueContext.prototype.constructor = Minute_valueContext;

Minute_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Minute_valueContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

Minute_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMinute_value(this);
	}
};

Minute_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMinute_value(this);
	}
};




SiddhiQLParser.Minute_valueContext = Minute_valueContext;

SiddhiQLParser.prototype.minute_value = function() {

    var localctx = new Minute_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, SiddhiQLParser.RULE_minute_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1226;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1227;
        this.match(SiddhiQLParser.MINUTES);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Second_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_second_value;
    return this;
}

Second_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Second_valueContext.prototype.constructor = Second_valueContext;

Second_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Second_valueContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

Second_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSecond_value(this);
	}
};

Second_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSecond_value(this);
	}
};




SiddhiQLParser.Second_valueContext = Second_valueContext;

SiddhiQLParser.prototype.second_value = function() {

    var localctx = new Second_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, SiddhiQLParser.RULE_second_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1229;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1230;
        this.match(SiddhiQLParser.SECONDS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Millisecond_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_millisecond_value;
    return this;
}

Millisecond_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Millisecond_valueContext.prototype.constructor = Millisecond_valueContext;

Millisecond_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Millisecond_valueContext.prototype.MILLISECONDS = function() {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

Millisecond_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMillisecond_value(this);
	}
};

Millisecond_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMillisecond_value(this);
	}
};




SiddhiQLParser.Millisecond_valueContext = Millisecond_valueContext;

SiddhiQLParser.prototype.millisecond_value = function() {

    var localctx = new Millisecond_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, SiddhiQLParser.RULE_millisecond_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1232;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1233;
        this.match(SiddhiQLParser.MILLISECONDS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_double_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_double_value;
    return this;
}

Signed_double_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_double_valueContext.prototype.constructor = Signed_double_valueContext;

Signed_double_valueContext.prototype.DOUBLE_LITERAL = function() {
    return this.getToken(SiddhiQLParser.DOUBLE_LITERAL, 0);
};

Signed_double_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_double_value(this);
	}
};

Signed_double_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_double_value(this);
	}
};




SiddhiQLParser.Signed_double_valueContext = Signed_double_valueContext;

SiddhiQLParser.prototype.signed_double_value = function() {

    var localctx = new Signed_double_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, SiddhiQLParser.RULE_signed_double_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1236;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1235;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1238;
        this.match(SiddhiQLParser.DOUBLE_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_long_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_long_value;
    return this;
}

Signed_long_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_long_valueContext.prototype.constructor = Signed_long_valueContext;

Signed_long_valueContext.prototype.LONG_LITERAL = function() {
    return this.getToken(SiddhiQLParser.LONG_LITERAL, 0);
};

Signed_long_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_long_value(this);
	}
};

Signed_long_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_long_value(this);
	}
};




SiddhiQLParser.Signed_long_valueContext = Signed_long_valueContext;

SiddhiQLParser.prototype.signed_long_value = function() {

    var localctx = new Signed_long_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, SiddhiQLParser.RULE_signed_long_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1241;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1240;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1243;
        this.match(SiddhiQLParser.LONG_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_float_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_float_value;
    return this;
}

Signed_float_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_float_valueContext.prototype.constructor = Signed_float_valueContext;

Signed_float_valueContext.prototype.FLOAT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.FLOAT_LITERAL, 0);
};

Signed_float_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_float_value(this);
	}
};

Signed_float_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_float_value(this);
	}
};




SiddhiQLParser.Signed_float_valueContext = Signed_float_valueContext;

SiddhiQLParser.prototype.signed_float_value = function() {

    var localctx = new Signed_float_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, SiddhiQLParser.RULE_signed_float_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1246;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1245;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1248;
        this.match(SiddhiQLParser.FLOAT_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_int_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_int_value;
    return this;
}

Signed_int_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_int_valueContext.prototype.constructor = Signed_int_valueContext;

Signed_int_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Signed_int_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_int_value(this);
	}
};

Signed_int_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_int_value(this);
	}
};




SiddhiQLParser.Signed_int_valueContext = Signed_int_valueContext;

SiddhiQLParser.prototype.signed_int_value = function() {

    var localctx = new Signed_int_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 194, SiddhiQLParser.RULE_signed_int_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1251;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1250;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1253;
        this.match(SiddhiQLParser.INT_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Bool_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_bool_value;
    return this;
}

Bool_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Bool_valueContext.prototype.constructor = Bool_valueContext;

Bool_valueContext.prototype.TRUE = function() {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

Bool_valueContext.prototype.FALSE = function() {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

Bool_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBool_value(this);
	}
};

Bool_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBool_value(this);
	}
};




SiddhiQLParser.Bool_valueContext = Bool_valueContext;

SiddhiQLParser.prototype.bool_value = function() {

    var localctx = new Bool_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, SiddhiQLParser.RULE_bool_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1255;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.FALSE || _la===SiddhiQLParser.TRUE)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function String_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_string_value;
    return this;
}

String_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
String_valueContext.prototype.constructor = String_valueContext;

String_valueContext.prototype.STRING_LITERAL = function() {
    return this.getToken(SiddhiQLParser.STRING_LITERAL, 0);
};

String_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterString_value(this);
	}
};

String_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitString_value(this);
	}
};




SiddhiQLParser.String_valueContext = String_valueContext;

SiddhiQLParser.prototype.string_value = function() {

    var localctx = new String_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, SiddhiQLParser.RULE_string_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1257;
        this.match(SiddhiQLParser.STRING_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


SiddhiQLParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 33:
			return this.every_pattern_source_chain_sempred(localctx, predIndex);
	case 34:
			return this.pattern_source_chain_sempred(localctx, predIndex);
	case 43:
			return this.sequence_source_chain_sempred(localctx, predIndex);
	case 61:
			return this.math_operation_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

SiddhiQLParser.prototype.every_pattern_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 3);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.pattern_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 1:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.sequence_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 2:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.math_operation_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 3:
			return this.precpred(this._ctx, 10);
		case 4:
			return this.precpred(this._ctx, 9);
		case 5:
			return this.precpred(this._ctx, 8);
		case 6:
			return this.precpred(this._ctx, 7);
		case 7:
			return this.precpred(this._ctx, 5);
		case 8:
			return this.precpred(this._ctx, 4);
		case 9:
			return this.precpred(this._ctx, 6);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.SiddhiQLParser = SiddhiQLParser;
