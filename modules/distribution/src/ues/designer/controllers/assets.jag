<%
(function () {
    var log = new Log();
    var carbon = require('carbon');
    var config = require('/configs/designer.json');

    var storeType = config.store.type;
    var storePath = '/extensions/stores/' + storeType + '/index.js';
    var store = require(storePath);

    var serverUrl = (function () {
        var url = config.store.url;
        if (url) {
            return url;
        }
        //TODO: get host name from carbon.xml
        var ip = carbon.server.ip;
        var port = carbon.server.httpsPort;
        url = 'https://' + ip + ':' + port;
        return url;
    }());

    var id;
    var assetType = request.getParameter('type');
    var method = request.getMethod();

    response.contentType = 'application/json';

    var assets;
    var matcher = new URIMatcher(request.getRequestURI());
    //TODO: what happen when the context is changed or mapped via reverse proxy
    if (matcher.match('/{context}/assets/{id}')) {
        id = matcher.elements().id;
        if (method === 'GET') {
            assets = store.findOne(assetType, id);
            if (!assets) {
                response.sendError(404, JSON.stringify({
                    error: true
                }));
                return;
            }
            print(assets);
            return;
        }
        if (method === 'PUT') {
            //TODO
        }
        response.sendError(405, JSON.stringify({
            error: true
        }));
        return;
    }

    if (matcher.match('/{context}/assets')) {
        id = matcher.elements().id;
        if (method === 'GET') {
            assets = store.find(assetType);
            print(assets);
            return;
        }
        if (method === 'PUT') {
            //TODO
        }
        response.sendError(405, JSON.stringify({
            error: true
        }));
        return;
    }

    response.sendError(404, JSON.stringify({
        error: true
    }));
}());
%>