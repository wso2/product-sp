<%
var user;
var dashboard;
var page;
var urlPrefix;
var tenantPrefix;

(function () {
    var log = new Log();

    var configs = require('/configs/designer.json');
    tenantPrefix = configs.tenantPrefix + '/{domain}';

    var utils = require('/modules/utils.js');
    var path = request.getRequestURI();
    urlPrefix = utils.relativePrefix(path);

    var usr = require('/modules/user.js');
    user = usr.current();

    var buildOptions = function (vars) {
        if (user) {
            user.secured = true;
            return user;
        }
        return {
            domain: vars.domain
        };
    };

    var sendLogin = function () {
        var query = request.getQueryString();
        var dest = path + (query ? '?' + query : '');
        response.sendRedirect(urlPrefix + 'login?destination=' + dest);
    };

    var vars;
    var editor = request.getParameter('editor');
    var dashboards = require('/modules/dashboards.js');
    var matcher = new URIMatcher(request.getRequestURI());
    if (matcher.match('/{context}/dashboards/{id}') ||
            matcher.match('/{context}' + tenantPrefix + '/dashboards/{id}')) {
        vars = matcher.elements();
        utils.sandbox(buildOptions(vars), function () {
            dashboard = dashboards.findOne(vars.id);
        });
    } else if (matcher.match('/{context}/dashboards/{id}/{page}') ||
            matcher.match('/{context}' + tenantPrefix + '/dashboards/{id}/{page}')) {
        vars = matcher.elements();
        utils.sandbox(buildOptions(vars), function () {
            dashboard = dashboards.findOne(vars.id);
        });
        page = vars.page;
    } else if (matcher.match('/{context}/') || matcher.match('/{context}' + tenantPrefix + '/') ||
            matcher.match('/{context}') || matcher.match('/{context}' + tenantPrefix) ||
            matcher.match('/{context}/dashboards/') || matcher.match('/{context}' + tenantPrefix + '/dashboards/') ||
            matcher.match('/{context}/dashboards') || matcher.match('/{context}' + tenantPrefix + '/dashboards')) {
        if (!user) {
            sendLogin();
            return;
        }
        if (!utils.allowed(user.roles, configs.designers)) {
            response.sendError(401, 'designer access not authorized');
            return;
        }
        include('dashboard-designer.jag');
        return;
    } else {
        response.sendError(404, 'requested dashboard cannot be found');
        return;
    }

    if (!dashboard) {
        response.sendError(404, 'requested dashboard cannot be found');
        return;
    }
    var carbon = require('carbon');
    var anonRole = carbon.user.anonRole;
    var permissions = dashboard.permissions;

    if (!user) {
        if (permissions.viewers.indexOf(anonRole) === -1) {
            sendLogin();
            return;
        }
        include('dashboard-renderer.jag');
        return;
    }

    if (editor) {
        if (!utils.allowed(user.roles, configs.designers)) {
            response.sendError(401, 'designer access not authorized');
            return;
        }
        if (!utils.allowed(user.roles, permissions.editors)) {
            response.sendError(401, 'dashboard editing not authorized');
            return;
        }
        include('dashboard-designer.jag');
        return;
    }

    if (!utils.allowed(user.roles, permissions.editors) && !utils.allowed(user.roles, permissions.viewers)) {
        response.sendError(401, 'designer access not authorized');
        return;
    }
    include('dashboard-renderer.jag');
}());
%>