<?xml version="1.0" encoding="utf-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<Module xmlns:os="http://ns.opensocial.org/2008/markup" xmlns:myspace="http://ns.opensocial.org/2008/x" xmlns:my="http://ns.opensocial.org/2008/z">
  <ModulePrefs title="OsVar Test Gadget" description="Test cases on osVar"
  thumbnail=""
  >
    <Require feature="opensocial-1.0"/>
    <Require feature="opensocial-templates"/>
  </ModulePrefs>
  <Content type="html" view="canvas">
    <script type="text/os-data">
      <os:ViewerRequest key='vwr' />
      <os:PeopleRequest key='myfriends' userid="@viewer" groupid="@friends" />
      <os:Var key="dpVar" >I am registered with Data Pipeline</os:Var>
      <os:Var key="jsonArrayVar" >[1,"one", "three"]</os:Var>
      <os:Var key="jsonObjectVar" >{"id":'jsonId',"displayName":"faux Person"}</os:Var>
    </script>


    <script type="text/os-template" tag="vartest:Embedded">
<div style="border:4px solid gray;padding:4px;margin:10px;float:left;">
vartest:Embedded tag <br/>
<b>My.someVal:</b> ${My.someVal}
</div>
    </script>


<script type="text/os-template" tag="vartest:InDefinition">
	<os:Var key="altKey" >Built altKey contains someVal: ${My.someVal}</os:Var>
	<div style="border:4px solid red;padding:4px;margin:10px;float:left;">
	vartest:InDefinition tag <br/>
	<b>altKey:</b> ${altKey}
	</div>
</script>

<script type="text/os-template" tag="vartest:InDefinition2">
	<os:Var key="altKey" >Built altKey contains someVal: ${My.someVal}</os:Var>
	<div style="border:4px solid orange;padding:4px;margin:10px;float:left;">
	vartest:InDefinition2 tag <br/>
	<b>altKey:</b> ${My.altKey}
	</div>
</script>



    <script type="text/os-template">
<h1>os:Var Test Cases</h1>
<p>
Testing var "foo"
</p>
<p>Before set: ${foo}</p>
<os:Var key="foo" value="0" />
<p>Initial set: ${foo}</p>
<os:Var key="foo" >${foo + 1}</os:Var>
<p>Added one with EL: ${foo}</p>

<os:Var key="sum" value="0" />
<h3>Looping increment to sum</h3>
        <os:Repeat expression="${Top.myfriends}">
<os:Var key="sum" value="${sum+1}" />
          <div>
		  Item: ${Context.Index} is ${Cur.displayName}
		  </div>
        </os:Repeat>
<p>Sum: ${sum}</p>

<hr />
<h2>Custom Tags</h2>
<vartest:Embedded someVal="Created with attr param" />
<vartest:Embedded >
<someVal>Created with Element Param</someVal>
</vartest:Embedded>

<vartest:Embedded >
<os:Var key="someVal">osVar registered value</os:Var>
</vartest:Embedded>

<br style="clear:both;" />

<vartest:InDefinition >
<os:Var key="someVal">Any value will do here</os:Var>
</vartest:InDefinition>

<vartest:InDefinition2 >
<os:Var key="someVal">Another value is good</os:Var>
</vartest:InDefinition2>


<br style="clear:both;" />
<p>Deregistered altKey (should be empty): <span id='afterDeregKey'>${altKey}</span></p>


<hr style="clear:left;" />
<h2>Data Pipeline variables</h2>
string: ${dpVar}

<hr />
<h2>Json Data</h2>

jsonArrayVar.length: ${jsonArrayVar.length} <br/>
jsonArrayVar[0]: ${jsonArrayVar[0]} <br/>
jsonArrayVar[1]: ${jsonArrayVar[1]} <br/>
jsonArrayVar[2]: ${jsonArrayVar[2]} <br/>


jsonObjectVar.length: ${jsonObjectVar.length} <br/>
jsonObjectVar.id: ${jsonObjectVar.id} <br/>
jsonObjectVar.displayName: ${jsonObjectVar.displayName} <br/>

<h4>Repeating Data</h4>
<b>jsonArrayVar</b>
<ul>
<li repeat="jsonArrayVar">${Cur}</li>
</ul>

<b>jsonObjectVar</b>
<ul>
<li repeat="jsonObjectVar">${Cur}</li>
</ul>


<script type="text/javascript">

function testKeyDeregistration(){
	var el = document.getElementById("afterDeregKey");
	if(el.innerHTML.length > 0){
		el.style.backgroundColor="red";
		el.style.color="white";
	}
	else{
		el.style.backgroundColor="#CCFFCC;";
	}
}


testKeyDeregistration();
</script>
	  </script>
  </Content>
</Module>


