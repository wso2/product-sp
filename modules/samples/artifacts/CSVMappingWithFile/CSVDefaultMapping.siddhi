@App:name("CSVDefaultMapping")
@App:description('Publish and receive data events processed within Siddhi to files in CSV default format.')

/*
Purpose:
	This application demonstrates how to configure WSO2 Stream Processor to Publish and receive data events processed within Siddhi to files in CSV default format.
    
Prerequisites:
    * Edit the uri '{WSO2SPHome}/samples/artifacts/CSVMappingWithFile/new/example.csv' by replacing {WSO2SPHome} with the absolute path of your WSO2SP home directory. You can also change the path after {WSO2SPHome} (/samples/artifacts/CSVMappingWithFile/new/) if you want to publish your event file to a different location.

	* Save this sample. If there is no syntax error, the following messages would be shown on the console:
	     * - CSVDefaultMapping.siddhi successfully deployed.
    
Executing & testing the Sample:
	1) Start the Siddhi application by clicking on 'Run'.
	2) If the Siddhi application starts successfully, the following messages are shown on the console:
            * CSVDefaultMapping.siddhi - Started Successfully!

Viewing the Results:
	Source takes input from the home/kalaiyarasi/sp/spnew/product-sp/modules/samples/artifacts/CSVMappingWithFile/new/example.csv then produce the event. 
	example.csv has data in below format 
			1,WSO2,23.5
			2,IBM,2.5
	Sink takes input from source output and produces the output to outputOfCustom.csv in CSV custom format.
		outputOfCustom.csv's data appear in below format
			1,WSO2,100.0
			2,IBM,2.5
			
*/

@source(type='file',
dir.uri='file://{WSO2SPHome}/samples/artifacts/CSVMappingWithFile/new',
action.after.process='NONE',
@map(type='csv'))
define stream UsageStream2 (id int, name string, amount double);

@sink(type='file', file.uri='/{WSO2SPHome}/samples/artifacts/CSVMappingWithFile/new/outputOfDefault.csv' , @map(type='csv'))
define stream InputData (id int, name string, amount double);

from UsageStream2
select *
insert into InputData;



